    1. store_src_rg                   pos = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             kZero = 0
    4. copy_constant                  kTen = 0x41200000 (10.0)
    5. copy_slot_unmasked             $2 = pos(0)
    6. copy_constant                  $3 = colorGreen(1)
    7. max_float                      $2 = max($2, $3)
    8. copy_constant                  $3 = colorGreen(3)
    9. min_float                      $2 = min($2, $3)
   10. copy_constant                  $3 = 0x40A00000 (5.0)
   11. mul_float                      $2 *= $3
   12. copy_slot_unmasked             five = $2
   13. store_condition_mask           $26 = CondMask
   14. store_condition_mask           $46 = CondMask
   15. store_condition_mask           $56 = CondMask
   16. store_condition_mask           $36 = CondMask
   17. store_condition_mask           $76 = CondMask
   18. store_condition_mask           $66 = CondMask
   19. store_condition_mask           $20 = CondMask
   20. store_condition_mask           $70 = CondMask
   21. store_condition_mask           $14 = CondMask
   22. branch_if_no_active_lanes      branch_if_no_active_lanes +32 (label 10 at #54)
   23. store_return_mask              $15 = RetMask
   24. copy_slot_unmasked             five₁ = five
   25. copy_slot_unmasked             i = kZero
   26. store_loop_mask                $16 = LoopMask
   27. jump                           jump +15 (label 11 at #42)
   28. label                          label 0x0000000C
   29. store_condition_mask           $17 = CondMask
   30. copy_slot_unmasked             $18 = i
   31. copy_slot_unmasked             $19 = five₁
   32. cmpeq_float                    $18 = equal($18, $19)
   33. merge_condition_mask           CondMask = $17 & $18
   34. copy_slot_unmasked             $19 = i
   35. copy_slot_masked               [return_loop].result = Mask($19)
   36. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   37. load_condition_mask            CondMask = $17
   38. copy_slot_unmasked             $17 = i
   39. copy_constant                  $18 = 0x3F800000 (1.0)
   40. add_float                      $17 += $18
   41. copy_slot_masked               i = Mask($17)
   42. label                          label 0x0000000B
   43. copy_slot_unmasked             $17 = i
   44. copy_constant                  $18 = 0x41200000 (10.0)
   45. cmplt_float                    $17 = lessThan($17, $18)
   46. merge_loop_mask                LoopMask &= $17
   47. stack_rewind
   48. branch_if_any_active_lanes     branch_if_any_active_lanes -20 (label 12 at #28)
   49. load_loop_mask                 LoopMask = $16
   50. zero_slot_unmasked             $16 = 0
   51. copy_slot_masked               [return_loop].result = Mask($16)
   52. load_return_mask               RetMask = $15
   53. copy_slot_unmasked             $15 = [return_loop].result
   54. label                          label 0x0000000A
   55. copy_constant                  $16 = 0x40A00000 (5.0)
   56. cmpeq_float                    $15 = equal($15, $16)
   57. zero_slot_unmasked             $71 = 0
   58. merge_condition_mask           CondMask = $14 & $15
   59. branch_if_no_active_lanes      branch_if_no_active_lanes +37 (label 9 at #96)
   60. copy_slot_unmasked             five₂ = five
   61. zero_2_slots_unmasked          sum, i₁ = 0
   62. store_loop_mask                $72 = LoopMask
   63. jump                           jump +20 (label 14 at #83)
   64. label                          label 0x0000000F
   65. zero_slot_unmasked             $0 = 0
   66. store_condition_mask           $73 = CondMask
   67. copy_slot_unmasked             $74 = i₁
   68. copy_slot_unmasked             $75 = five₂
   69. cmplt_float                    $74 = lessThan($74, $75)
   70. merge_condition_mask           CondMask = $73 & $74
   71. copy_constant                  $1 = 0xFFFFFFFF
   72. copy_slot_masked               $0 = Mask($1)
   73. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   74. load_condition_mask            CondMask = $73
   75. copy_2_slots_unmasked          $73..74 = sum, i₁
   76. add_float                      $73 += $74
   77. copy_slot_masked               sum = Mask($73)
   78. reenable_loop_mask             LoopMask |= $0
   79. copy_slot_unmasked             $73 = i₁
   80. copy_constant                  $74 = 0x3F800000 (1.0)
   81. add_float                      $73 += $74
   82. copy_slot_masked               i₁ = Mask($73)
   83. label                          label 0x0000000E
   84. copy_slot_unmasked             $73 = i₁
   85. copy_slot_unmasked             $74 = kTen
   86. cmplt_float                    $73 = lessThan($73, $74)
   87. merge_loop_mask                LoopMask &= $73
   88. stack_rewind
   89. branch_if_any_active_lanes     branch_if_any_active_lanes -25 (label 15 at #64)
   90. load_loop_mask                 LoopMask = $72
   91. copy_slot_unmasked             $72 = sum
   92. label                          label 0x0000000D
   93. copy_constant                  $73 = 0x420C0000 (35.0)
   94. cmpeq_float                    $72 = equal($72, $73)
   95. copy_slot_masked               $71 = Mask($72)
   96. label                          label 0x00000009
   97. load_condition_mask            CondMask = $14
   98. zero_slot_unmasked             $21 = 0
   99. merge_condition_mask           CondMask = $70 & $71
  100. branch_if_no_active_lanes      branch_if_no_active_lanes +36 (label 8 at #136)
  101. copy_slot_unmasked             five₃ = five
  102. zero_slot_unmasked             sum₁ = 0
  103. copy_constant                  kOne = 0x3F800000 (1.0)
  104. zero_slot_unmasked             i₂ = 0
  105. store_loop_mask                $22 = LoopMask
  106. jump                           jump +17 (label 17 at #123)
  107. label                          label 0x00000012
  108. store_condition_mask           $23 = CondMask
  109. copy_slot_unmasked             $24 = five₃
  110. copy_slot_unmasked             $25 = i₂
  111. cmplt_float                    $24 = lessThan($24, $25)
  112. merge_condition_mask           CondMask = $23 & $24
  113. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  114. load_condition_mask            CondMask = $23
  115. copy_slot_unmasked             $23 = sum₁
  116. copy_slot_unmasked             $24 = i₂
  117. add_float                      $23 += $24
  118. copy_slot_masked               sum₁ = Mask($23)
  119. copy_slot_unmasked             $23 = i₂
  120. copy_slot_unmasked             $24 = kOne
  121. add_float                      $23 += $24
  122. copy_slot_masked               i₂ = Mask($23)
  123. label                          label 0x00000011
  124. copy_slot_unmasked             $23 = i₂
  125. copy_constant                  $24 = 0x41200000 (10.0)
  126. cmplt_float                    $23 = lessThan($23, $24)
  127. merge_loop_mask                LoopMask &= $23
  128. stack_rewind
  129. branch_if_any_active_lanes     branch_if_any_active_lanes -22 (label 18 at #107)
  130. load_loop_mask                 LoopMask = $22
  131. copy_slot_unmasked             $22 = sum₁
  132. label                          label 0x00000010
  133. copy_constant                  $23 = 0x41700000 (15.0)
  134. cmpeq_float                    $22 = equal($22, $23)
  135. copy_slot_masked               $21 = Mask($22)
  136. label                          label 0x00000008
  137. load_condition_mask            CondMask = $70
  138. zero_slot_unmasked             $67 = 0
  139. merge_condition_mask           CondMask = $20 & $21
  140. branch_if_no_active_lanes      branch_if_no_active_lanes +25 (label 7 at #165)
  141. zero_slot_unmasked             sum₂ = 0
  142. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 20 at #156)
  143. copy_constant                  i₃ = 0x3DFBE76D (0.123)
  144. label                          label 0x00000015
  145. copy_2_slots_unmasked          $68..69 = sum₂, i₃
  146. add_float                      $68 += $69
  147. copy_slot_masked               sum₂ = Mask($68)
  148. copy_slot_unmasked             $68 = i₃
  149. copy_constant                  $69 = 0x3DE353F8 (0.111)
  150. add_float                      $68 += $69
  151. copy_slot_masked               i₃ = Mask($68)
  152. copy_constant                  $69 = 0x3F19999A (0.6)
  153. cmplt_float                    $68 = lessThan($68, $69)
  154. stack_rewind
  155. branch_if_no_active_lanes_eq   branch -11 (label 21 at #144) if no lanes of $68 == 0x00000000 (0.0)
  156. label                          label 0x00000014
  157. copy_slot_unmasked             $68 = sum₂
  158. copy_constant                  $69 = 0x3FDCCCCD (1.725)
  159. sub_float                      $68 -= $69
  160. label                          label 0x00000013
  161. abs_float                      $68 = abs($68)
  162. copy_constant                  $69 = 0x3CCCCCCD (0.025)
  163. cmplt_float                    $68 = lessThan($68, $69)
  164. copy_slot_masked               $67 = Mask($68)
  165. label                          label 0x00000007
  166. load_condition_mask            CondMask = $20
  167. zero_slot_unmasked             $77 = 0
  168. merge_condition_mask           CondMask = $66 & $67
  169. branch_if_no_active_lanes      branch_if_no_active_lanes +28 (label 6 at #197)
  170. copy_constant                  $78 = 0x41100000 (9.0)
  171. swizzle_4                      $78..81 = ($78..81).xxxx
  172. copy_4_slots_unmasked          result = $78..81
  173. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 23 at #186)
  174. copy_constant                  i₄ = 0x3F800000 (1.0)
  175. label                          label 0x00000018
  176. copy_4_slots_unmasked          $78..81 = result(1..3), i₄
  177. copy_4_slots_masked            result = Mask($78..81)
  178. copy_slot_unmasked             $78 = i₄
  179. copy_constant                  $79 = 0x3F800000 (1.0)
  180. add_float                      $78 += $79
  181. copy_slot_masked               i₄ = Mask($78)
  182. copy_constant                  $79 = 0x40400000 (3.0)
  183. cmple_float                    $78 = lessThanEqual($78, $79)
  184. stack_rewind
  185. branch_if_no_active_lanes_eq   branch -10 (label 24 at #175) if no lanes of $78 == 0x00000000 (0.0)
  186. label                          label 0x00000017
  187. copy_4_slots_unmasked          $78..81 = result
  188. copy_constant                  $82 = 0x41100000 (9.0)
  189. copy_constant                  $83 = 0x3F800000 (1.0)
  190. copy_constant                  $84 = 0x40000000 (2.0)
  191. copy_constant                  $85 = 0x40400000 (3.0)
  192. cmpeq_4_floats                 $78..81 = equal($78..81, $82..85)
  193. bitwise_and_2_ints             $78..79 &= $80..81
  194. bitwise_and_int                $78 &= $79
  195. label                          label 0x00000016
  196. copy_slot_masked               $77 = Mask($78)
  197. label                          label 0x00000006
  198. load_condition_mask            CondMask = $66
  199. zero_slot_unmasked             $37 = 0
  200. merge_condition_mask           CondMask = $76 & $77
  201. branch_if_no_active_lanes      branch_if_no_active_lanes +28 (label 5 at #229)
  202. copy_constant                  $38 = 0x41100000 (9.0)
  203. swizzle_4                      $38..41 = ($38..41).xxxx
  204. copy_4_slots_unmasked          result₁ = $38..41
  205. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 26 at #218)
  206. copy_constant                  i₅ = 0x3F800000 (1.0)
  207. label                          label 0x0000001B
  208. copy_4_slots_unmasked          $38..41 = result₁(1..3), i₅
  209. copy_4_slots_masked            result₁ = Mask($38..41)
  210. copy_slot_unmasked             $38 = i₅
  211. copy_constant                  $39 = 0x3F800000 (1.0)
  212. add_float                      $38 += $39
  213. copy_slot_masked               i₅ = Mask($38)
  214. copy_constant                  $39 = 0x40800000 (4.0)
  215. cmplt_float                    $38 = lessThan($38, $39)
  216. stack_rewind
  217. branch_if_no_active_lanes_eq   branch -10 (label 27 at #207) if no lanes of $38 == 0x00000000 (0.0)
  218. label                          label 0x0000001A
  219. copy_4_slots_unmasked          $38..41 = result₁
  220. copy_constant                  $42 = 0x41100000 (9.0)
  221. copy_constant                  $43 = 0x3F800000 (1.0)
  222. copy_constant                  $44 = 0x40000000 (2.0)
  223. copy_constant                  $45 = 0x40400000 (3.0)
  224. cmpeq_4_floats                 $38..41 = equal($38..41, $42..45)
  225. bitwise_and_2_ints             $38..39 &= $40..41
  226. bitwise_and_int                $38 &= $39
  227. label                          label 0x00000019
  228. copy_slot_masked               $37 = Mask($38)
  229. label                          label 0x00000005
  230. load_condition_mask            CondMask = $76
  231. zero_slot_unmasked             $57 = 0
  232. merge_condition_mask           CondMask = $36 & $37
  233. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 4 at #262)
  234. copy_constant                  $58 = 0x41100000 (9.0)
  235. swizzle_4                      $58..61 = ($58..61).xxxx
  236. copy_4_slots_unmasked          result₂ = $58..61
  237. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 29 at #251)
  238. copy_constant                  i₆ = 0x40400000 (3.0)
  239. label                          label 0x0000001E
  240. copy_4_slots_unmasked          $58..61 = result₂(1..3), i₆
  241. copy_4_slots_masked            result₂ = Mask($58..61)
  242. copy_slot_unmasked             $58 = i₆
  243. copy_constant                  $59 = 0x3F800000 (1.0)
  244. sub_float                      $58 -= $59
  245. copy_slot_masked               i₆ = Mask($58)
  246. copy_constant                  $58 = 0x3F800000 (1.0)
  247. copy_slot_unmasked             $59 = i₆
  248. cmple_float                    $58 = lessThanEqual($58, $59)
  249. stack_rewind
  250. branch_if_no_active_lanes_eq   branch -11 (label 30 at #239) if no lanes of $58 == 0x00000000 (0.0)
  251. label                          label 0x0000001D
  252. copy_4_slots_unmasked          $58..61 = result₂
  253. copy_constant                  $62 = 0x41100000 (9.0)
  254. copy_constant                  $63 = 0x40400000 (3.0)
  255. copy_constant                  $64 = 0x40000000 (2.0)
  256. copy_constant                  $65 = 0x3F800000 (1.0)
  257. cmpeq_4_floats                 $58..61 = equal($58..61, $62..65)
  258. bitwise_and_2_ints             $58..59 &= $60..61
  259. bitwise_and_int                $58 &= $59
  260. label                          label 0x0000001C
  261. copy_slot_masked               $57 = Mask($58)
  262. label                          label 0x00000004
  263. load_condition_mask            CondMask = $36
  264. zero_slot_unmasked             $47 = 0
  265. merge_condition_mask           CondMask = $56 & $57
  266. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 3 at #295)
  267. copy_constant                  $48 = 0x41100000 (9.0)
  268. swizzle_4                      $48..51 = ($48..51).xxxx
  269. copy_4_slots_unmasked          result₃ = $48..51
  270. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 32 at #284)
  271. copy_constant                  i₇ = 0x40400000 (3.0)
  272. label                          label 0x00000021
  273. copy_4_slots_unmasked          $48..51 = result₃(1..3), i₇
  274. copy_4_slots_masked            result₃ = Mask($48..51)
  275. copy_slot_unmasked             $48 = i₇
  276. copy_constant                  $49 = 0x3F800000 (1.0)
  277. sub_float                      $48 -= $49
  278. copy_slot_masked               i₇ = Mask($48)
  279. zero_slot_unmasked             $48 = 0
  280. copy_slot_unmasked             $49 = i₇
  281. cmplt_float                    $48 = lessThan($48, $49)
  282. stack_rewind
  283. branch_if_no_active_lanes_eq   branch -11 (label 33 at #272) if no lanes of $48 == 0x00000000 (0.0)
  284. label                          label 0x00000020
  285. copy_4_slots_unmasked          $48..51 = result₃
  286. copy_constant                  $52 = 0x41100000 (9.0)
  287. copy_constant                  $53 = 0x40400000 (3.0)
  288. copy_constant                  $54 = 0x40000000 (2.0)
  289. copy_constant                  $55 = 0x3F800000 (1.0)
  290. cmpeq_4_floats                 $48..51 = equal($48..51, $52..55)
  291. bitwise_and_2_ints             $48..49 &= $50..51
  292. bitwise_and_int                $48 &= $49
  293. label                          label 0x0000001F
  294. copy_slot_masked               $47 = Mask($48)
  295. label                          label 0x00000003
  296. load_condition_mask            CondMask = $56
  297. zero_slot_unmasked             $27 = 0
  298. merge_condition_mask           CondMask = $46 & $47
  299. branch_if_no_active_lanes      branch_if_no_active_lanes +20 (label 2 at #319)
  300. copy_constant                  $28 = 0x41100000 (9.0)
  301. swizzle_4                      $28..31 = ($28..31).xxxx
  302. copy_4_slots_unmasked          result₄ = $28..31
  303. branch_if_no_active_lanes      branch_if_no_active_lanes +5 (label 35 at #308)
  304. copy_constant                  i₈ = 0x3F800000 (1.0)
  305. label                          label 0x00000024
  306. copy_4_slots_unmasked          $28..31 = result₄(1..3), i₈
  307. copy_4_slots_masked            result₄ = Mask($28..31)
  308. label                          label 0x00000023
  309. copy_4_slots_unmasked          $28..31 = result₄
  310. copy_constant                  $32 = 0x41100000 (9.0)
  311. copy_constant                  $33 = 0x41100000 (9.0)
  312. copy_constant                  $34 = 0x41100000 (9.0)
  313. copy_constant                  $35 = 0x3F800000 (1.0)
  314. cmpeq_4_floats                 $28..31 = equal($28..31, $32..35)
  315. bitwise_and_2_ints             $28..29 &= $30..31
  316. bitwise_and_int                $28 &= $29
  317. label                          label 0x00000022
  318. copy_slot_masked               $27 = Mask($28)
  319. label                          label 0x00000002
  320. load_condition_mask            CondMask = $46
  321. zero_slot_unmasked             $2 = 0
  322. merge_condition_mask           CondMask = $26 & $27
  323. branch_if_no_active_lanes      branch_if_no_active_lanes +28 (label 1 at #351)
  324. copy_constant                  $3 = 0x41100000 (9.0)
  325. swizzle_4                      $3..6 = ($3..6).xxxx
  326. copy_4_slots_unmasked          result₅ = $3..6
  327. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 38 at #340)
  328. copy_constant                  i₉ = 0x3F800000 (1.0)
  329. label                          label 0x00000027
  330. copy_4_slots_unmasked          $3..6 = result₅(1..3), i₉
  331. copy_4_slots_masked            result₅ = Mask($3..6)
  332. copy_slot_unmasked             $3 = i₉
  333. copy_constant                  $4 = 0x3F800000 (1.0)
  334. add_float                      $3 += $4
  335. copy_slot_masked               i₉ = Mask($3)
  336. copy_constant                  $4 = 0x40800000 (4.0)
  337. cmpne_float                    $3 = notEqual($3, $4)
  338. stack_rewind
  339. branch_if_no_active_lanes_eq   branch -10 (label 39 at #329) if no lanes of $3 == 0x00000000 (0.0)
  340. label                          label 0x00000026
  341. copy_4_slots_unmasked          $3..6 = result₅
  342. copy_constant                  $7 = 0x41100000 (9.0)
  343. copy_constant                  $8 = 0x3F800000 (1.0)
  344. copy_constant                  $9 = 0x40000000 (2.0)
  345. copy_constant                  $10 = 0x40400000 (3.0)
  346. cmpeq_4_floats                 $3..6 = equal($3..6, $7..10)
  347. bitwise_and_2_ints             $3..4 &= $5..6
  348. bitwise_and_int                $3 &= $4
  349. label                          label 0x00000025
  350. copy_slot_masked               $2 = Mask($3)
  351. label                          label 0x00000001
  352. load_condition_mask            CondMask = $26
  353. swizzle_4                      $2..5 = ($2..5).xxxx
  354. copy_4_constants               $6..9 = colorRed
  355. copy_4_constants               $10..13 = colorGreen
  356. mix_4_ints                     $2..5 = mix($6..9, $10..13, $2..5)
  357. load_src                       src.rgba = $2..5
