    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             $0 = 0
    4. swizzle_4                      $0..3 = ($0..3).xxxx
    5. copy_4_slots_unmasked          zero = $0..3
    6. copy_constant                  $0 = 0x3F800000 (1.0)
    7. swizzle_4                      $0..3 = ($0..3).xxxx
    8. copy_4_slots_unmasked          one = $0..3
    9. copy_4_constants               $0..3 = colorGreen
   10. copy_4_slots_unmasked          green = $0..3
   11. copy_4_slots_unmasked          $4..7 = one
   12. mul_4_floats                   $0..3 *= $4..7
   13. copy_4_slots_unmasked          $4..7 = zero
   14. add_4_floats                   $0..3 += $4..7
   15. copy_4_slots_masked            green = Mask($0..3)
   16. copy_4_constants               $0..3 = colorRed
   17. copy_4_slots_unmasked          red = $0..3
   18. copy_4_slots_unmasked          $4..7 = zero
   19. add_4_floats                   $0..3 += $4..7
   20. copy_4_slots_unmasked          $4..7 = one
   21. mul_4_floats                   $0..3 *= $4..7
   22. copy_4_slots_masked            red = Mask($0..3)
   23. store_condition_mask           $13 = CondMask
   24. store_condition_mask           $26 = CondMask
   25. store_condition_mask           $31 = CondMask
   26. store_condition_mask           $18 = CondMask
   27. store_condition_mask           $48 = CondMask
   28. store_condition_mask           $36 = CondMask
   29. store_condition_mask           $8 = CondMask
   30. branch_if_no_active_lanes      branch_if_no_active_lanes +16 (#46)
   31. store_return_mask              $9 = RetMask
   32. copy_constant                  $10 = 0x3F000000 (0.5)
   33. copy_slot_unmasked             mp = $10
   34. copy_slot_unmasked             hp = $10
   35. copy_constant                  $10 = 0x00000002 (2.802597e-45)
   36. copy_slot_unmasked             ihp = $10
   37. copy_slot_unmasked             imp = $10
   38. copy_2_slots_unmasked          $10..11 = mp(0..1)
   39. cmpeq_float                    $10 = equal($10, $11)
   40. copy_2_slots_unmasked          $11..12 = ihp(0..1)
   41. cmpeq_int                      $11 = equal($11, $12)
   42. bitwise_and_int                $10 &= $11
   43. copy_slot_masked               [test_scalar].result = Mask($10)
   44. load_return_mask               RetMask = $9
   45. copy_slot_unmasked             $9 = [test_scalar].result
   46. zero_slot_unmasked             $37 = 0
   47. merge_condition_mask           CondMask = $8 & $9
   48. branch_if_no_active_lanes      branch_if_no_active_lanes +62 (#110)
   49. store_return_mask              $38 = RetMask
   50. copy_constant                  $39 = 0x40000000 (2.0)
   51. copy_slot_unmasked             $40 = $39
   52. copy_2_slots_unmasked          mp2 = $39..40
   53. copy_2_slots_unmasked          hp2 = $39..40
   54. copy_constant                  $39 = 0x40400000 (3.0)
   55. swizzle_3                      $39..41 = ($39..41).xxx
   56. copy_3_slots_unmasked          mp3 = $39..41
   57. copy_3_slots_unmasked          hp3 = $39..41
   58. copy_constant                  $39 = 0x40800000 (4.0)
   59. swizzle_4                      $39..42 = ($39..42).xxxx
   60. copy_4_slots_unmasked          mp4 = $39..42
   61. copy_4_slots_unmasked          hp4 = $39..42
   62. copy_constant                  $39 = 0x00000002 (2.802597e-45)
   63. copy_slot_unmasked             $40 = $39
   64. copy_2_slots_unmasked          ihp2 = $39..40
   65. copy_2_slots_unmasked          imp2 = $39..40
   66. copy_constant                  $39 = 0x00000003 (4.203895e-45)
   67. swizzle_3                      $39..41 = ($39..41).xxx
   68. copy_3_slots_unmasked          ihp3 = $39..41
   69. copy_3_slots_unmasked          imp3 = $39..41
   70. copy_constant                  $39 = 0x00000004 (5.605194e-45)
   71. swizzle_4                      $39..42 = ($39..42).xxxx
   72. copy_4_slots_unmasked          ihp4 = $39..42
   73. copy_4_slots_unmasked          imp4 = $39..42
   74. copy_4_slots_unmasked          $39..42 = mp2(0..3)
   75. cmpeq_2_floats                 $39..40 = equal($39..40, $41..42)
   76. bitwise_and_int                $39 &= $40
   77. copy_3_slots_unmasked          $40..42 = hp3
   78. copy_3_slots_unmasked          $43..45 = mp3
   79. cmpeq_3_floats                 $40..42 = equal($40..42, $43..45)
   80. bitwise_and_int                $41 &= $42
   81. bitwise_and_int                $40 &= $41
   82. bitwise_and_int                $39 &= $40
   83. copy_4_slots_unmasked          $40..43 = mp4
   84. copy_4_slots_unmasked          $44..47 = hp4
   85. cmpeq_4_floats                 $40..43 = equal($40..43, $44..47)
   86. bitwise_and_2_ints             $40..41 &= $42..43
   87. bitwise_and_int                $40 &= $41
   88. bitwise_and_int                $39 &= $40
   89. copy_2_slots_unmasked          $40..41 = imp2
   90. copy_2_slots_unmasked          $42..43 = ihp2
   91. cmpeq_2_ints                   $40..41 = equal($40..41, $42..43)
   92. bitwise_and_int                $40 &= $41
   93. bitwise_and_int                $39 &= $40
   94. copy_4_slots_unmasked          $40..43 = ihp3(0..3)
   95. copy_2_slots_unmasked          $44..45 = imp3(1..2)
   96. cmpeq_3_ints                   $40..42 = equal($40..42, $43..45)
   97. bitwise_and_int                $41 &= $42
   98. bitwise_and_int                $40 &= $41
   99. bitwise_and_int                $39 &= $40
  100. copy_4_slots_unmasked          $40..43 = imp4
  101. copy_4_slots_unmasked          $44..47 = ihp4
  102. cmpeq_4_ints                   $40..43 = equal($40..43, $44..47)
  103. bitwise_and_2_ints             $40..41 &= $42..43
  104. bitwise_and_int                $40 &= $41
  105. bitwise_and_int                $39 &= $40
  106. copy_slot_masked               [test_vector].result = Mask($39)
  107. load_return_mask               RetMask = $38
  108. copy_slot_unmasked             $38 = [test_vector].result
  109. copy_slot_masked               $37 = Mask($38)
  110. load_condition_mask            CondMask = $8
  111. zero_slot_unmasked             $49 = 0
  112. merge_condition_mask           CondMask = $36 & $37
  113. branch_if_no_active_lanes      branch_if_no_active_lanes +63 (#176)
  114. store_return_mask              $50 = RetMask
  115. zero_slot_unmasked             $51 = 0
  116. copy_constant                  $52 = 0x40000000 (2.0)
  117. swizzle_4                      $51..54 = ($51..54).yxxy
  118. copy_4_slots_unmasked          mp2 = $51..54
  119. copy_4_slots_unmasked          hp2 = $51..54
  120. zero_slot_unmasked             $51 = 0
  121. copy_constant                  $52 = 0x40400000 (3.0)
  122. shuffle                        $51..59 = ($51..59)[1 0 0 0 1 0 0 0 1]
  123. copy_4_slots_unmasked          mp3(0..3) = $51..54
  124. copy_4_slots_unmasked          mp3(4..7) = $55..58
  125. copy_slot_unmasked             mp3(8) = $59
  126. copy_4_slots_unmasked          hp3(0..3) = $51..54
  127. copy_4_slots_unmasked          hp3(4..7) = $55..58
  128. copy_slot_unmasked             hp3(8) = $59
  129. zero_slot_unmasked             $51 = 0
  130. copy_constant                  $52 = 0x40800000 (4.0)
  131. shuffle                        $51..66 = ($51..66)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  132. copy_4_slots_unmasked          mp4(0..3) = $51..54
  133. copy_4_slots_unmasked          mp4(4..7) = $55..58
  134. copy_4_slots_unmasked          mp4(8..11) = $59..62
  135. copy_4_slots_unmasked          mp4(12..15) = $63..66
  136. copy_4_slots_unmasked          hp4(0..3) = $51..54
  137. copy_4_slots_unmasked          hp4(4..7) = $55..58
  138. copy_4_slots_unmasked          hp4(8..11) = $59..62
  139. copy_4_slots_unmasked          hp4(12..15) = $63..66
  140. copy_4_slots_unmasked          $51..54 = mp2
  141. copy_4_slots_unmasked          $55..58 = hp2
  142. cmpeq_4_floats                 $51..54 = equal($51..54, $55..58)
  143. bitwise_and_2_ints             $51..52 &= $53..54
  144. bitwise_and_int                $51 &= $52
  145. copy_4_slots_unmasked          $52..55 = hp3(0..3)
  146. copy_4_slots_unmasked          $56..59 = hp3(4..7)
  147. copy_slot_unmasked             $60 = hp3(8)
  148. copy_4_slots_unmasked          $61..64 = mp3(0..3)
  149. copy_4_slots_unmasked          $65..68 = mp3(4..7)
  150. copy_slot_unmasked             $69 = mp3(8)
  151. cmpeq_n_floats                 $52..60 = equal($52..60, $61..69)
  152. bitwise_and_4_ints             $53..56 &= $57..60
  153. bitwise_and_2_ints             $53..54 &= $55..56
  154. bitwise_and_int                $53 &= $54
  155. bitwise_and_int                $52 &= $53
  156. bitwise_and_int                $51 &= $52
  157. copy_4_slots_unmasked          $52..55 = mp4(0..3)
  158. copy_4_slots_unmasked          $56..59 = mp4(4..7)
  159. copy_4_slots_unmasked          $60..63 = mp4(8..11)
  160. copy_4_slots_unmasked          $64..67 = mp4(12..15)
  161. copy_4_slots_unmasked          $68..71 = hp4(0..3)
  162. copy_4_slots_unmasked          $72..75 = hp4(4..7)
  163. copy_4_slots_unmasked          $76..79 = hp4(8..11)
  164. copy_4_slots_unmasked          $80..83 = hp4(12..15)
  165. cmpeq_n_floats                 $52..67 = equal($52..67, $68..83)
  166. bitwise_and_4_ints             $60..63 &= $64..67
  167. bitwise_and_4_ints             $56..59 &= $60..63
  168. bitwise_and_4_ints             $52..55 &= $56..59
  169. bitwise_and_2_ints             $52..53 &= $54..55
  170. bitwise_and_int                $52 &= $53
  171. bitwise_and_int                $51 &= $52
  172. copy_slot_masked               [test_matrix].result = Mask($51)
  173. load_return_mask               RetMask = $50
  174. copy_slot_unmasked             $50 = [test_matrix].result
  175. copy_slot_masked               $49 = Mask($50)
  176. load_condition_mask            CondMask = $36
  177. zero_slot_unmasked             $19 = 0
  178. merge_condition_mask           CondMask = $48 & $49
  179. branch_if_no_active_lanes      branch_if_no_active_lanes +38 (#217)
  180. store_return_mask              $20 = RetMask
  181. zero_slot_unmasked             mf[0] = 0
  182. copy_constant                  $21 = 0x3F800000 (1.0)
  183. copy_slot_masked               mf[0] = Mask($21)
  184. zero_slot_unmasked             hf[0] = 0
  185. copy_constant                  $21 = 0x3F800000 (1.0)
  186. copy_slot_masked               hf[0] = Mask($21)
  187. zero_4_slots_unmasked          mv[0](0..3) = 0
  188. zero_slot_unmasked             $21 = 0
  189. copy_constant                  $22 = 0x3F800000 (1.0)
  190. copy_2_slots_masked            mv[0] = Mask($21..22)
  191. copy_constant                  $21 = 0x40000000 (2.0)
  192. copy_constant                  $22 = 0x40400000 (3.0)
  193. copy_2_slots_masked            mv[1] = Mask($21..22)
  194. zero_4_slots_unmasked          hv[0](0..3) = 0
  195. zero_slot_unmasked             $21 = 0
  196. copy_constant                  $22 = 0x3F800000 (1.0)
  197. copy_2_slots_masked            hv[0] = Mask($21..22)
  198. copy_constant                  $21 = 0x40000000 (2.0)
  199. copy_constant                  $22 = 0x40400000 (3.0)
  200. copy_2_slots_masked            hv[1] = Mask($21..22)
  201. copy_2_slots_unmasked          $21..22 = mf[0](0..1)
  202. cmpeq_float                    $21 = equal($21, $22)
  203. copy_2_slots_unmasked          $22..23 = hv[0]
  204. copy_2_slots_unmasked          $24..25 = mv[0]
  205. cmpeq_2_floats                 $22..23 = equal($22..23, $24..25)
  206. bitwise_and_int                $22 &= $23
  207. bitwise_and_int                $21 &= $22
  208. copy_2_slots_unmasked          $22..23 = mv[1]
  209. copy_2_slots_unmasked          $24..25 = hv[1]
  210. cmpeq_2_floats                 $22..23 = equal($22..23, $24..25)
  211. bitwise_and_int                $22 &= $23
  212. bitwise_and_int                $21 &= $22
  213. copy_slot_masked               [test_array].result = Mask($21)
  214. load_return_mask               RetMask = $20
  215. copy_slot_unmasked             $20 = [test_array].result
  216. copy_slot_masked               $19 = Mask($20)
  217. load_condition_mask            CondMask = $48
  218. zero_slot_unmasked             $32 = 0
  219. merge_condition_mask           CondMask = $18 & $19
  220. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#230)
  221. store_return_mask              $33 = RetMask
  222. copy_constant                  $34 = 0x3F800000 (1.0)
  223. copy_slot_unmasked             value = $34
  224. copy_constant                  $35 = 0x3F800000 (1.0)
  225. cmpeq_float                    $34 = equal($34, $35)
  226. copy_slot_masked               [highp_param].result = Mask($34)
  227. load_return_mask               RetMask = $33
  228. copy_slot_unmasked             $33 = [highp_param].result
  229. copy_slot_masked               $32 = Mask($33)
  230. load_condition_mask            CondMask = $18
  231. zero_slot_unmasked             $27 = 0
  232. merge_condition_mask           CondMask = $31 & $32
  233. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#243)
  234. store_return_mask              $28 = RetMask
  235. copy_constant                  $29 = 0x40000000 (2.0)
  236. copy_slot_unmasked             value = $29
  237. copy_constant                  $30 = 0x40000000 (2.0)
  238. cmpeq_float                    $29 = equal($29, $30)
  239. copy_slot_masked               [mediump_param].result = Mask($29)
  240. load_return_mask               RetMask = $28
  241. copy_slot_unmasked             $28 = [mediump_param].result
  242. copy_slot_masked               $27 = Mask($28)
  243. load_condition_mask            CondMask = $31
  244. zero_slot_unmasked             $14 = 0
  245. merge_condition_mask           CondMask = $26 & $27
  246. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#256)
  247. store_return_mask              $15 = RetMask
  248. copy_constant                  $16 = 0x40400000 (3.0)
  249. copy_slot_unmasked             value = $16
  250. copy_constant                  $17 = 0x40400000 (3.0)
  251. cmpeq_float                    $16 = equal($16, $17)
  252. copy_slot_masked               [lowp_param].result = Mask($16)
  253. load_return_mask               RetMask = $15
  254. copy_slot_unmasked             $15 = [lowp_param].result
  255. copy_slot_masked               $14 = Mask($15)
  256. load_condition_mask            CondMask = $26
  257. copy_4_slots_unmasked          $0..3 = red
  258. merge_condition_mask           CondMask = $13 & $14
  259. copy_4_slots_unmasked          $4..7 = green
  260. copy_4_slots_masked            $0..3 = Mask($4..7)
  261. load_condition_mask            CondMask = $13
  262. copy_4_slots_masked            [main].result = Mask($0..3)
  263. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  264. load_src                       src.rgba = [main].result
