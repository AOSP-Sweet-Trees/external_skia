    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             $0 = 0
    4. swizzle_4                      $0..3 = ($0..3).xxxx
    5. copy_4_slots_unmasked          zero = $0..3
    6. copy_constant                  $0 = 0x3F800000 (1.0)
    7. swizzle_4                      $0..3 = ($0..3).xxxx
    8. copy_4_slots_unmasked          one = $0..3
    9. copy_4_constants               $0..3 = colorGreen
   10. copy_4_slots_unmasked          green = $0..3
   11. copy_4_slots_unmasked          $0..3 = green
   12. copy_4_slots_unmasked          $4..7 = one
   13. mul_4_floats                   $0..3 *= $4..7
   14. copy_4_slots_unmasked          $4..7 = zero
   15. add_4_floats                   $0..3 += $4..7
   16. copy_4_slots_masked            green = Mask($0..3)
   17. copy_4_constants               $0..3 = colorRed
   18. copy_4_slots_unmasked          red = $0..3
   19. copy_4_slots_unmasked          $0..3 = red
   20. copy_4_slots_unmasked          $4..7 = zero
   21. add_4_floats                   $0..3 += $4..7
   22. copy_4_slots_unmasked          $4..7 = one
   23. mul_4_floats                   $0..3 *= $4..7
   24. copy_4_slots_masked            red = Mask($0..3)
   25. store_condition_mask           $13 = CondMask
   26. store_condition_mask           $26 = CondMask
   27. store_condition_mask           $31 = CondMask
   28. store_condition_mask           $18 = CondMask
   29. store_condition_mask           $48 = CondMask
   30. store_condition_mask           $36 = CondMask
   31. store_condition_mask           $8 = CondMask
   32. branch_if_no_active_lanes      branch_if_no_active_lanes +21 (#53)
   33. store_return_mask              $9 = RetMask
   34. copy_constant                  $10 = 0x3F000000 (0.5)
   35. copy_slot_unmasked             mp = $10
   36. copy_slot_unmasked             $10 = mp
   37. copy_slot_unmasked             hp = $10
   38. copy_constant                  $10 = 0x00000002 (2.802597e-45)
   39. copy_slot_unmasked             ihp = $10
   40. copy_slot_unmasked             $10 = ihp
   41. copy_slot_unmasked             imp = $10
   42. copy_slot_unmasked             $10 = mp
   43. copy_slot_unmasked             $11 = hp
   44. cmpeq_float                    $10 = equal($10, $11)
   45. copy_slot_unmasked             $11 = ihp
   46. copy_slot_unmasked             $12 = imp
   47. cmpeq_int                      $11 = equal($11, $12)
   48. bitwise_and_int                $10 &= $11
   49. copy_slot_masked               [test_scalar].result = Mask($10)
   50. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   51. load_return_mask               RetMask = $9
   52. copy_slot_unmasked             $9 = [test_scalar].result
   53. zero_slot_unmasked             $37 = 0
   54. merge_condition_mask           CondMask = $8 & $9
   55. branch_if_no_active_lanes      branch_if_no_active_lanes +70 (#125)
   56. store_return_mask              $38 = RetMask
   57. copy_constant                  $39 = 0x40000000 (2.0)
   58. copy_slot_unmasked             $40 = $39
   59. copy_2_slots_unmasked          mp2 = $39..40
   60. copy_2_slots_unmasked          $39..40 = mp2
   61. copy_2_slots_unmasked          hp2 = $39..40
   62. copy_constant                  $39 = 0x40400000 (3.0)
   63. swizzle_3                      $39..41 = ($39..41).xxx
   64. copy_3_slots_unmasked          mp3 = $39..41
   65. copy_3_slots_unmasked          $39..41 = mp3
   66. copy_3_slots_unmasked          hp3 = $39..41
   67. copy_constant                  $39 = 0x40800000 (4.0)
   68. swizzle_4                      $39..42 = ($39..42).xxxx
   69. copy_4_slots_unmasked          mp4 = $39..42
   70. copy_4_slots_unmasked          $39..42 = mp4
   71. copy_4_slots_unmasked          hp4 = $39..42
   72. copy_constant                  $39 = 0x00000002 (2.802597e-45)
   73. copy_slot_unmasked             $40 = $39
   74. copy_2_slots_unmasked          ihp2 = $39..40
   75. copy_2_slots_unmasked          $39..40 = ihp2
   76. copy_2_slots_unmasked          imp2 = $39..40
   77. copy_constant                  $39 = 0x00000003 (4.203895e-45)
   78. swizzle_3                      $39..41 = ($39..41).xxx
   79. copy_3_slots_unmasked          ihp3 = $39..41
   80. copy_3_slots_unmasked          $39..41 = ihp3
   81. copy_3_slots_unmasked          imp3 = $39..41
   82. copy_constant                  $39 = 0x00000004 (5.605194e-45)
   83. swizzle_4                      $39..42 = ($39..42).xxxx
   84. copy_4_slots_unmasked          ihp4 = $39..42
   85. copy_4_slots_unmasked          $39..42 = ihp4
   86. copy_4_slots_unmasked          imp4 = $39..42
   87. copy_2_slots_unmasked          $39..40 = mp2
   88. copy_2_slots_unmasked          $41..42 = hp2
   89. cmpeq_2_floats                 $39..40 = equal($39..40, $41..42)
   90. bitwise_and_int                $39 &= $40
   91. copy_3_slots_unmasked          $40..42 = hp3
   92. copy_3_slots_unmasked          $43..45 = mp3
   93. cmpeq_3_floats                 $40..42 = equal($40..42, $43..45)
   94. bitwise_and_int                $41 &= $42
   95. bitwise_and_int                $40 &= $41
   96. bitwise_and_int                $39 &= $40
   97. copy_4_slots_unmasked          $40..43 = mp4
   98. copy_4_slots_unmasked          $44..47 = hp4
   99. cmpeq_4_floats                 $40..43 = equal($40..43, $44..47)
  100. bitwise_and_2_ints             $40..41 &= $42..43
  101. bitwise_and_int                $40 &= $41
  102. bitwise_and_int                $39 &= $40
  103. copy_2_slots_unmasked          $40..41 = imp2
  104. copy_2_slots_unmasked          $42..43 = ihp2
  105. cmpeq_2_ints                   $40..41 = equal($40..41, $42..43)
  106. bitwise_and_int                $40 &= $41
  107. bitwise_and_int                $39 &= $40
  108. copy_3_slots_unmasked          $40..42 = ihp3
  109. copy_3_slots_unmasked          $43..45 = imp3
  110. cmpeq_3_ints                   $40..42 = equal($40..42, $43..45)
  111. bitwise_and_int                $41 &= $42
  112. bitwise_and_int                $40 &= $41
  113. bitwise_and_int                $39 &= $40
  114. copy_4_slots_unmasked          $40..43 = imp4
  115. copy_4_slots_unmasked          $44..47 = ihp4
  116. cmpeq_4_ints                   $40..43 = equal($40..43, $44..47)
  117. bitwise_and_2_ints             $40..41 &= $42..43
  118. bitwise_and_int                $40 &= $41
  119. bitwise_and_int                $39 &= $40
  120. copy_slot_masked               [test_vector].result = Mask($39)
  121. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  122. load_return_mask               RetMask = $38
  123. copy_slot_unmasked             $38 = [test_vector].result
  124. copy_slot_masked               $37 = Mask($38)
  125. load_condition_mask            CondMask = $8
  126. zero_slot_unmasked             $49 = 0
  127. merge_condition_mask           CondMask = $36 & $37
  128. branch_if_no_active_lanes      branch_if_no_active_lanes +72 (#200)
  129. store_return_mask              $50 = RetMask
  130. zero_slot_unmasked             $51 = 0
  131. copy_constant                  $52 = 0x40000000 (2.0)
  132. swizzle_4                      $51..54 = ($51..54).yxxy
  133. copy_4_slots_unmasked          mp2 = $51..54
  134. copy_4_slots_unmasked          $51..54 = mp2
  135. copy_4_slots_unmasked          hp2 = $51..54
  136. zero_slot_unmasked             $51 = 0
  137. copy_constant                  $52 = 0x40400000 (3.0)
  138. shuffle                        $51..59 = ($51..59)[1 0 0 0 1 0 0 0 1]
  139. copy_4_slots_unmasked          mp3(0..3) = $51..54
  140. copy_4_slots_unmasked          mp3(4..7) = $55..58
  141. copy_slot_unmasked             mp3(8) = $59
  142. copy_4_slots_unmasked          $51..54 = mp3(0..3)
  143. copy_4_slots_unmasked          $55..58 = mp3(4..7)
  144. copy_slot_unmasked             $59 = mp3(8)
  145. copy_4_slots_unmasked          hp3(0..3) = $51..54
  146. copy_4_slots_unmasked          hp3(4..7) = $55..58
  147. copy_slot_unmasked             hp3(8) = $59
  148. zero_slot_unmasked             $51 = 0
  149. copy_constant                  $52 = 0x40800000 (4.0)
  150. shuffle                        $51..66 = ($51..66)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  151. copy_4_slots_unmasked          mp4(0..3) = $51..54
  152. copy_4_slots_unmasked          mp4(4..7) = $55..58
  153. copy_4_slots_unmasked          mp4(8..11) = $59..62
  154. copy_4_slots_unmasked          mp4(12..15) = $63..66
  155. copy_4_slots_unmasked          $51..54 = mp4(0..3)
  156. copy_4_slots_unmasked          $55..58 = mp4(4..7)
  157. copy_4_slots_unmasked          $59..62 = mp4(8..11)
  158. copy_4_slots_unmasked          $63..66 = mp4(12..15)
  159. copy_4_slots_unmasked          hp4(0..3) = $51..54
  160. copy_4_slots_unmasked          hp4(4..7) = $55..58
  161. copy_4_slots_unmasked          hp4(8..11) = $59..62
  162. copy_4_slots_unmasked          hp4(12..15) = $63..66
  163. copy_4_slots_unmasked          $51..54 = mp2
  164. copy_4_slots_unmasked          $55..58 = hp2
  165. cmpeq_4_floats                 $51..54 = equal($51..54, $55..58)
  166. bitwise_and_2_ints             $51..52 &= $53..54
  167. bitwise_and_int                $51 &= $52
  168. copy_4_slots_unmasked          $52..55 = hp3(0..3)
  169. copy_4_slots_unmasked          $56..59 = hp3(4..7)
  170. copy_slot_unmasked             $60 = hp3(8)
  171. copy_4_slots_unmasked          $61..64 = mp3(0..3)
  172. copy_4_slots_unmasked          $65..68 = mp3(4..7)
  173. copy_slot_unmasked             $69 = mp3(8)
  174. cmpeq_n_floats                 $52..60 = equal($52..60, $61..69)
  175. bitwise_and_4_ints             $53..56 &= $57..60
  176. bitwise_and_2_ints             $53..54 &= $55..56
  177. bitwise_and_int                $53 &= $54
  178. bitwise_and_int                $52 &= $53
  179. bitwise_and_int                $51 &= $52
  180. copy_4_slots_unmasked          $52..55 = mp4(0..3)
  181. copy_4_slots_unmasked          $56..59 = mp4(4..7)
  182. copy_4_slots_unmasked          $60..63 = mp4(8..11)
  183. copy_4_slots_unmasked          $64..67 = mp4(12..15)
  184. copy_4_slots_unmasked          $68..71 = hp4(0..3)
  185. copy_4_slots_unmasked          $72..75 = hp4(4..7)
  186. copy_4_slots_unmasked          $76..79 = hp4(8..11)
  187. copy_4_slots_unmasked          $80..83 = hp4(12..15)
  188. cmpeq_n_floats                 $52..67 = equal($52..67, $68..83)
  189. bitwise_and_4_ints             $60..63 &= $64..67
  190. bitwise_and_4_ints             $56..59 &= $60..63
  191. bitwise_and_4_ints             $52..55 &= $56..59
  192. bitwise_and_2_ints             $52..53 &= $54..55
  193. bitwise_and_int                $52 &= $53
  194. bitwise_and_int                $51 &= $52
  195. copy_slot_masked               [test_matrix].result = Mask($51)
  196. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  197. load_return_mask               RetMask = $50
  198. copy_slot_unmasked             $50 = [test_matrix].result
  199. copy_slot_masked               $49 = Mask($50)
  200. load_condition_mask            CondMask = $36
  201. zero_slot_unmasked             $19 = 0
  202. merge_condition_mask           CondMask = $48 & $49
  203. branch_if_no_active_lanes      branch_if_no_active_lanes +40 (#243)
  204. store_return_mask              $20 = RetMask
  205. zero_slot_unmasked             mf[0] = 0
  206. copy_constant                  $21 = 0x3F800000 (1.0)
  207. copy_slot_masked               mf[0] = Mask($21)
  208. zero_slot_unmasked             hf[0] = 0
  209. copy_constant                  $21 = 0x3F800000 (1.0)
  210. copy_slot_masked               hf[0] = Mask($21)
  211. zero_4_slots_unmasked          mv[0](0..3) = 0
  212. zero_slot_unmasked             $21 = 0
  213. copy_constant                  $22 = 0x3F800000 (1.0)
  214. copy_2_slots_masked            mv[0] = Mask($21..22)
  215. copy_constant                  $21 = 0x40000000 (2.0)
  216. copy_constant                  $22 = 0x40400000 (3.0)
  217. copy_2_slots_masked            mv[1] = Mask($21..22)
  218. zero_4_slots_unmasked          hv[0](0..3) = 0
  219. zero_slot_unmasked             $21 = 0
  220. copy_constant                  $22 = 0x3F800000 (1.0)
  221. copy_2_slots_masked            hv[0] = Mask($21..22)
  222. copy_constant                  $21 = 0x40000000 (2.0)
  223. copy_constant                  $22 = 0x40400000 (3.0)
  224. copy_2_slots_masked            hv[1] = Mask($21..22)
  225. copy_slot_unmasked             $21 = mf[0]
  226. copy_slot_unmasked             $22 = hf[0]
  227. cmpeq_float                    $21 = equal($21, $22)
  228. copy_2_slots_unmasked          $22..23 = hv[0]
  229. copy_2_slots_unmasked          $24..25 = mv[0]
  230. cmpeq_2_floats                 $22..23 = equal($22..23, $24..25)
  231. bitwise_and_int                $22 &= $23
  232. bitwise_and_int                $21 &= $22
  233. copy_2_slots_unmasked          $22..23 = mv[1]
  234. copy_2_slots_unmasked          $24..25 = hv[1]
  235. cmpeq_2_floats                 $22..23 = equal($22..23, $24..25)
  236. bitwise_and_int                $22 &= $23
  237. bitwise_and_int                $21 &= $22
  238. copy_slot_masked               [test_array].result = Mask($21)
  239. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  240. load_return_mask               RetMask = $20
  241. copy_slot_unmasked             $20 = [test_array].result
  242. copy_slot_masked               $19 = Mask($20)
  243. load_condition_mask            CondMask = $48
  244. zero_slot_unmasked             $32 = 0
  245. merge_condition_mask           CondMask = $18 & $19
  246. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#258)
  247. store_return_mask              $33 = RetMask
  248. copy_constant                  $34 = 0x3F800000 (1.0)
  249. copy_slot_unmasked             value = $34
  250. copy_slot_unmasked             $34 = value
  251. copy_constant                  $35 = 0x3F800000 (1.0)
  252. cmpeq_float                    $34 = equal($34, $35)
  253. copy_slot_masked               [highp_param].result = Mask($34)
  254. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  255. load_return_mask               RetMask = $33
  256. copy_slot_unmasked             $33 = [highp_param].result
  257. copy_slot_masked               $32 = Mask($33)
  258. load_condition_mask            CondMask = $18
  259. zero_slot_unmasked             $27 = 0
  260. merge_condition_mask           CondMask = $31 & $32
  261. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#273)
  262. store_return_mask              $28 = RetMask
  263. copy_constant                  $29 = 0x40000000 (2.0)
  264. copy_slot_unmasked             value = $29
  265. copy_slot_unmasked             $29 = value
  266. copy_constant                  $30 = 0x40000000 (2.0)
  267. cmpeq_float                    $29 = equal($29, $30)
  268. copy_slot_masked               [mediump_param].result = Mask($29)
  269. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  270. load_return_mask               RetMask = $28
  271. copy_slot_unmasked             $28 = [mediump_param].result
  272. copy_slot_masked               $27 = Mask($28)
  273. load_condition_mask            CondMask = $31
  274. zero_slot_unmasked             $14 = 0
  275. merge_condition_mask           CondMask = $26 & $27
  276. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#288)
  277. store_return_mask              $15 = RetMask
  278. copy_constant                  $16 = 0x40400000 (3.0)
  279. copy_slot_unmasked             value = $16
  280. copy_slot_unmasked             $16 = value
  281. copy_constant                  $17 = 0x40400000 (3.0)
  282. cmpeq_float                    $16 = equal($16, $17)
  283. copy_slot_masked               [lowp_param].result = Mask($16)
  284. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  285. load_return_mask               RetMask = $15
  286. copy_slot_unmasked             $15 = [lowp_param].result
  287. copy_slot_masked               $14 = Mask($15)
  288. load_condition_mask            CondMask = $26
  289. copy_4_slots_unmasked          $0..3 = red
  290. merge_condition_mask           CondMask = $13 & $14
  291. copy_4_slots_unmasked          $4..7 = green
  292. copy_4_slots_masked            $0..3 = Mask($4..7)
  293. load_condition_mask            CondMask = $13
  294. copy_4_slots_masked            [main].result = Mask($0..3)
  295. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  296. load_src                       src.rgba = [main].result
