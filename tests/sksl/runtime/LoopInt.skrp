    1. store_src                      $26..29 = src.rgba
    2. copy_constant                  $28 = 0x3F000000 (0.5)
    3. copy_constant                  $29 = 0x3F000000 (0.5)
    4. cmpeq_2_floats                 $26..27 = equal($26..27, $28..29)
    5. bitwise_and_int                $26 &= $27
    6. store_src_rg                   pos = src.rg
    7. init_lane_masks                CondMask = LoopMask = RetMask = true
    8. zero_slot_unmasked             kZero = 0
    9. copy_constant                  kTen = 0x0000000A (1.401298e-44)
   10. trace_enter                    TraceEnter(half4 main(float2 pos)) when $26 is true
   11. copy_slot_unmasked             $2 = pos(0)
   12. copy_constant                  $3 = colorGreen(1)
   13. max_float                      $2 = max($2, $3)
   14. copy_constant                  $3 = colorGreen(3)
   15. min_float                      $2 = min($2, $3)
   16. cast_to_int_from_float         $2 = FloatToInt($2)
   17. copy_constant                  $3 = 0x00000005 (7.006492e-45)
   18. mul_int                        $2 *= $3
   19. copy_slot_unmasked             five = $2
   20. store_condition_mask           $40 = CondMask
   21. store_condition_mask           $50 = CondMask
   22. store_condition_mask           $30 = CondMask
   23. store_condition_mask           $76 = CondMask
   24. store_condition_mask           $60 = CondMask
   25. store_condition_mask           $20 = CondMask
   26. store_condition_mask           $70 = CondMask
   27. store_condition_mask           $14 = CondMask
   28. branch_if_no_lanes_active      branch_if_no_lanes_active +36 (label 9 at #64)
   29. store_return_mask              $15 = RetMask
   30. copy_slot_unmasked             five₁ = five
   31. trace_enter                    TraceEnter(int return_loop(int five)) when $26 is true
   32. copy_slot_unmasked             i = kZero
   33. store_loop_mask                $16 = LoopMask
   34. jump                           jump +15 (label 11 at #49)
   35. label                          label 0x0000000C
   36. store_condition_mask           $17 = CondMask
   37. copy_slot_unmasked             $18 = i
   38. copy_slot_unmasked             $19 = five₁
   39. cmpeq_int                      $18 = equal($18, $19)
   40. merge_condition_mask           CondMask = $17 & $18
   41. copy_slot_unmasked             $19 = i
   42. copy_slot_masked               [return_loop].result = Mask($19)
   43. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   44. load_condition_mask            CondMask = $17
   45. copy_slot_unmasked             $17 = i
   46. copy_constant                  $18 = 0x00000001 (1.401298e-45)
   47. add_int                        $17 += $18
   48. copy_slot_masked               i = Mask($17)
   49. label                          label 0x0000000B
   50. copy_slot_unmasked             $17 = i
   51. copy_constant                  $18 = 0x0000000A (1.401298e-44)
   52. cmplt_int                      $17 = lessThan($17, $18)
   53. merge_loop_mask                LoopMask &= $17
   54. stack_rewind
   55. branch_if_any_lanes_active     branch_if_any_lanes_active -20 (label 12 at #35)
   56. label                          label 0x0000000A
   57. load_loop_mask                 LoopMask = $16
   58. zero_slot_unmasked             $16 = 0
   59. copy_slot_masked               [return_loop].result = Mask($16)
   60. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   61. trace_exit                     TraceExit(int return_loop(int five)) when $26 is true
   62. load_return_mask               RetMask = $15
   63. copy_slot_unmasked             $15 = [return_loop].result
   64. label                          label 0x00000009
   65. copy_constant                  $16 = 0x00000005 (7.006492e-45)
   66. cmpeq_int                      $15 = equal($15, $16)
   67. zero_slot_unmasked             $71 = 0
   68. merge_condition_mask           CondMask = $14 & $15
   69. branch_if_no_lanes_active      branch_if_no_lanes_active +40 (label 8 at #109)
   70. copy_slot_unmasked             five₂ = five
   71. trace_enter                    TraceEnter(int continue_loop(int five)) when $26 is true
   72. zero_2_slots_unmasked          sum, i₁ = 0
   73. store_loop_mask                $72 = LoopMask
   74. jump                           jump +20 (label 15 at #94)
   75. label                          label 0x00000010
   76. zero_slot_unmasked             $0 = 0
   77. store_condition_mask           $73 = CondMask
   78. copy_slot_unmasked             $74 = i₁
   79. copy_slot_unmasked             $75 = five₂
   80. cmplt_int                      $74 = lessThan($74, $75)
   81. merge_condition_mask           CondMask = $73 & $74
   82. copy_constant                  $1 = 0xFFFFFFFF
   83. copy_slot_masked               $0 = Mask($1)
   84. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   85. load_condition_mask            CondMask = $73
   86. copy_2_slots_unmasked          $73..74 = sum, i₁
   87. add_int                        $73 += $74
   88. copy_slot_masked               sum = Mask($73)
   89. reenable_loop_mask             LoopMask |= $0
   90. copy_slot_unmasked             $73 = i₁
   91. copy_constant                  $74 = 0x00000001 (1.401298e-45)
   92. add_int                        $73 += $74
   93. copy_slot_masked               i₁ = Mask($73)
   94. label                          label 0x0000000F
   95. copy_slot_unmasked             $73 = i₁
   96. copy_slot_unmasked             $74 = kTen
   97. cmplt_int                      $73 = lessThan($73, $74)
   98. merge_loop_mask                LoopMask &= $73
   99. stack_rewind
  100. branch_if_any_lanes_active     branch_if_any_lanes_active -25 (label 16 at #75)
  101. label                          label 0x0000000E
  102. load_loop_mask                 LoopMask = $72
  103. copy_slot_unmasked             $72 = sum
  104. trace_exit                     TraceExit(int continue_loop(int five)) when $26 is true
  105. label                          label 0x0000000D
  106. copy_constant                  $73 = 0x00000023 (4.904545e-44)
  107. cmpeq_int                      $72 = equal($72, $73)
  108. copy_slot_masked               $71 = Mask($72)
  109. label                          label 0x00000008
  110. load_condition_mask            CondMask = $14
  111. zero_slot_unmasked             $21 = 0
  112. merge_condition_mask           CondMask = $70 & $71
  113. branch_if_no_lanes_active      branch_if_no_lanes_active +40 (label 7 at #153)
  114. copy_constant                  five₃ = 0x00000005 (7.006492e-45)
  115. trace_enter                    TraceEnter(int break_loop(int five)) when $26 is true
  116. zero_slot_unmasked             sum₁ = 0
  117. copy_constant                  kOne = 0x00000001 (1.401298e-45)
  118. zero_slot_unmasked             i₂ = 0
  119. store_loop_mask                $22 = LoopMask
  120. jump                           jump +18 (label 19 at #138)
  121. label                          label 0x00000014
  122. store_condition_mask           $23 = CondMask
  123. copy_slot_unmasked             $24 = five₃
  124. copy_slot_unmasked             $25 = i₂
  125. cmplt_int                      $24 = lessThan($24, $25)
  126. merge_condition_mask           CondMask = $23 & $24
  127. branch_if_all_lanes_active     branch_if_all_lanes_active +18 (label 18 at #145)
  128. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  129. load_condition_mask            CondMask = $23
  130. copy_slot_unmasked             $23 = sum₁
  131. copy_slot_unmasked             $24 = i₂
  132. add_int                        $23 += $24
  133. copy_slot_masked               sum₁ = Mask($23)
  134. copy_slot_unmasked             $23 = i₂
  135. copy_slot_unmasked             $24 = kOne
  136. add_int                        $23 += $24
  137. copy_slot_masked               i₂ = Mask($23)
  138. label                          label 0x00000013
  139. copy_slot_unmasked             $23 = i₂
  140. copy_constant                  $24 = 0x0000000A (1.401298e-44)
  141. cmplt_int                      $23 = lessThan($23, $24)
  142. merge_loop_mask                LoopMask &= $23
  143. stack_rewind
  144. branch_if_any_lanes_active     branch_if_any_lanes_active -23 (label 20 at #121)
  145. label                          label 0x00000012
  146. load_loop_mask                 LoopMask = $22
  147. copy_slot_unmasked             $22 = sum₁
  148. trace_exit                     TraceExit(int break_loop(int five)) when $26 is true
  149. label                          label 0x00000011
  150. copy_constant                  $23 = 0x0000000F (2.101948e-44)
  151. cmpeq_int                      $22 = equal($22, $23)
  152. copy_slot_masked               $21 = Mask($22)
  153. label                          label 0x00000007
  154. load_condition_mask            CondMask = $70
  155. zero_slot_unmasked             $61 = 0
  156. merge_condition_mask           CondMask = $20 & $21
  157. branch_if_no_lanes_active      branch_if_no_lanes_active +30 (label 6 at #187)
  158. trace_enter                    TraceEnter(bool loop_operator_le()) when $26 is true
  159. copy_constant                  $62 = 0x00000009 (1.261169e-44)
  160. swizzle_4                      $62..65 = ($62..65).xxxx
  161. copy_4_slots_unmasked          result = $62..65
  162. branch_if_no_lanes_active      branch_if_no_lanes_active +13 (label 22 at #175)
  163. copy_constant                  i₃ = 0x00000001 (1.401298e-45)
  164. label                          label 0x00000017
  165. copy_4_slots_unmasked          $62..65 = result(1..3), i₃
  166. copy_4_slots_masked            result = Mask($62..65)
  167. copy_slot_unmasked             $62 = i₃
  168. copy_constant                  $63 = 0x00000001 (1.401298e-45)
  169. add_int                        $62 += $63
  170. copy_slot_masked               i₃ = Mask($62)
  171. copy_constant                  $63 = 0x00000003 (4.203895e-45)
  172. cmple_int                      $62 = lessThanEqual($62, $63)
  173. stack_rewind
  174. branch_if_no_active_lanes_eq   branch -10 (label 23 at #164) if no lanes of $62 == 0x00000000 (0.0)
  175. label                          label 0x00000016
  176. copy_4_slots_unmasked          $62..65 = result
  177. copy_constant                  $66 = 0x00000009 (1.261169e-44)
  178. copy_constant                  $67 = 0x00000001 (1.401298e-45)
  179. copy_constant                  $68 = 0x00000002 (2.802597e-45)
  180. copy_constant                  $69 = 0x00000003 (4.203895e-45)
  181. cmpeq_4_ints                   $62..65 = equal($62..65, $66..69)
  182. bitwise_and_2_ints             $62..63 &= $64..65
  183. bitwise_and_int                $62 &= $63
  184. trace_exit                     TraceExit(bool loop_operator_le()) when $26 is true
  185. label                          label 0x00000015
  186. copy_slot_masked               $61 = Mask($62)
  187. label                          label 0x00000006
  188. load_condition_mask            CondMask = $20
  189. zero_slot_unmasked             $77 = 0
  190. merge_condition_mask           CondMask = $60 & $61
  191. branch_if_no_lanes_active      branch_if_no_lanes_active +30 (label 5 at #221)
  192. trace_enter                    TraceEnter(bool loop_operator_lt()) when $26 is true
  193. copy_constant                  $78 = 0x00000009 (1.261169e-44)
  194. swizzle_4                      $78..81 = ($78..81).xxxx
  195. copy_4_slots_unmasked          result₁ = $78..81
  196. branch_if_no_lanes_active      branch_if_no_lanes_active +13 (label 25 at #209)
  197. copy_constant                  i₄ = 0x00000001 (1.401298e-45)
  198. label                          label 0x0000001A
  199. copy_4_slots_unmasked          $78..81 = result₁(1..3), i₄
  200. copy_4_slots_masked            result₁ = Mask($78..81)
  201. copy_slot_unmasked             $78 = i₄
  202. copy_constant                  $79 = 0x00000001 (1.401298e-45)
  203. add_int                        $78 += $79
  204. copy_slot_masked               i₄ = Mask($78)
  205. copy_constant                  $79 = 0x00000004 (5.605194e-45)
  206. cmplt_int                      $78 = lessThan($78, $79)
  207. stack_rewind
  208. branch_if_no_active_lanes_eq   branch -10 (label 26 at #198) if no lanes of $78 == 0x00000000 (0.0)
  209. label                          label 0x00000019
  210. copy_4_slots_unmasked          $78..81 = result₁
  211. copy_constant                  $82 = 0x00000009 (1.261169e-44)
  212. copy_constant                  $83 = 0x00000001 (1.401298e-45)
  213. copy_constant                  $84 = 0x00000002 (2.802597e-45)
  214. copy_constant                  $85 = 0x00000003 (4.203895e-45)
  215. cmpeq_4_ints                   $78..81 = equal($78..81, $82..85)
  216. bitwise_and_2_ints             $78..79 &= $80..81
  217. bitwise_and_int                $78 &= $79
  218. trace_exit                     TraceExit(bool loop_operator_lt()) when $26 is true
  219. label                          label 0x00000018
  220. copy_slot_masked               $77 = Mask($78)
  221. label                          label 0x00000005
  222. load_condition_mask            CondMask = $60
  223. zero_slot_unmasked             $31 = 0
  224. merge_condition_mask           CondMask = $76 & $77
  225. branch_if_no_lanes_active      branch_if_no_lanes_active +31 (label 4 at #256)
  226. trace_enter                    TraceEnter(bool loop_operator_ge()) when $26 is true
  227. copy_constant                  $32 = 0x00000009 (1.261169e-44)
  228. swizzle_4                      $32..35 = ($32..35).xxxx
  229. copy_4_slots_unmasked          result₂ = $32..35
  230. branch_if_no_lanes_active      branch_if_no_lanes_active +14 (label 28 at #244)
  231. copy_constant                  i₅ = 0x00000003 (4.203895e-45)
  232. label                          label 0x0000001D
  233. copy_4_slots_unmasked          $32..35 = result₂(1..3), i₅
  234. copy_4_slots_masked            result₂ = Mask($32..35)
  235. copy_slot_unmasked             $32 = i₅
  236. copy_constant                  $33 = 0x00000001 (1.401298e-45)
  237. sub_int                        $32 -= $33
  238. copy_slot_masked               i₅ = Mask($32)
  239. copy_constant                  $32 = 0x00000001 (1.401298e-45)
  240. copy_slot_unmasked             $33 = i₅
  241. cmple_int                      $32 = lessThanEqual($32, $33)
  242. stack_rewind
  243. branch_if_no_active_lanes_eq   branch -11 (label 29 at #232) if no lanes of $32 == 0x00000000 (0.0)
  244. label                          label 0x0000001C
  245. copy_4_slots_unmasked          $32..35 = result₂
  246. copy_constant                  $36 = 0x00000009 (1.261169e-44)
  247. copy_constant                  $37 = 0x00000003 (4.203895e-45)
  248. copy_constant                  $38 = 0x00000002 (2.802597e-45)
  249. copy_constant                  $39 = 0x00000001 (1.401298e-45)
  250. cmpeq_4_ints                   $32..35 = equal($32..35, $36..39)
  251. bitwise_and_2_ints             $32..33 &= $34..35
  252. bitwise_and_int                $32 &= $33
  253. trace_exit                     TraceExit(bool loop_operator_ge()) when $26 is true
  254. label                          label 0x0000001B
  255. copy_slot_masked               $31 = Mask($32)
  256. label                          label 0x00000004
  257. load_condition_mask            CondMask = $76
  258. zero_slot_unmasked             $51 = 0
  259. merge_condition_mask           CondMask = $30 & $31
  260. branch_if_no_lanes_active      branch_if_no_lanes_active +31 (label 3 at #291)
  261. trace_enter                    TraceEnter(bool loop_operator_gt()) when $26 is true
  262. copy_constant                  $52 = 0x00000009 (1.261169e-44)
  263. swizzle_4                      $52..55 = ($52..55).xxxx
  264. copy_4_slots_unmasked          result₃ = $52..55
  265. branch_if_no_lanes_active      branch_if_no_lanes_active +14 (label 31 at #279)
  266. copy_constant                  i₆ = 0x00000003 (4.203895e-45)
  267. label                          label 0x00000020
  268. copy_4_slots_unmasked          $52..55 = result₃(1..3), i₆
  269. copy_4_slots_masked            result₃ = Mask($52..55)
  270. copy_slot_unmasked             $52 = i₆
  271. copy_constant                  $53 = 0x00000001 (1.401298e-45)
  272. sub_int                        $52 -= $53
  273. copy_slot_masked               i₆ = Mask($52)
  274. zero_slot_unmasked             $52 = 0
  275. copy_slot_unmasked             $53 = i₆
  276. cmplt_int                      $52 = lessThan($52, $53)
  277. stack_rewind
  278. branch_if_no_active_lanes_eq   branch -11 (label 32 at #267) if no lanes of $52 == 0x00000000 (0.0)
  279. label                          label 0x0000001F
  280. copy_4_slots_unmasked          $52..55 = result₃
  281. copy_constant                  $56 = 0x00000009 (1.261169e-44)
  282. copy_constant                  $57 = 0x00000003 (4.203895e-45)
  283. copy_constant                  $58 = 0x00000002 (2.802597e-45)
  284. copy_constant                  $59 = 0x00000001 (1.401298e-45)
  285. cmpeq_4_ints                   $52..55 = equal($52..55, $56..59)
  286. bitwise_and_2_ints             $52..53 &= $54..55
  287. bitwise_and_int                $52 &= $53
  288. trace_exit                     TraceExit(bool loop_operator_gt()) when $26 is true
  289. label                          label 0x0000001E
  290. copy_slot_masked               $51 = Mask($52)
  291. label                          label 0x00000003
  292. load_condition_mask            CondMask = $30
  293. zero_slot_unmasked             $41 = 0
  294. merge_condition_mask           CondMask = $50 & $51
  295. branch_if_no_lanes_active      branch_if_no_lanes_active +22 (label 2 at #317)
  296. trace_enter                    TraceEnter(bool loop_operator_eq()) when $26 is true
  297. copy_constant                  $42 = 0x00000009 (1.261169e-44)
  298. swizzle_4                      $42..45 = ($42..45).xxxx
  299. copy_4_slots_unmasked          result₄ = $42..45
  300. branch_if_no_lanes_active      branch_if_no_lanes_active +5 (label 34 at #305)
  301. copy_constant                  i₇ = 0x00000001 (1.401298e-45)
  302. label                          label 0x00000023
  303. copy_4_slots_unmasked          $42..45 = result₄(1..3), i₇
  304. copy_4_slots_masked            result₄ = Mask($42..45)
  305. label                          label 0x00000022
  306. copy_4_slots_unmasked          $42..45 = result₄
  307. copy_constant                  $46 = 0x00000009 (1.261169e-44)
  308. copy_constant                  $47 = 0x00000009 (1.261169e-44)
  309. copy_constant                  $48 = 0x00000009 (1.261169e-44)
  310. copy_constant                  $49 = 0x00000001 (1.401298e-45)
  311. cmpeq_4_ints                   $42..45 = equal($42..45, $46..49)
  312. bitwise_and_2_ints             $42..43 &= $44..45
  313. bitwise_and_int                $42 &= $43
  314. trace_exit                     TraceExit(bool loop_operator_eq()) when $26 is true
  315. label                          label 0x00000021
  316. copy_slot_masked               $41 = Mask($42)
  317. label                          label 0x00000002
  318. load_condition_mask            CondMask = $50
  319. zero_slot_unmasked             $2 = 0
  320. merge_condition_mask           CondMask = $40 & $41
  321. branch_if_no_lanes_active      branch_if_no_lanes_active +30 (label 1 at #351)
  322. trace_enter                    TraceEnter(bool loop_operator_ne()) when $26 is true
  323. copy_constant                  $3 = 0x00000009 (1.261169e-44)
  324. swizzle_4                      $3..6 = ($3..6).xxxx
  325. copy_4_slots_unmasked          result₅ = $3..6
  326. branch_if_no_lanes_active      branch_if_no_lanes_active +13 (label 37 at #339)
  327. copy_constant                  i₈ = 0x00000001 (1.401298e-45)
  328. label                          label 0x00000026
  329. copy_4_slots_unmasked          $3..6 = result₅(1..3), i₈
  330. copy_4_slots_masked            result₅ = Mask($3..6)
  331. copy_slot_unmasked             $3 = i₈
  332. copy_constant                  $4 = 0x00000001 (1.401298e-45)
  333. add_int                        $3 += $4
  334. copy_slot_masked               i₈ = Mask($3)
  335. copy_constant                  $4 = 0x00000004 (5.605194e-45)
  336. cmpne_int                      $3 = notEqual($3, $4)
  337. stack_rewind
  338. branch_if_no_active_lanes_eq   branch -10 (label 38 at #328) if no lanes of $3 == 0x00000000 (0.0)
  339. label                          label 0x00000025
  340. copy_4_slots_unmasked          $3..6 = result₅
  341. copy_constant                  $7 = 0x00000009 (1.261169e-44)
  342. copy_constant                  $8 = 0x00000001 (1.401298e-45)
  343. copy_constant                  $9 = 0x00000002 (2.802597e-45)
  344. copy_constant                  $10 = 0x00000003 (4.203895e-45)
  345. cmpeq_4_ints                   $3..6 = equal($3..6, $7..10)
  346. bitwise_and_2_ints             $3..4 &= $5..6
  347. bitwise_and_int                $3 &= $4
  348. trace_exit                     TraceExit(bool loop_operator_ne()) when $26 is true
  349. label                          label 0x00000024
  350. copy_slot_masked               $2 = Mask($3)
  351. label                          label 0x00000001
  352. load_condition_mask            CondMask = $40
  353. swizzle_4                      $2..5 = ($2..5).xxxx
  354. copy_4_constants               $6..9 = colorRed
  355. copy_4_constants               $10..13 = colorGreen
  356. mix_4_ints                     $2..5 = mix($6..9, $10..13, $2..5)
  357. trace_exit                     TraceExit(half4 main(float2 pos)) when $26 is true
  358. load_src                       src.rgba = $2..5
