    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = colorGreen(0)
    4. copy_constant                  $1 = colorGreen(2)
    5. div_float                      $0 /= $1
    6. copy_slot_unmasked             NAN1 = $0
    7. copy_constant                  $0 = colorGreen(2)
    8. copy_constant                  $1 = colorGreen(0)
    9. div_float                      $0 /= $1
   10. copy_slot_unmasked             NAN2 = $0
   11. copy_constant                  $0 = colorGreen(0)
   12. copy_constant                  $1 = colorGreen(2)
   13. mul_float                      $0 *= $1
   14. copy_slot_unmasked             ZP = $0
   15. zero_slot_unmasked             $0 = 0
   16. copy_constant                  $1 = colorGreen(0)
   17. sub_float                      $0 -= $1
   18. copy_constant                  $1 = colorGreen(2)
   19. mul_float                      $0 *= $1
   20. copy_slot_unmasked             ZM = $0
   21. copy_constant                  $0 = colorGreen(1)
   22. copy_constant                  $1 = 0x42280000 (42.0)
   23. mul_float                      $0 *= $1
   24. copy_slot_unmasked             F42 = $0
   25. copy_constant                  $0 = colorGreen(1)
   26. copy_constant                  $1 = 0x422C0000 (43.0)
   27. mul_float                      $0 *= $1
   28. copy_slot_unmasked             F43 = $0
   29. copy_constant                  $0 = colorGreen(1)
   30. copy_constant                  $1 = 0x42300000 (44.0)
   31. mul_float                      $0 *= $1
   32. copy_slot_unmasked             F44 = $0
   33. copy_constant                  $0 = colorGreen(1)
   34. copy_constant                  $1 = 0x42340000 (45.0)
   35. mul_float                      $0 *= $1
   36. copy_slot_unmasked             F45 = $0
   37. copy_constant                  $0 = 0xFFFFFFFF
   38. copy_slot_unmasked             EQ = $0
   39. zero_slot_unmasked             $0 = 0
   40. copy_slot_unmasked             NE = $0
   41. copy_constant                  $0 = colorGreen(0)
   42. copy_constant                  $1 = 0x3F800000 (1.0)
   43. add_float                      $0 += $1
   44. copy_slot_unmasked             _0_one = $0
   45. copy_slot_unmasked             $0 = F42
   46. copy_slot_unmasked             $1 = ZM
   47. copy_slot_unmasked             $2 = ZP
   48. copy_slot_unmasked             $3 = F43
   49. copy_4_slots_unmasked          _1_a = $0..3
   50. copy_slot_unmasked             $0 = F42
   51. copy_slot_unmasked             $1 = _0_one
   52. mul_float                      $0 *= $1
   53. copy_slot_unmasked             $1 = ZM
   54. copy_slot_unmasked             $2 = _0_one
   55. mul_float                      $1 *= $2
   56. copy_slot_unmasked             $2 = ZP
   57. copy_slot_unmasked             $3 = _0_one
   58. mul_float                      $2 *= $3
   59. copy_slot_unmasked             $3 = F43
   60. copy_slot_unmasked             $4 = _0_one
   61. mul_float                      $3 *= $4
   62. copy_4_slots_unmasked          _2_b = $0..3
   63. store_condition_mask           $22 = CondMask
   64. store_condition_mask           $46 = CondMask
   65. store_condition_mask           $58 = CondMask
   66. store_condition_mask           $34 = CondMask
   67. store_condition_mask           $92 = CondMask
   68. store_condition_mask           $70 = CondMask
   69. store_condition_mask           $10 = CondMask
   70. store_condition_mask           $82 = CondMask
   71. store_condition_mask           $8 = CondMask
   72. copy_slot_unmasked             $9 = EQ
   73. copy_4_slots_unmasked          $83..86 = _1_a
   74. copy_4_slots_unmasked          $87..90 = _2_b
   75. cmpne_4_floats                 $83..86 = notEqual($83..86, $87..90)
   76. bitwise_or_2_ints              $83..84 |= $85..86
   77. bitwise_or_int                 $83 |= $84
   78. merge_condition_mask           CondMask = $8 & $9
   79. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#86)
   80. copy_4_slots_unmasked          $84..87 = _1_a
   81. copy_4_slots_unmasked          $88..91 = _2_b
   82. cmpeq_4_floats                 $84..87 = equal($84..87, $88..91)
   83. bitwise_and_2_ints             $84..85 &= $86..87
   84. bitwise_and_int                $84 &= $85
   85. copy_slot_masked               $83 = Mask($84)
   86. load_condition_mask            CondMask = $8
   87. zero_slot_unmasked             $11 = 0
   88. merge_condition_mask           CondMask = $82 & $83
   89. branch_if_no_active_lanes      branch_if_no_active_lanes +56 (#145)
   90. store_return_mask              $12 = RetMask
   91. copy_slot_unmasked             $13 = NE
   92. copy_slot_unmasked             eq = $13
   93. copy_slot_unmasked             $13 = F42
   94. copy_slot_unmasked             f1 = $13
   95. copy_slot_unmasked             $13 = ZM
   96. copy_slot_unmasked             f2 = $13
   97. copy_slot_unmasked             $13 = ZP
   98. copy_slot_unmasked             f3 = $13
   99. copy_slot_unmasked             $13 = F43
  100. copy_slot_unmasked             f4 = $13
  101. copy_constant                  $13 = colorGreen(0)
  102. copy_constant                  $14 = 0x3F800000 (1.0)
  103. add_float                      $13 += $14
  104. copy_slot_unmasked             one = $13
  105. copy_slot_unmasked             $13 = f1
  106. copy_slot_unmasked             $14 = f2
  107. copy_slot_unmasked             $15 = f3
  108. copy_slot_unmasked             $16 = f4
  109. copy_4_slots_unmasked          a = $13..16
  110. copy_slot_unmasked             $13 = f1
  111. copy_slot_unmasked             $14 = one
  112. mul_float                      $13 *= $14
  113. copy_slot_unmasked             $14 = f2
  114. copy_slot_unmasked             $15 = one
  115. mul_float                      $14 *= $15
  116. copy_slot_unmasked             $15 = f3
  117. copy_slot_unmasked             $16 = one
  118. mul_float                      $15 *= $16
  119. copy_slot_unmasked             $16 = f4
  120. copy_slot_unmasked             $17 = one
  121. mul_float                      $16 *= $17
  122. copy_4_slots_unmasked          b = $13..16
  123. store_condition_mask           $84 = CondMask
  124. copy_slot_unmasked             $85 = eq
  125. copy_4_slots_unmasked          $13..16 = a
  126. copy_4_slots_unmasked          $17..20 = b
  127. cmpne_4_floats                 $13..16 = notEqual($13..16, $17..20)
  128. bitwise_or_2_ints              $13..14 |= $15..16
  129. bitwise_or_int                 $13 |= $14
  130. merge_condition_mask           CondMask = $84 & $85
  131. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#138)
  132. copy_4_slots_unmasked          $14..17 = a
  133. copy_4_slots_unmasked          $18..21 = b
  134. cmpeq_4_floats                 $14..17 = equal($14..17, $18..21)
  135. bitwise_and_2_ints             $14..15 &= $16..17
  136. bitwise_and_int                $14 &= $15
  137. copy_slot_masked               $13 = Mask($14)
  138. load_condition_mask            CondMask = $84
  139. copy_slot_masked               [test_same_vectors].result = Mask($13)
  140. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  141. load_return_mask               RetMask = $12
  142. copy_slot_unmasked             $12 = [test_same_vectors].result
  143. bitwise_not_int                $12 = ~$12
  144. copy_slot_masked               $11 = Mask($12)
  145. load_condition_mask            CondMask = $82
  146. zero_slot_unmasked             $71 = 0
  147. merge_condition_mask           CondMask = $10 & $11
  148. branch_if_no_active_lanes      branch_if_no_active_lanes +55 (#203)
  149. store_return_mask              $72 = RetMask
  150. copy_slot_unmasked             $73 = NE
  151. copy_slot_unmasked             eq = $73
  152. copy_slot_unmasked             $73 = F42
  153. copy_slot_unmasked             f1 = $73
  154. copy_slot_unmasked             $73 = NAN1
  155. copy_slot_unmasked             f2 = $73
  156. copy_slot_unmasked             $73 = NAN2
  157. copy_slot_unmasked             f3 = $73
  158. copy_slot_unmasked             $73 = F43
  159. copy_slot_unmasked             f4 = $73
  160. copy_constant                  $73 = colorGreen(0)
  161. copy_constant                  $74 = 0x3F800000 (1.0)
  162. add_float                      $73 += $74
  163. copy_slot_unmasked             one = $73
  164. copy_slot_unmasked             $73 = f1
  165. copy_slot_unmasked             $74 = f2
  166. copy_slot_unmasked             $75 = f3
  167. copy_slot_unmasked             $76 = f4
  168. copy_4_slots_unmasked          a = $73..76
  169. copy_slot_unmasked             $73 = f1
  170. copy_slot_unmasked             $74 = one
  171. mul_float                      $73 *= $74
  172. copy_slot_unmasked             $74 = f2
  173. copy_slot_unmasked             $75 = one
  174. mul_float                      $74 *= $75
  175. copy_slot_unmasked             $75 = f3
  176. copy_slot_unmasked             $76 = one
  177. mul_float                      $75 *= $76
  178. copy_slot_unmasked             $76 = f4
  179. copy_slot_unmasked             $77 = one
  180. mul_float                      $76 *= $77
  181. copy_4_slots_unmasked          b = $73..76
  182. store_condition_mask           $12 = CondMask
  183. copy_slot_unmasked             $13 = eq
  184. copy_4_slots_unmasked          $73..76 = a
  185. copy_4_slots_unmasked          $77..80 = b
  186. cmpne_4_floats                 $73..76 = notEqual($73..76, $77..80)
  187. bitwise_or_2_ints              $73..74 |= $75..76
  188. bitwise_or_int                 $73 |= $74
  189. merge_condition_mask           CondMask = $12 & $13
  190. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#197)
  191. copy_4_slots_unmasked          $74..77 = a
  192. copy_4_slots_unmasked          $78..81 = b
  193. cmpeq_4_floats                 $74..77 = equal($74..77, $78..81)
  194. bitwise_and_2_ints             $74..75 &= $76..77
  195. bitwise_and_int                $74 &= $75
  196. copy_slot_masked               $73 = Mask($74)
  197. load_condition_mask            CondMask = $12
  198. copy_slot_masked               [test_same_vectors].result = Mask($73)
  199. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  200. load_return_mask               RetMask = $72
  201. copy_slot_unmasked             $72 = [test_same_vectors].result
  202. copy_slot_masked               $71 = Mask($72)
  203. load_condition_mask            CondMask = $10
  204. zero_slot_unmasked             $93 = 0
  205. merge_condition_mask           CondMask = $70 & $71
  206. branch_if_no_active_lanes      branch_if_no_active_lanes +56 (#262)
  207. store_return_mask              $94 = RetMask
  208. copy_slot_unmasked             $95 = EQ
  209. copy_slot_unmasked             eq = $95
  210. copy_slot_unmasked             $95 = F42
  211. copy_slot_unmasked             f1 = $95
  212. copy_slot_unmasked             $95 = NAN1
  213. copy_slot_unmasked             f2 = $95
  214. copy_slot_unmasked             $95 = NAN2
  215. copy_slot_unmasked             f3 = $95
  216. copy_slot_unmasked             $95 = F43
  217. copy_slot_unmasked             f4 = $95
  218. copy_constant                  $95 = colorGreen(0)
  219. copy_constant                  $96 = 0x3F800000 (1.0)
  220. add_float                      $95 += $96
  221. copy_slot_unmasked             one = $95
  222. copy_slot_unmasked             $95 = f1
  223. copy_slot_unmasked             $96 = f2
  224. copy_slot_unmasked             $97 = f3
  225. copy_slot_unmasked             $98 = f4
  226. copy_4_slots_unmasked          a = $95..98
  227. copy_slot_unmasked             $95 = f1
  228. copy_slot_unmasked             $96 = one
  229. mul_float                      $95 *= $96
  230. copy_slot_unmasked             $96 = f2
  231. copy_slot_unmasked             $97 = one
  232. mul_float                      $96 *= $97
  233. copy_slot_unmasked             $97 = f3
  234. copy_slot_unmasked             $98 = one
  235. mul_float                      $97 *= $98
  236. copy_slot_unmasked             $98 = f4
  237. copy_slot_unmasked             $99 = one
  238. mul_float                      $98 *= $99
  239. copy_4_slots_unmasked          b = $95..98
  240. store_condition_mask           $72 = CondMask
  241. copy_slot_unmasked             $73 = eq
  242. copy_4_slots_unmasked          $95..98 = a
  243. copy_4_slots_unmasked          $99..102 = b
  244. cmpne_4_floats                 $95..98 = notEqual($95..98, $99..102)
  245. bitwise_or_2_ints              $95..96 |= $97..98
  246. bitwise_or_int                 $95 |= $96
  247. merge_condition_mask           CondMask = $72 & $73
  248. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#255)
  249. copy_4_slots_unmasked          $96..99 = a
  250. copy_4_slots_unmasked          $100..103 = b
  251. cmpeq_4_floats                 $96..99 = equal($96..99, $100..103)
  252. bitwise_and_2_ints             $96..97 &= $98..99
  253. bitwise_and_int                $96 &= $97
  254. copy_slot_masked               $95 = Mask($96)
  255. load_condition_mask            CondMask = $72
  256. copy_slot_masked               [test_same_vectors].result = Mask($95)
  257. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  258. load_return_mask               RetMask = $94
  259. copy_slot_unmasked             $94 = [test_same_vectors].result
  260. bitwise_not_int                $94 = ~$94
  261. copy_slot_masked               $93 = Mask($94)
  262. load_condition_mask            CondMask = $70
  263. zero_slot_unmasked             $35 = 0
  264. merge_condition_mask           CondMask = $92 & $93
  265. branch_if_no_active_lanes      branch_if_no_active_lanes +55 (#320)
  266. store_return_mask              $36 = RetMask
  267. copy_slot_unmasked             $37 = NE
  268. copy_slot_unmasked             eq = $37
  269. copy_slot_unmasked             $37 = F42
  270. copy_slot_unmasked             f1 = $37
  271. copy_slot_unmasked             $37 = F43
  272. copy_slot_unmasked             f2 = $37
  273. copy_slot_unmasked             $37 = F44
  274. copy_slot_unmasked             f3 = $37
  275. copy_slot_unmasked             $37 = F45
  276. copy_slot_unmasked             f4 = $37
  277. copy_constant                  $37 = colorGreen(0)
  278. copy_constant                  $38 = 0x40000000 (2.0)
  279. add_float                      $37 += $38
  280. copy_slot_unmasked             two = $37
  281. copy_slot_unmasked             $37 = f1
  282. copy_slot_unmasked             $38 = f2
  283. copy_slot_unmasked             $39 = f3
  284. copy_slot_unmasked             $40 = f4
  285. copy_4_slots_unmasked          a = $37..40
  286. copy_slot_unmasked             $37 = f1
  287. copy_slot_unmasked             $38 = two
  288. mul_float                      $37 *= $38
  289. copy_slot_unmasked             $38 = f2
  290. copy_slot_unmasked             $39 = two
  291. mul_float                      $38 *= $39
  292. copy_slot_unmasked             $39 = f3
  293. copy_slot_unmasked             $40 = two
  294. mul_float                      $39 *= $40
  295. copy_slot_unmasked             $40 = f4
  296. copy_slot_unmasked             $41 = two
  297. mul_float                      $40 *= $41
  298. copy_4_slots_unmasked          b = $37..40
  299. store_condition_mask           $94 = CondMask
  300. copy_slot_unmasked             $95 = eq
  301. copy_4_slots_unmasked          $37..40 = a
  302. copy_4_slots_unmasked          $41..44 = b
  303. cmpne_4_floats                 $37..40 = notEqual($37..40, $41..44)
  304. bitwise_or_2_ints              $37..38 |= $39..40
  305. bitwise_or_int                 $37 |= $38
  306. merge_condition_mask           CondMask = $94 & $95
  307. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#314)
  308. copy_4_slots_unmasked          $38..41 = a
  309. copy_4_slots_unmasked          $42..45 = b
  310. cmpeq_4_floats                 $38..41 = equal($38..41, $42..45)
  311. bitwise_and_2_ints             $38..39 &= $40..41
  312. bitwise_and_int                $38 &= $39
  313. copy_slot_masked               $37 = Mask($38)
  314. load_condition_mask            CondMask = $94
  315. copy_slot_masked               [test_diff_vectors].result = Mask($37)
  316. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  317. load_return_mask               RetMask = $36
  318. copy_slot_unmasked             $36 = [test_diff_vectors].result
  319. copy_slot_masked               $35 = Mask($36)
  320. load_condition_mask            CondMask = $92
  321. zero_slot_unmasked             $59 = 0
  322. merge_condition_mask           CondMask = $34 & $35
  323. branch_if_no_active_lanes      branch_if_no_active_lanes +56 (#379)
  324. store_return_mask              $60 = RetMask
  325. copy_slot_unmasked             $61 = EQ
  326. copy_slot_unmasked             eq = $61
  327. copy_slot_unmasked             $61 = F42
  328. copy_slot_unmasked             f1 = $61
  329. copy_slot_unmasked             $61 = F43
  330. copy_slot_unmasked             f2 = $61
  331. copy_slot_unmasked             $61 = F44
  332. copy_slot_unmasked             f3 = $61
  333. copy_slot_unmasked             $61 = F45
  334. copy_slot_unmasked             f4 = $61
  335. copy_constant                  $61 = colorGreen(0)
  336. copy_constant                  $62 = 0x40000000 (2.0)
  337. add_float                      $61 += $62
  338. copy_slot_unmasked             two = $61
  339. copy_slot_unmasked             $61 = f1
  340. copy_slot_unmasked             $62 = f2
  341. copy_slot_unmasked             $63 = f3
  342. copy_slot_unmasked             $64 = f4
  343. copy_4_slots_unmasked          a = $61..64
  344. copy_slot_unmasked             $61 = f1
  345. copy_slot_unmasked             $62 = two
  346. mul_float                      $61 *= $62
  347. copy_slot_unmasked             $62 = f2
  348. copy_slot_unmasked             $63 = two
  349. mul_float                      $62 *= $63
  350. copy_slot_unmasked             $63 = f3
  351. copy_slot_unmasked             $64 = two
  352. mul_float                      $63 *= $64
  353. copy_slot_unmasked             $64 = f4
  354. copy_slot_unmasked             $65 = two
  355. mul_float                      $64 *= $65
  356. copy_4_slots_unmasked          b = $61..64
  357. store_condition_mask           $36 = CondMask
  358. copy_slot_unmasked             $37 = eq
  359. copy_4_slots_unmasked          $61..64 = a
  360. copy_4_slots_unmasked          $65..68 = b
  361. cmpne_4_floats                 $61..64 = notEqual($61..64, $65..68)
  362. bitwise_or_2_ints              $61..62 |= $63..64
  363. bitwise_or_int                 $61 |= $62
  364. merge_condition_mask           CondMask = $36 & $37
  365. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#372)
  366. copy_4_slots_unmasked          $62..65 = a
  367. copy_4_slots_unmasked          $66..69 = b
  368. cmpeq_4_floats                 $62..65 = equal($62..65, $66..69)
  369. bitwise_and_2_ints             $62..63 &= $64..65
  370. bitwise_and_int                $62 &= $63
  371. copy_slot_masked               $61 = Mask($62)
  372. load_condition_mask            CondMask = $36
  373. copy_slot_masked               [test_diff_vectors].result = Mask($61)
  374. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  375. load_return_mask               RetMask = $60
  376. copy_slot_unmasked             $60 = [test_diff_vectors].result
  377. bitwise_not_int                $60 = ~$60
  378. copy_slot_masked               $59 = Mask($60)
  379. load_condition_mask            CondMask = $34
  380. zero_slot_unmasked             $47 = 0
  381. merge_condition_mask           CondMask = $58 & $59
  382. branch_if_no_active_lanes      branch_if_no_active_lanes +55 (#437)
  383. store_return_mask              $48 = RetMask
  384. copy_slot_unmasked             $49 = NE
  385. copy_slot_unmasked             eq = $49
  386. copy_slot_unmasked             $49 = NAN1
  387. copy_slot_unmasked             f1 = $49
  388. copy_slot_unmasked             $49 = ZM
  389. copy_slot_unmasked             f2 = $49
  390. copy_slot_unmasked             $49 = ZP
  391. copy_slot_unmasked             f3 = $49
  392. copy_slot_unmasked             $49 = F42
  393. copy_slot_unmasked             f4 = $49
  394. copy_constant                  $49 = colorGreen(0)
  395. copy_constant                  $50 = 0x40000000 (2.0)
  396. add_float                      $49 += $50
  397. copy_slot_unmasked             two = $49
  398. copy_slot_unmasked             $49 = f1
  399. copy_slot_unmasked             $50 = f2
  400. copy_slot_unmasked             $51 = f3
  401. copy_slot_unmasked             $52 = f4
  402. copy_4_slots_unmasked          a = $49..52
  403. copy_slot_unmasked             $49 = f1
  404. copy_slot_unmasked             $50 = two
  405. mul_float                      $49 *= $50
  406. copy_slot_unmasked             $50 = f2
  407. copy_slot_unmasked             $51 = two
  408. mul_float                      $50 *= $51
  409. copy_slot_unmasked             $51 = f3
  410. copy_slot_unmasked             $52 = two
  411. mul_float                      $51 *= $52
  412. copy_slot_unmasked             $52 = f4
  413. copy_slot_unmasked             $53 = two
  414. mul_float                      $52 *= $53
  415. copy_4_slots_unmasked          b = $49..52
  416. store_condition_mask           $60 = CondMask
  417. copy_slot_unmasked             $61 = eq
  418. copy_4_slots_unmasked          $49..52 = a
  419. copy_4_slots_unmasked          $53..56 = b
  420. cmpne_4_floats                 $49..52 = notEqual($49..52, $53..56)
  421. bitwise_or_2_ints              $49..50 |= $51..52
  422. bitwise_or_int                 $49 |= $50
  423. merge_condition_mask           CondMask = $60 & $61
  424. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#431)
  425. copy_4_slots_unmasked          $50..53 = a
  426. copy_4_slots_unmasked          $54..57 = b
  427. cmpeq_4_floats                 $50..53 = equal($50..53, $54..57)
  428. bitwise_and_2_ints             $50..51 &= $52..53
  429. bitwise_and_int                $50 &= $51
  430. copy_slot_masked               $49 = Mask($50)
  431. load_condition_mask            CondMask = $60
  432. copy_slot_masked               [test_diff_vectors].result = Mask($49)
  433. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  434. load_return_mask               RetMask = $48
  435. copy_slot_unmasked             $48 = [test_diff_vectors].result
  436. copy_slot_masked               $47 = Mask($48)
  437. load_condition_mask            CondMask = $58
  438. zero_slot_unmasked             $23 = 0
  439. merge_condition_mask           CondMask = $46 & $47
  440. branch_if_no_active_lanes      branch_if_no_active_lanes +56 (#496)
  441. store_return_mask              $24 = RetMask
  442. copy_slot_unmasked             $25 = EQ
  443. copy_slot_unmasked             eq = $25
  444. copy_slot_unmasked             $25 = NAN1
  445. copy_slot_unmasked             f1 = $25
  446. copy_slot_unmasked             $25 = ZM
  447. copy_slot_unmasked             f2 = $25
  448. copy_slot_unmasked             $25 = ZP
  449. copy_slot_unmasked             f3 = $25
  450. copy_slot_unmasked             $25 = F42
  451. copy_slot_unmasked             f4 = $25
  452. copy_constant                  $25 = colorGreen(0)
  453. copy_constant                  $26 = 0x40000000 (2.0)
  454. add_float                      $25 += $26
  455. copy_slot_unmasked             two = $25
  456. copy_slot_unmasked             $25 = f1
  457. copy_slot_unmasked             $26 = f2
  458. copy_slot_unmasked             $27 = f3
  459. copy_slot_unmasked             $28 = f4
  460. copy_4_slots_unmasked          a = $25..28
  461. copy_slot_unmasked             $25 = f1
  462. copy_slot_unmasked             $26 = two
  463. mul_float                      $25 *= $26
  464. copy_slot_unmasked             $26 = f2
  465. copy_slot_unmasked             $27 = two
  466. mul_float                      $26 *= $27
  467. copy_slot_unmasked             $27 = f3
  468. copy_slot_unmasked             $28 = two
  469. mul_float                      $27 *= $28
  470. copy_slot_unmasked             $28 = f4
  471. copy_slot_unmasked             $29 = two
  472. mul_float                      $28 *= $29
  473. copy_4_slots_unmasked          b = $25..28
  474. store_condition_mask           $48 = CondMask
  475. copy_slot_unmasked             $49 = eq
  476. copy_4_slots_unmasked          $25..28 = a
  477. copy_4_slots_unmasked          $29..32 = b
  478. cmpne_4_floats                 $25..28 = notEqual($25..28, $29..32)
  479. bitwise_or_2_ints              $25..26 |= $27..28
  480. bitwise_or_int                 $25 |= $26
  481. merge_condition_mask           CondMask = $48 & $49
  482. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#489)
  483. copy_4_slots_unmasked          $26..29 = a
  484. copy_4_slots_unmasked          $30..33 = b
  485. cmpeq_4_floats                 $26..29 = equal($26..29, $30..33)
  486. bitwise_and_2_ints             $26..27 &= $28..29
  487. bitwise_and_int                $26 &= $27
  488. copy_slot_masked               $25 = Mask($26)
  489. load_condition_mask            CondMask = $48
  490. copy_slot_masked               [test_diff_vectors].result = Mask($25)
  491. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  492. load_return_mask               RetMask = $24
  493. copy_slot_unmasked             $24 = [test_diff_vectors].result
  494. bitwise_not_int                $24 = ~$24
  495. copy_slot_masked               $23 = Mask($24)
  496. load_condition_mask            CondMask = $46
  497. copy_4_constants               $0..3 = colorRed
  498. merge_condition_mask           CondMask = $22 & $23
  499. copy_4_constants               $4..7 = colorGreen
  500. copy_4_slots_masked            $0..3 = Mask($4..7)
  501. load_condition_mask            CondMask = $22
  502. stack_rewind
  503. copy_4_slots_masked            [main].result = Mask($0..3)
  504. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  505. load_src                       src.rgba = [main].result
