    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = colorGreen(0)
    4. copy_constant                  $1 = colorGreen(2)
    5. div_float                      $0 /= $1
    6. copy_slot_unmasked             NAN1 = $0
    7. copy_constant                  $0 = colorGreen(2)
    8. copy_constant                  $1 = colorGreen(0)
    9. div_float                      $0 /= $1
   10. copy_slot_unmasked             NAN2 = $0
   11. copy_constant                  $0 = colorGreen(0)
   12. copy_constant                  $1 = colorGreen(2)
   13. mul_float                      $0 *= $1
   14. copy_slot_unmasked             ZP = $0
   15. zero_slot_unmasked             $0 = 0
   16. copy_constant                  $1 = colorGreen(0)
   17. sub_float                      $0 -= $1
   18. copy_constant                  $1 = colorGreen(2)
   19. mul_float                      $0 *= $1
   20. copy_slot_unmasked             ZM = $0
   21. copy_constant                  $0 = colorGreen(1)
   22. copy_constant                  $1 = 0x42280000 (42.0)
   23. mul_float                      $0 *= $1
   24. copy_slot_unmasked             F42 = $0
   25. copy_constant                  $0 = colorGreen(1)
   26. copy_constant                  $1 = 0x422C0000 (43.0)
   27. mul_float                      $0 *= $1
   28. copy_slot_unmasked             F43 = $0
   29. copy_constant                  $0 = colorGreen(1)
   30. copy_constant                  $1 = 0x42300000 (44.0)
   31. mul_float                      $0 *= $1
   32. copy_slot_unmasked             F44 = $0
   33. copy_constant                  $0 = colorGreen(1)
   34. copy_constant                  $1 = 0x42340000 (45.0)
   35. mul_float                      $0 *= $1
   36. copy_slot_unmasked             F45 = $0
   37. copy_constant                  $0 = 0xFFFFFFFF
   38. copy_slot_unmasked             EQ = $0
   39. zero_slot_unmasked             $0 = 0
   40. copy_slot_unmasked             NE = $0
   41. copy_constant                  $0 = colorGreen(0)
   42. copy_constant                  $1 = 0x3F800000 (1.0)
   43. add_float                      $0 += $1
   44. copy_slot_unmasked             _0_one = $0
   45. copy_slot_unmasked             $0 = F42
   46. copy_slot_unmasked             $1 = ZM
   47. copy_slot_unmasked             $2 = ZP
   48. copy_slot_unmasked             $3 = F43
   49. copy_4_slots_unmasked          _1_a = $0..3
   50. copy_slot_unmasked             $0 = F42
   51. copy_slot_unmasked             $1 = _0_one
   52. mul_float                      $0 *= $1
   53. copy_slot_unmasked             $1 = ZM
   54. copy_slot_unmasked             $2 = _0_one
   55. mul_float                      $1 *= $2
   56. copy_slot_unmasked             $2 = ZP
   57. copy_slot_unmasked             $3 = _0_one
   58. mul_float                      $2 *= $3
   59. copy_slot_unmasked             $3 = F43
   60. copy_slot_unmasked             $4 = _0_one
   61. mul_float                      $3 *= $4
   62. copy_4_slots_unmasked          _2_b = $0..3
   63. store_condition_mask           $22 = CondMask
   64. store_condition_mask           $46 = CondMask
   65. store_condition_mask           $58 = CondMask
   66. store_condition_mask           $34 = CondMask
   67. store_condition_mask           $92 = CondMask
   68. store_condition_mask           $70 = CondMask
   69. store_condition_mask           $10 = CondMask
   70. store_condition_mask           $82 = CondMask
   71. store_condition_mask           $8 = CondMask
   72. copy_slot_unmasked             $9 = EQ
   73. copy_4_slots_unmasked          $83..86 = _1_a
   74. copy_4_slots_unmasked          $87..90 = _2_b
   75. cmpne_4_floats                 $83..86 = notEqual($83..86, $87..90)
   76. bitwise_or_2_ints              $83..84 |= $85..86
   77. bitwise_or_int                 $83 |= $84
   78. merge_condition_mask           CondMask = $8 & $9
   79. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#86)
   80. copy_4_slots_unmasked          $84..87 = _1_a
   81. copy_4_slots_unmasked          $88..91 = _2_b
   82. cmpeq_4_floats                 $84..87 = equal($84..87, $88..91)
   83. bitwise_and_2_ints             $84..85 &= $86..87
   84. bitwise_and_int                $84 &= $85
   85. copy_slot_masked               $83 = Mask($84)
   86. load_condition_mask            CondMask = $8
   87. zero_slot_unmasked             $11 = 0
   88. merge_condition_mask           CondMask = $82 & $83
   89. branch_if_no_active_lanes      branch_if_no_active_lanes +52 (#141)
   90. store_return_mask              $12 = RetMask
   91. copy_slot_unmasked             $13 = NE
   92. copy_slot_unmasked             eq = $13
   93. copy_slot_unmasked             $13 = F42
   94. copy_slot_unmasked             f1 = $13
   95. copy_slot_unmasked             $13 = ZM
   96. copy_slot_unmasked             f2 = $13
   97. copy_slot_unmasked             $13 = ZP
   98. copy_slot_unmasked             f3 = $13
   99. copy_slot_unmasked             $13 = F43
  100. copy_slot_unmasked             f4 = $13
  101. copy_constant                  $13 = colorGreen(0)
  102. copy_constant                  $14 = 0x3F800000 (1.0)
  103. add_float                      $13 += $14
  104. copy_slot_unmasked             one = $13
  105. copy_4_slots_unmasked          $13..16 = f1(0..3)
  106. copy_4_slots_unmasked          a = $13..16
  107. copy_slot_unmasked             $13 = f1
  108. copy_slot_unmasked             $14 = one
  109. mul_float                      $13 *= $14
  110. copy_slot_unmasked             $14 = f2
  111. copy_slot_unmasked             $15 = one
  112. mul_float                      $14 *= $15
  113. copy_slot_unmasked             $15 = f3
  114. copy_slot_unmasked             $16 = one
  115. mul_float                      $15 *= $16
  116. copy_slot_unmasked             $16 = f4
  117. copy_slot_unmasked             $17 = one
  118. mul_float                      $16 *= $17
  119. copy_4_slots_unmasked          b = $13..16
  120. store_condition_mask           $84 = CondMask
  121. copy_slot_unmasked             $85 = eq
  122. copy_4_slots_unmasked          $13..16 = a
  123. copy_4_slots_unmasked          $17..20 = b
  124. cmpne_4_floats                 $13..16 = notEqual($13..16, $17..20)
  125. bitwise_or_2_ints              $13..14 |= $15..16
  126. bitwise_or_int                 $13 |= $14
  127. merge_condition_mask           CondMask = $84 & $85
  128. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#135)
  129. copy_4_slots_unmasked          $14..17 = a
  130. copy_4_slots_unmasked          $18..21 = b
  131. cmpeq_4_floats                 $14..17 = equal($14..17, $18..21)
  132. bitwise_and_2_ints             $14..15 &= $16..17
  133. bitwise_and_int                $14 &= $15
  134. copy_slot_masked               $13 = Mask($14)
  135. load_condition_mask            CondMask = $84
  136. copy_slot_masked               [test_same_vectors].result = Mask($13)
  137. load_return_mask               RetMask = $12
  138. copy_slot_unmasked             $12 = [test_same_vectors].result
  139. bitwise_not_int                $12 = ~$12
  140. copy_slot_masked               $11 = Mask($12)
  141. load_condition_mask            CondMask = $82
  142. zero_slot_unmasked             $71 = 0
  143. merge_condition_mask           CondMask = $10 & $11
  144. branch_if_no_active_lanes      branch_if_no_active_lanes +51 (#195)
  145. store_return_mask              $72 = RetMask
  146. copy_slot_unmasked             $73 = NE
  147. copy_slot_unmasked             eq = $73
  148. copy_slot_unmasked             $73 = F42
  149. copy_slot_unmasked             f1 = $73
  150. copy_slot_unmasked             $73 = NAN1
  151. copy_slot_unmasked             f2 = $73
  152. copy_slot_unmasked             $73 = NAN2
  153. copy_slot_unmasked             f3 = $73
  154. copy_slot_unmasked             $73 = F43
  155. copy_slot_unmasked             f4 = $73
  156. copy_constant                  $73 = colorGreen(0)
  157. copy_constant                  $74 = 0x3F800000 (1.0)
  158. add_float                      $73 += $74
  159. copy_slot_unmasked             one = $73
  160. copy_4_slots_unmasked          $73..76 = f1(0..3)
  161. copy_4_slots_unmasked          a = $73..76
  162. copy_slot_unmasked             $73 = f1
  163. copy_slot_unmasked             $74 = one
  164. mul_float                      $73 *= $74
  165. copy_slot_unmasked             $74 = f2
  166. copy_slot_unmasked             $75 = one
  167. mul_float                      $74 *= $75
  168. copy_slot_unmasked             $75 = f3
  169. copy_slot_unmasked             $76 = one
  170. mul_float                      $75 *= $76
  171. copy_slot_unmasked             $76 = f4
  172. copy_slot_unmasked             $77 = one
  173. mul_float                      $76 *= $77
  174. copy_4_slots_unmasked          b = $73..76
  175. store_condition_mask           $12 = CondMask
  176. copy_slot_unmasked             $13 = eq
  177. copy_4_slots_unmasked          $73..76 = a
  178. copy_4_slots_unmasked          $77..80 = b
  179. cmpne_4_floats                 $73..76 = notEqual($73..76, $77..80)
  180. bitwise_or_2_ints              $73..74 |= $75..76
  181. bitwise_or_int                 $73 |= $74
  182. merge_condition_mask           CondMask = $12 & $13
  183. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#190)
  184. copy_4_slots_unmasked          $74..77 = a
  185. copy_4_slots_unmasked          $78..81 = b
  186. cmpeq_4_floats                 $74..77 = equal($74..77, $78..81)
  187. bitwise_and_2_ints             $74..75 &= $76..77
  188. bitwise_and_int                $74 &= $75
  189. copy_slot_masked               $73 = Mask($74)
  190. load_condition_mask            CondMask = $12
  191. copy_slot_masked               [test_same_vectors].result = Mask($73)
  192. load_return_mask               RetMask = $72
  193. copy_slot_unmasked             $72 = [test_same_vectors].result
  194. copy_slot_masked               $71 = Mask($72)
  195. load_condition_mask            CondMask = $10
  196. zero_slot_unmasked             $93 = 0
  197. merge_condition_mask           CondMask = $70 & $71
  198. branch_if_no_active_lanes      branch_if_no_active_lanes +52 (#250)
  199. store_return_mask              $94 = RetMask
  200. copy_slot_unmasked             $95 = EQ
  201. copy_slot_unmasked             eq = $95
  202. copy_slot_unmasked             $95 = F42
  203. copy_slot_unmasked             f1 = $95
  204. copy_slot_unmasked             $95 = NAN1
  205. copy_slot_unmasked             f2 = $95
  206. copy_slot_unmasked             $95 = NAN2
  207. copy_slot_unmasked             f3 = $95
  208. copy_slot_unmasked             $95 = F43
  209. copy_slot_unmasked             f4 = $95
  210. copy_constant                  $95 = colorGreen(0)
  211. copy_constant                  $96 = 0x3F800000 (1.0)
  212. add_float                      $95 += $96
  213. copy_slot_unmasked             one = $95
  214. copy_4_slots_unmasked          $95..98 = f1(0..3)
  215. copy_4_slots_unmasked          a = $95..98
  216. copy_slot_unmasked             $95 = f1
  217. copy_slot_unmasked             $96 = one
  218. mul_float                      $95 *= $96
  219. copy_slot_unmasked             $96 = f2
  220. copy_slot_unmasked             $97 = one
  221. mul_float                      $96 *= $97
  222. copy_slot_unmasked             $97 = f3
  223. copy_slot_unmasked             $98 = one
  224. mul_float                      $97 *= $98
  225. copy_slot_unmasked             $98 = f4
  226. copy_slot_unmasked             $99 = one
  227. mul_float                      $98 *= $99
  228. copy_4_slots_unmasked          b = $95..98
  229. store_condition_mask           $72 = CondMask
  230. copy_slot_unmasked             $73 = eq
  231. copy_4_slots_unmasked          $95..98 = a
  232. copy_4_slots_unmasked          $99..102 = b
  233. cmpne_4_floats                 $95..98 = notEqual($95..98, $99..102)
  234. bitwise_or_2_ints              $95..96 |= $97..98
  235. bitwise_or_int                 $95 |= $96
  236. merge_condition_mask           CondMask = $72 & $73
  237. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#244)
  238. copy_4_slots_unmasked          $96..99 = a
  239. copy_4_slots_unmasked          $100..103 = b
  240. cmpeq_4_floats                 $96..99 = equal($96..99, $100..103)
  241. bitwise_and_2_ints             $96..97 &= $98..99
  242. bitwise_and_int                $96 &= $97
  243. copy_slot_masked               $95 = Mask($96)
  244. load_condition_mask            CondMask = $72
  245. copy_slot_masked               [test_same_vectors].result = Mask($95)
  246. load_return_mask               RetMask = $94
  247. copy_slot_unmasked             $94 = [test_same_vectors].result
  248. bitwise_not_int                $94 = ~$94
  249. copy_slot_masked               $93 = Mask($94)
  250. load_condition_mask            CondMask = $70
  251. zero_slot_unmasked             $35 = 0
  252. merge_condition_mask           CondMask = $92 & $93
  253. branch_if_no_active_lanes      branch_if_no_active_lanes +51 (#304)
  254. store_return_mask              $36 = RetMask
  255. copy_slot_unmasked             $37 = NE
  256. copy_slot_unmasked             eq = $37
  257. copy_slot_unmasked             $37 = F42
  258. copy_slot_unmasked             f1 = $37
  259. copy_slot_unmasked             $37 = F43
  260. copy_slot_unmasked             f2 = $37
  261. copy_slot_unmasked             $37 = F44
  262. copy_slot_unmasked             f3 = $37
  263. copy_slot_unmasked             $37 = F45
  264. copy_slot_unmasked             f4 = $37
  265. copy_constant                  $37 = colorGreen(0)
  266. copy_constant                  $38 = 0x40000000 (2.0)
  267. add_float                      $37 += $38
  268. copy_slot_unmasked             two = $37
  269. copy_4_slots_unmasked          $37..40 = f1(0..3)
  270. copy_4_slots_unmasked          a = $37..40
  271. copy_slot_unmasked             $37 = f1
  272. copy_slot_unmasked             $38 = two
  273. mul_float                      $37 *= $38
  274. copy_slot_unmasked             $38 = f2
  275. copy_slot_unmasked             $39 = two
  276. mul_float                      $38 *= $39
  277. copy_slot_unmasked             $39 = f3
  278. copy_slot_unmasked             $40 = two
  279. mul_float                      $39 *= $40
  280. copy_slot_unmasked             $40 = f4
  281. copy_slot_unmasked             $41 = two
  282. mul_float                      $40 *= $41
  283. copy_4_slots_unmasked          b = $37..40
  284. store_condition_mask           $94 = CondMask
  285. copy_slot_unmasked             $95 = eq
  286. copy_4_slots_unmasked          $37..40 = a
  287. copy_4_slots_unmasked          $41..44 = b
  288. cmpne_4_floats                 $37..40 = notEqual($37..40, $41..44)
  289. bitwise_or_2_ints              $37..38 |= $39..40
  290. bitwise_or_int                 $37 |= $38
  291. merge_condition_mask           CondMask = $94 & $95
  292. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#299)
  293. copy_4_slots_unmasked          $38..41 = a
  294. copy_4_slots_unmasked          $42..45 = b
  295. cmpeq_4_floats                 $38..41 = equal($38..41, $42..45)
  296. bitwise_and_2_ints             $38..39 &= $40..41
  297. bitwise_and_int                $38 &= $39
  298. copy_slot_masked               $37 = Mask($38)
  299. load_condition_mask            CondMask = $94
  300. copy_slot_masked               [test_diff_vectors].result = Mask($37)
  301. load_return_mask               RetMask = $36
  302. copy_slot_unmasked             $36 = [test_diff_vectors].result
  303. copy_slot_masked               $35 = Mask($36)
  304. load_condition_mask            CondMask = $92
  305. zero_slot_unmasked             $59 = 0
  306. merge_condition_mask           CondMask = $34 & $35
  307. branch_if_no_active_lanes      branch_if_no_active_lanes +52 (#359)
  308. store_return_mask              $60 = RetMask
  309. copy_slot_unmasked             $61 = EQ
  310. copy_slot_unmasked             eq = $61
  311. copy_slot_unmasked             $61 = F42
  312. copy_slot_unmasked             f1 = $61
  313. copy_slot_unmasked             $61 = F43
  314. copy_slot_unmasked             f2 = $61
  315. copy_slot_unmasked             $61 = F44
  316. copy_slot_unmasked             f3 = $61
  317. copy_slot_unmasked             $61 = F45
  318. copy_slot_unmasked             f4 = $61
  319. copy_constant                  $61 = colorGreen(0)
  320. copy_constant                  $62 = 0x40000000 (2.0)
  321. add_float                      $61 += $62
  322. copy_slot_unmasked             two = $61
  323. copy_4_slots_unmasked          $61..64 = f1(0..3)
  324. copy_4_slots_unmasked          a = $61..64
  325. copy_slot_unmasked             $61 = f1
  326. copy_slot_unmasked             $62 = two
  327. mul_float                      $61 *= $62
  328. copy_slot_unmasked             $62 = f2
  329. copy_slot_unmasked             $63 = two
  330. mul_float                      $62 *= $63
  331. copy_slot_unmasked             $63 = f3
  332. copy_slot_unmasked             $64 = two
  333. mul_float                      $63 *= $64
  334. copy_slot_unmasked             $64 = f4
  335. copy_slot_unmasked             $65 = two
  336. mul_float                      $64 *= $65
  337. copy_4_slots_unmasked          b = $61..64
  338. store_condition_mask           $36 = CondMask
  339. copy_slot_unmasked             $37 = eq
  340. copy_4_slots_unmasked          $61..64 = a
  341. copy_4_slots_unmasked          $65..68 = b
  342. cmpne_4_floats                 $61..64 = notEqual($61..64, $65..68)
  343. bitwise_or_2_ints              $61..62 |= $63..64
  344. bitwise_or_int                 $61 |= $62
  345. merge_condition_mask           CondMask = $36 & $37
  346. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#353)
  347. copy_4_slots_unmasked          $62..65 = a
  348. copy_4_slots_unmasked          $66..69 = b
  349. cmpeq_4_floats                 $62..65 = equal($62..65, $66..69)
  350. bitwise_and_2_ints             $62..63 &= $64..65
  351. bitwise_and_int                $62 &= $63
  352. copy_slot_masked               $61 = Mask($62)
  353. load_condition_mask            CondMask = $36
  354. copy_slot_masked               [test_diff_vectors].result = Mask($61)
  355. load_return_mask               RetMask = $60
  356. copy_slot_unmasked             $60 = [test_diff_vectors].result
  357. bitwise_not_int                $60 = ~$60
  358. copy_slot_masked               $59 = Mask($60)
  359. load_condition_mask            CondMask = $34
  360. zero_slot_unmasked             $47 = 0
  361. merge_condition_mask           CondMask = $58 & $59
  362. branch_if_no_active_lanes      branch_if_no_active_lanes +51 (#413)
  363. store_return_mask              $48 = RetMask
  364. copy_slot_unmasked             $49 = NE
  365. copy_slot_unmasked             eq = $49
  366. copy_slot_unmasked             $49 = NAN1
  367. copy_slot_unmasked             f1 = $49
  368. copy_slot_unmasked             $49 = ZM
  369. copy_slot_unmasked             f2 = $49
  370. copy_slot_unmasked             $49 = ZP
  371. copy_slot_unmasked             f3 = $49
  372. copy_slot_unmasked             $49 = F42
  373. copy_slot_unmasked             f4 = $49
  374. copy_constant                  $49 = colorGreen(0)
  375. copy_constant                  $50 = 0x40000000 (2.0)
  376. add_float                      $49 += $50
  377. copy_slot_unmasked             two = $49
  378. copy_4_slots_unmasked          $49..52 = f1(0..3)
  379. copy_4_slots_unmasked          a = $49..52
  380. copy_slot_unmasked             $49 = f1
  381. copy_slot_unmasked             $50 = two
  382. mul_float                      $49 *= $50
  383. copy_slot_unmasked             $50 = f2
  384. copy_slot_unmasked             $51 = two
  385. mul_float                      $50 *= $51
  386. copy_slot_unmasked             $51 = f3
  387. copy_slot_unmasked             $52 = two
  388. mul_float                      $51 *= $52
  389. copy_slot_unmasked             $52 = f4
  390. copy_slot_unmasked             $53 = two
  391. mul_float                      $52 *= $53
  392. copy_4_slots_unmasked          b = $49..52
  393. store_condition_mask           $60 = CondMask
  394. copy_slot_unmasked             $61 = eq
  395. copy_4_slots_unmasked          $49..52 = a
  396. copy_4_slots_unmasked          $53..56 = b
  397. cmpne_4_floats                 $49..52 = notEqual($49..52, $53..56)
  398. bitwise_or_2_ints              $49..50 |= $51..52
  399. bitwise_or_int                 $49 |= $50
  400. merge_condition_mask           CondMask = $60 & $61
  401. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#408)
  402. copy_4_slots_unmasked          $50..53 = a
  403. copy_4_slots_unmasked          $54..57 = b
  404. cmpeq_4_floats                 $50..53 = equal($50..53, $54..57)
  405. bitwise_and_2_ints             $50..51 &= $52..53
  406. bitwise_and_int                $50 &= $51
  407. copy_slot_masked               $49 = Mask($50)
  408. load_condition_mask            CondMask = $60
  409. copy_slot_masked               [test_diff_vectors].result = Mask($49)
  410. load_return_mask               RetMask = $48
  411. copy_slot_unmasked             $48 = [test_diff_vectors].result
  412. copy_slot_masked               $47 = Mask($48)
  413. load_condition_mask            CondMask = $58
  414. zero_slot_unmasked             $23 = 0
  415. merge_condition_mask           CondMask = $46 & $47
  416. branch_if_no_active_lanes      branch_if_no_active_lanes +52 (#468)
  417. store_return_mask              $24 = RetMask
  418. copy_slot_unmasked             $25 = EQ
  419. copy_slot_unmasked             eq = $25
  420. copy_slot_unmasked             $25 = NAN1
  421. copy_slot_unmasked             f1 = $25
  422. copy_slot_unmasked             $25 = ZM
  423. copy_slot_unmasked             f2 = $25
  424. copy_slot_unmasked             $25 = ZP
  425. copy_slot_unmasked             f3 = $25
  426. copy_slot_unmasked             $25 = F42
  427. copy_slot_unmasked             f4 = $25
  428. copy_constant                  $25 = colorGreen(0)
  429. copy_constant                  $26 = 0x40000000 (2.0)
  430. add_float                      $25 += $26
  431. copy_slot_unmasked             two = $25
  432. copy_4_slots_unmasked          $25..28 = f1(0..3)
  433. copy_4_slots_unmasked          a = $25..28
  434. copy_slot_unmasked             $25 = f1
  435. copy_slot_unmasked             $26 = two
  436. mul_float                      $25 *= $26
  437. copy_slot_unmasked             $26 = f2
  438. copy_slot_unmasked             $27 = two
  439. mul_float                      $26 *= $27
  440. copy_slot_unmasked             $27 = f3
  441. copy_slot_unmasked             $28 = two
  442. mul_float                      $27 *= $28
  443. copy_slot_unmasked             $28 = f4
  444. copy_slot_unmasked             $29 = two
  445. mul_float                      $28 *= $29
  446. copy_4_slots_unmasked          b = $25..28
  447. store_condition_mask           $48 = CondMask
  448. copy_slot_unmasked             $49 = eq
  449. copy_4_slots_unmasked          $25..28 = a
  450. copy_4_slots_unmasked          $29..32 = b
  451. cmpne_4_floats                 $25..28 = notEqual($25..28, $29..32)
  452. bitwise_or_2_ints              $25..26 |= $27..28
  453. bitwise_or_int                 $25 |= $26
  454. merge_condition_mask           CondMask = $48 & $49
  455. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#462)
  456. copy_4_slots_unmasked          $26..29 = a
  457. copy_4_slots_unmasked          $30..33 = b
  458. cmpeq_4_floats                 $26..29 = equal($26..29, $30..33)
  459. bitwise_and_2_ints             $26..27 &= $28..29
  460. bitwise_and_int                $26 &= $27
  461. copy_slot_masked               $25 = Mask($26)
  462. load_condition_mask            CondMask = $48
  463. copy_slot_masked               [test_diff_vectors].result = Mask($25)
  464. load_return_mask               RetMask = $24
  465. copy_slot_unmasked             $24 = [test_diff_vectors].result
  466. bitwise_not_int                $24 = ~$24
  467. copy_slot_masked               $23 = Mask($24)
  468. load_condition_mask            CondMask = $46
  469. copy_4_constants               $0..3 = colorRed
  470. merge_condition_mask           CondMask = $22 & $23
  471. copy_4_constants               $4..7 = colorGreen
  472. copy_4_slots_masked            $0..3 = Mask($4..7)
  473. load_condition_mask            CondMask = $22
  474. copy_4_slots_masked            [main].result = Mask($0..3)
  475. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  476. load_src                       src.rgba = [main].result
