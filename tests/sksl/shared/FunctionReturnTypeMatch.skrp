    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $21 = 0x3F800000 (1.0)
    4. copy_slot_unmasked             x1 = $21
    5. copy_constant                  $21 = 0x40000000 (2.0)
    6. copy_slot_unmasked             $22 = $21
    7. copy_2_slots_unmasked          x2 = $21..22
    8. copy_constant                  $21 = 0x40400000 (3.0)
    9. swizzle_3                      $21..23 = ($21..23).xxx
   10. copy_3_slots_unmasked          x3 = $21..23
   11. copy_constant                  $21 = 0x40800000 (4.0)
   12. swizzle_4                      $21..24 = ($21..24).xxxx
   13. copy_4_slots_unmasked          x4 = $21..24
   14. zero_slot_unmasked             $21 = 0
   15. copy_constant                  $22 = 0x40000000 (2.0)
   16. swizzle_4                      $21..24 = ($21..24).yxxy
   17. copy_4_slots_unmasked          x5 = $21..24
   18. zero_slot_unmasked             $21 = 0
   19. copy_constant                  $22 = 0x40400000 (3.0)
   20. shuffle                        $21..29 = ($21..29)[1 0 0 0 1 0 0 0 1]
   21. copy_4_slots_unmasked          x6(0..3) = $21..24
   22. copy_4_slots_unmasked          x6(4..7) = $25..28
   23. copy_slot_unmasked             x6(8) = $29
   24. zero_slot_unmasked             $21 = 0
   25. copy_constant                  $22 = 0x40800000 (4.0)
   26. shuffle                        $21..36 = ($21..36)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
   27. copy_4_slots_unmasked          x7(0..3) = $21..24
   28. copy_4_slots_unmasked          x7(4..7) = $25..28
   29. copy_4_slots_unmasked          x7(8..11) = $29..32
   30. copy_4_slots_unmasked          x7(12..15) = $33..36
   31. copy_constant                  $21 = 0x3F800000 (1.0)
   32. copy_slot_unmasked             x8 = $21
   33. copy_constant                  $21 = 0x40000000 (2.0)
   34. copy_slot_unmasked             $22 = $21
   35. copy_2_slots_unmasked          x9 = $21..22
   36. copy_constant                  $21 = 0x40400000 (3.0)
   37. swizzle_3                      $21..23 = ($21..23).xxx
   38. copy_3_slots_unmasked          x10 = $21..23
   39. copy_constant                  $21 = 0x40800000 (4.0)
   40. swizzle_4                      $21..24 = ($21..24).xxxx
   41. copy_4_slots_unmasked          x11 = $21..24
   42. zero_slot_unmasked             $21 = 0
   43. copy_constant                  $22 = 0x40000000 (2.0)
   44. swizzle_4                      $21..24 = ($21..24).yxxy
   45. copy_4_slots_unmasked          x12 = $21..24
   46. zero_slot_unmasked             $21 = 0
   47. copy_constant                  $22 = 0x40400000 (3.0)
   48. shuffle                        $21..29 = ($21..29)[1 0 0 0 1 0 0 0 1]
   49. copy_4_slots_unmasked          x13(0..3) = $21..24
   50. copy_4_slots_unmasked          x13(4..7) = $25..28
   51. copy_slot_unmasked             x13(8) = $29
   52. zero_slot_unmasked             $21 = 0
   53. copy_constant                  $22 = 0x40800000 (4.0)
   54. shuffle                        $21..36 = ($21..36)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
   55. copy_4_slots_unmasked          x14(0..3) = $21..24
   56. copy_4_slots_unmasked          x14(4..7) = $25..28
   57. copy_4_slots_unmasked          x14(8..11) = $29..32
   58. copy_4_slots_unmasked          x14(12..15) = $33..36
   59. copy_constant                  $21 = 0xFFFFFFFF
   60. copy_slot_unmasked             x15 = $21
   61. copy_constant                  $21 = 0xFFFFFFFF
   62. copy_slot_unmasked             $22 = $21
   63. copy_2_slots_unmasked          x16 = $21..22
   64. copy_constant                  $21 = 0xFFFFFFFF
   65. swizzle_3                      $21..23 = ($21..23).xxx
   66. copy_3_slots_unmasked          x17 = $21..23
   67. copy_constant                  $21 = 0xFFFFFFFF
   68. swizzle_4                      $21..24 = ($21..24).xxxx
   69. copy_4_slots_unmasked          x18 = $21..24
   70. copy_constant                  $21 = 0x00000001 (1.401298e-45)
   71. copy_slot_unmasked             x19 = $21
   72. copy_constant                  $21 = 0x00000002 (2.802597e-45)
   73. copy_slot_unmasked             $22 = $21
   74. copy_2_slots_unmasked          x20 = $21..22
   75. copy_constant                  $21 = 0x00000003 (4.203895e-45)
   76. swizzle_3                      $21..23 = ($21..23).xxx
   77. copy_3_slots_unmasked          x21 = $21..23
   78. copy_constant                  $21 = 0x00000004 (5.605194e-45)
   79. swizzle_4                      $21..24 = ($21..24).xxxx
   80. copy_4_slots_unmasked          x22 = $21..24
   81. store_condition_mask           $214 = CondMask
   82. store_condition_mask           $65 = CondMask
   83. store_condition_mask           $74 = CondMask
   84. store_condition_mask           $60 = CondMask
   85. store_condition_mask           $95 = CondMask
   86. store_condition_mask           $81 = CondMask
   87. store_condition_mask           $53 = CondMask
   88. store_condition_mask           $90 = CondMask
   89. store_condition_mask           $154 = CondMask
   90. store_condition_mask           $113 = CondMask
   91. store_condition_mask           $42 = CondMask
   92. store_condition_mask           $143 = CondMask
   93. store_condition_mask           $134 = CondMask
   94. store_condition_mask           $106 = CondMask
   95. store_condition_mask           $37 = CondMask
   96. store_condition_mask           $225 = CondMask
   97. store_condition_mask           $0 = CondMask
   98. store_condition_mask           $203 = CondMask
   99. store_condition_mask           $189 = CondMask
  100. store_condition_mask           $267 = CondMask
  101. store_condition_mask           $260 = CondMask
  102. store_condition_mask           $200 = CondMask
  103. copy_slot_unmasked             $201 = x1
  104. copy_constant                  $202 = 0x3F800000 (1.0)
  105. cmpeq_float                    $201 = equal($201, $202)
  106. zero_slot_unmasked             $261 = 0
  107. merge_condition_mask           CondMask = $200 & $201
  108. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#120)
  109. copy_2_slots_unmasked          $262..263 = x2
  110. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#117)
  111. store_return_mask              $264 = RetMask
  112. copy_constant                  $265 = 0x40000000 (2.0)
  113. copy_slot_unmasked             $266 = $265
  114. copy_2_slots_masked            [returns_float2].result = Mask($265..266)
  115. load_return_mask               RetMask = $264
  116. copy_2_slots_unmasked          $264..265 = [returns_float2].result
  117. cmpeq_2_floats                 $262..263 = equal($262..263, $264..265)
  118. bitwise_and_int                $262 &= $263
  119. copy_slot_masked               $261 = Mask($262)
  120. load_condition_mask            CondMask = $200
  121. zero_slot_unmasked             $268 = 0
  122. merge_condition_mask           CondMask = $260 & $261
  123. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (#136)
  124. copy_3_slots_unmasked          $269..271 = x3
  125. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#132)
  126. store_return_mask              $272 = RetMask
  127. copy_constant                  $273 = 0x40400000 (3.0)
  128. swizzle_3                      $273..275 = ($273..275).xxx
  129. copy_3_slots_masked            [returns_float3].result = Mask($273..275)
  130. load_return_mask               RetMask = $272
  131. copy_3_slots_unmasked          $272..274 = [returns_float3].result
  132. cmpeq_3_floats                 $269..271 = equal($269..271, $272..274)
  133. bitwise_and_int                $270 &= $271
  134. bitwise_and_int                $269 &= $270
  135. copy_slot_masked               $268 = Mask($269)
  136. load_condition_mask            CondMask = $260
  137. zero_slot_unmasked             $190 = 0
  138. merge_condition_mask           CondMask = $267 & $268
  139. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (#152)
  140. copy_4_slots_unmasked          $191..194 = x4
  141. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#148)
  142. store_return_mask              $195 = RetMask
  143. copy_constant                  $196 = 0x40800000 (4.0)
  144. swizzle_4                      $196..199 = ($196..199).xxxx
  145. copy_4_slots_masked            [returns_float4].result = Mask($196..199)
  146. load_return_mask               RetMask = $195
  147. copy_4_slots_unmasked          $195..198 = [returns_float4].result
  148. cmpeq_4_floats                 $191..194 = equal($191..194, $195..198)
  149. bitwise_and_2_ints             $191..192 &= $193..194
  150. bitwise_and_int                $191 &= $192
  151. copy_slot_masked               $190 = Mask($191)
  152. load_condition_mask            CondMask = $267
  153. zero_slot_unmasked             $204 = 0
  154. merge_condition_mask           CondMask = $189 & $190
  155. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (#169)
  156. copy_4_slots_unmasked          $205..208 = x5
  157. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#165)
  158. store_return_mask              $209 = RetMask
  159. zero_slot_unmasked             $210 = 0
  160. copy_constant                  $211 = 0x40000000 (2.0)
  161. swizzle_4                      $210..213 = ($210..213).yxxy
  162. copy_4_slots_masked            [returns_float2x2].result = Mask($210..213)
  163. load_return_mask               RetMask = $209
  164. copy_4_slots_unmasked          $209..212 = [returns_float2x2].result
  165. cmpeq_4_floats                 $205..208 = equal($205..208, $209..212)
  166. bitwise_and_2_ints             $205..206 &= $207..208
  167. bitwise_and_int                $205 &= $206
  168. copy_slot_masked               $204 = Mask($205)
  169. load_condition_mask            CondMask = $189
  170. zero_slot_unmasked             $1 = 0
  171. merge_condition_mask           CondMask = $203 & $204
  172. branch_if_no_active_lanes      branch_if_no_active_lanes +22 (#194)
  173. copy_4_slots_unmasked          $2..5 = x6(0..3)
  174. copy_4_slots_unmasked          $6..9 = x6(4..7)
  175. copy_slot_unmasked             $10 = x6(8)
  176. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#188)
  177. store_return_mask              $11 = RetMask
  178. zero_slot_unmasked             $12 = 0
  179. copy_constant                  $13 = 0x40400000 (3.0)
  180. shuffle                        $12..20 = ($12..20)[1 0 0 0 1 0 0 0 1]
  181. copy_4_slots_masked            [returns_float3x3].result(0..3) = Mask($12..15)
  182. copy_4_slots_masked            [returns_float3x3].result(4..7) = Mask($16..19)
  183. copy_slot_masked               [returns_float3x3].result(8) = Mask($20)
  184. load_return_mask               RetMask = $11
  185. copy_4_slots_unmasked          $11..14 = [returns_float3x3].result(0..3)
  186. copy_4_slots_unmasked          $15..18 = [returns_float3x3].result(4..7)
  187. copy_slot_unmasked             $19 = [returns_float3x3].result(8)
  188. cmpeq_n_floats                 $2..10 = equal($2..10, $11..19)
  189. bitwise_and_4_ints             $3..6 &= $7..10
  190. bitwise_and_2_ints             $3..4 &= $5..6
  191. bitwise_and_int                $3 &= $4
  192. bitwise_and_int                $2 &= $3
  193. copy_slot_masked               $1 = Mask($2)
  194. load_condition_mask            CondMask = $203
  195. zero_slot_unmasked             $226 = 0
  196. merge_condition_mask           CondMask = $0 & $1
  197. branch_if_no_active_lanes      branch_if_no_active_lanes +26 (#223)
  198. copy_4_slots_unmasked          $227..230 = x7(0..3)
  199. copy_4_slots_unmasked          $231..234 = x7(4..7)
  200. copy_4_slots_unmasked          $235..238 = x7(8..11)
  201. copy_4_slots_unmasked          $239..242 = x7(12..15)
  202. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (#216)
  203. store_return_mask              $243 = RetMask
  204. zero_slot_unmasked             $244 = 0
  205. copy_constant                  $245 = 0x40800000 (4.0)
  206. shuffle                        $244..259 = ($244..259)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  207. copy_4_slots_masked            [returns_float4x4].result(0..3) = Mask($244..247)
  208. copy_4_slots_masked            [returns_float4x4].result(4..7) = Mask($248..251)
  209. copy_4_slots_masked            [returns_float4x4].result(8..11) = Mask($252..255)
  210. copy_4_slots_masked            [returns_float4x4].result(12..15) = Mask($256..259)
  211. load_return_mask               RetMask = $243
  212. copy_4_slots_unmasked          $243..246 = [returns_float4x4].result(0..3)
  213. copy_4_slots_unmasked          $247..250 = [returns_float4x4].result(4..7)
  214. copy_4_slots_unmasked          $251..254 = [returns_float4x4].result(8..11)
  215. copy_4_slots_unmasked          $255..258 = [returns_float4x4].result(12..15)
  216. cmpeq_n_floats                 $227..242 = equal($227..242, $243..258)
  217. bitwise_and_4_ints             $235..238 &= $239..242
  218. bitwise_and_4_ints             $231..234 &= $235..238
  219. bitwise_and_4_ints             $227..230 &= $231..234
  220. bitwise_and_2_ints             $227..228 &= $229..230
  221. bitwise_and_int                $227 &= $228
  222. copy_slot_masked               $226 = Mask($227)
  223. load_condition_mask            CondMask = $0
  224. zero_slot_unmasked             $38 = 0
  225. merge_condition_mask           CondMask = $225 & $226
  226. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#236)
  227. copy_slot_unmasked             $39 = x8
  228. branch_if_no_active_lanes      branch_if_no_active_lanes +6 (#234)
  229. store_return_mask              $40 = RetMask
  230. copy_constant                  $41 = 0x3F800000 (1.0)
  231. copy_slot_masked               [returns_half].result = Mask($41)
  232. load_return_mask               RetMask = $40
  233. copy_slot_unmasked             $40 = [returns_half].result
  234. cmpeq_float                    $39 = equal($39, $40)
  235. copy_slot_masked               $38 = Mask($39)
  236. load_condition_mask            CondMask = $225
  237. zero_slot_unmasked             $107 = 0
  238. merge_condition_mask           CondMask = $37 & $38
  239. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#251)
  240. copy_2_slots_unmasked          $108..109 = x9
  241. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#248)
  242. store_return_mask              $110 = RetMask
  243. copy_constant                  $111 = 0x40000000 (2.0)
  244. copy_slot_unmasked             $112 = $111
  245. copy_2_slots_masked            [returns_half2].result = Mask($111..112)
  246. load_return_mask               RetMask = $110
  247. copy_2_slots_unmasked          $110..111 = [returns_half2].result
  248. cmpeq_2_floats                 $108..109 = equal($108..109, $110..111)
  249. bitwise_and_int                $108 &= $109
  250. copy_slot_masked               $107 = Mask($108)
  251. load_condition_mask            CondMask = $37
  252. zero_slot_unmasked             $135 = 0
  253. merge_condition_mask           CondMask = $106 & $107
  254. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (#267)
  255. copy_3_slots_unmasked          $136..138 = x10
  256. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#263)
  257. store_return_mask              $139 = RetMask
  258. copy_constant                  $140 = 0x40400000 (3.0)
  259. swizzle_3                      $140..142 = ($140..142).xxx
  260. copy_3_slots_masked            [returns_half3].result = Mask($140..142)
  261. load_return_mask               RetMask = $139
  262. copy_3_slots_unmasked          $139..141 = [returns_half3].result
  263. cmpeq_3_floats                 $136..138 = equal($136..138, $139..141)
  264. bitwise_and_int                $137 &= $138
  265. bitwise_and_int                $136 &= $137
  266. copy_slot_masked               $135 = Mask($136)
  267. load_condition_mask            CondMask = $106
  268. zero_slot_unmasked             $144 = 0
  269. merge_condition_mask           CondMask = $134 & $135
  270. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (#283)
  271. copy_4_slots_unmasked          $145..148 = x11
  272. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#279)
  273. store_return_mask              $149 = RetMask
  274. copy_constant                  $150 = 0x40800000 (4.0)
  275. swizzle_4                      $150..153 = ($150..153).xxxx
  276. copy_4_slots_masked            [returns_half4].result = Mask($150..153)
  277. load_return_mask               RetMask = $149
  278. copy_4_slots_unmasked          $149..152 = [returns_half4].result
  279. cmpeq_4_floats                 $145..148 = equal($145..148, $149..152)
  280. bitwise_and_2_ints             $145..146 &= $147..148
  281. bitwise_and_int                $145 &= $146
  282. copy_slot_masked               $144 = Mask($145)
  283. load_condition_mask            CondMask = $134
  284. zero_slot_unmasked             $43 = 0
  285. merge_condition_mask           CondMask = $143 & $144
  286. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (#300)
  287. copy_4_slots_unmasked          $44..47 = x12
  288. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#296)
  289. store_return_mask              $48 = RetMask
  290. zero_slot_unmasked             $49 = 0
  291. copy_constant                  $50 = 0x40000000 (2.0)
  292. swizzle_4                      $49..52 = ($49..52).yxxy
  293. copy_4_slots_masked            [returns_half2x2].result = Mask($49..52)
  294. load_return_mask               RetMask = $48
  295. copy_4_slots_unmasked          $48..51 = [returns_half2x2].result
  296. cmpeq_4_floats                 $44..47 = equal($44..47, $48..51)
  297. bitwise_and_2_ints             $44..45 &= $46..47
  298. bitwise_and_int                $44 &= $45
  299. copy_slot_masked               $43 = Mask($44)
  300. load_condition_mask            CondMask = $143
  301. zero_slot_unmasked             $114 = 0
  302. merge_condition_mask           CondMask = $42 & $43
  303. branch_if_no_active_lanes      branch_if_no_active_lanes +22 (#325)
  304. copy_4_slots_unmasked          $115..118 = x13(0..3)
  305. copy_4_slots_unmasked          $119..122 = x13(4..7)
  306. copy_slot_unmasked             $123 = x13(8)
  307. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#319)
  308. store_return_mask              $124 = RetMask
  309. zero_slot_unmasked             $125 = 0
  310. copy_constant                  $126 = 0x40400000 (3.0)
  311. shuffle                        $125..133 = ($125..133)[1 0 0 0 1 0 0 0 1]
  312. copy_4_slots_masked            [returns_half3x3].result(0..3) = Mask($125..128)
  313. copy_4_slots_masked            [returns_half3x3].result(4..7) = Mask($129..132)
  314. copy_slot_masked               [returns_half3x3].result(8) = Mask($133)
  315. load_return_mask               RetMask = $124
  316. copy_4_slots_unmasked          $124..127 = [returns_half3x3].result(0..3)
  317. copy_4_slots_unmasked          $128..131 = [returns_half3x3].result(4..7)
  318. copy_slot_unmasked             $132 = [returns_half3x3].result(8)
  319. cmpeq_n_floats                 $115..123 = equal($115..123, $124..132)
  320. bitwise_and_4_ints             $116..119 &= $120..123
  321. bitwise_and_2_ints             $116..117 &= $118..119
  322. bitwise_and_int                $116 &= $117
  323. bitwise_and_int                $115 &= $116
  324. copy_slot_masked               $114 = Mask($115)
  325. load_condition_mask            CondMask = $42
  326. zero_slot_unmasked             $155 = 0
  327. merge_condition_mask           CondMask = $113 & $114
  328. branch_if_no_active_lanes      branch_if_no_active_lanes +26 (#354)
  329. copy_4_slots_unmasked          $156..159 = x14(0..3)
  330. copy_4_slots_unmasked          $160..163 = x14(4..7)
  331. copy_4_slots_unmasked          $164..167 = x14(8..11)
  332. copy_4_slots_unmasked          $168..171 = x14(12..15)
  333. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (#347)
  334. store_return_mask              $172 = RetMask
  335. zero_slot_unmasked             $173 = 0
  336. copy_constant                  $174 = 0x40800000 (4.0)
  337. shuffle                        $173..188 = ($173..188)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  338. copy_4_slots_masked            [returns_half4x4].result(0..3) = Mask($173..176)
  339. copy_4_slots_masked            [returns_half4x4].result(4..7) = Mask($177..180)
  340. copy_4_slots_masked            [returns_half4x4].result(8..11) = Mask($181..184)
  341. copy_4_slots_masked            [returns_half4x4].result(12..15) = Mask($185..188)
  342. load_return_mask               RetMask = $172
  343. copy_4_slots_unmasked          $172..175 = [returns_half4x4].result(0..3)
  344. copy_4_slots_unmasked          $176..179 = [returns_half4x4].result(4..7)
  345. copy_4_slots_unmasked          $180..183 = [returns_half4x4].result(8..11)
  346. copy_4_slots_unmasked          $184..187 = [returns_half4x4].result(12..15)
  347. cmpeq_n_floats                 $156..171 = equal($156..171, $172..187)
  348. bitwise_and_4_ints             $164..167 &= $168..171
  349. bitwise_and_4_ints             $160..163 &= $164..167
  350. bitwise_and_4_ints             $156..159 &= $160..163
  351. bitwise_and_2_ints             $156..157 &= $158..159
  352. bitwise_and_int                $156 &= $157
  353. copy_slot_masked               $155 = Mask($156)
  354. load_condition_mask            CondMask = $113
  355. zero_slot_unmasked             $91 = 0
  356. merge_condition_mask           CondMask = $154 & $155
  357. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#367)
  358. copy_slot_unmasked             $92 = x15
  359. branch_if_no_active_lanes      branch_if_no_active_lanes +6 (#365)
  360. store_return_mask              $93 = RetMask
  361. copy_constant                  $94 = 0xFFFFFFFF
  362. copy_slot_masked               [returns_bool].result = Mask($94)
  363. load_return_mask               RetMask = $93
  364. copy_slot_unmasked             $93 = [returns_bool].result
  365. cmpeq_int                      $92 = equal($92, $93)
  366. copy_slot_masked               $91 = Mask($92)
  367. load_condition_mask            CondMask = $154
  368. zero_slot_unmasked             $54 = 0
  369. merge_condition_mask           CondMask = $90 & $91
  370. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#382)
  371. copy_2_slots_unmasked          $55..56 = x16
  372. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#379)
  373. store_return_mask              $57 = RetMask
  374. copy_constant                  $58 = 0xFFFFFFFF
  375. copy_slot_unmasked             $59 = $58
  376. copy_2_slots_masked            [returns_bool2].result = Mask($58..59)
  377. load_return_mask               RetMask = $57
  378. copy_2_slots_unmasked          $57..58 = [returns_bool2].result
  379. cmpeq_2_ints                   $55..56 = equal($55..56, $57..58)
  380. bitwise_and_int                $55 &= $56
  381. copy_slot_masked               $54 = Mask($55)
  382. load_condition_mask            CondMask = $90
  383. zero_slot_unmasked             $82 = 0
  384. merge_condition_mask           CondMask = $53 & $54
  385. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (#398)
  386. copy_3_slots_unmasked          $83..85 = x17
  387. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#394)
  388. store_return_mask              $86 = RetMask
  389. copy_constant                  $87 = 0xFFFFFFFF
  390. swizzle_3                      $87..89 = ($87..89).xxx
  391. copy_3_slots_masked            [returns_bool3].result = Mask($87..89)
  392. load_return_mask               RetMask = $86
  393. copy_3_slots_unmasked          $86..88 = [returns_bool3].result
  394. cmpeq_3_ints                   $83..85 = equal($83..85, $86..88)
  395. bitwise_and_int                $84 &= $85
  396. bitwise_and_int                $83 &= $84
  397. copy_slot_masked               $82 = Mask($83)
  398. load_condition_mask            CondMask = $53
  399. zero_slot_unmasked             $96 = 0
  400. merge_condition_mask           CondMask = $81 & $82
  401. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (#414)
  402. copy_4_slots_unmasked          $97..100 = x18
  403. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#410)
  404. store_return_mask              $101 = RetMask
  405. copy_constant                  $102 = 0xFFFFFFFF
  406. swizzle_4                      $102..105 = ($102..105).xxxx
  407. copy_4_slots_masked            [returns_bool4].result = Mask($102..105)
  408. load_return_mask               RetMask = $101
  409. copy_4_slots_unmasked          $101..104 = [returns_bool4].result
  410. cmpeq_4_ints                   $97..100 = equal($97..100, $101..104)
  411. bitwise_and_2_ints             $97..98 &= $99..100
  412. bitwise_and_int                $97 &= $98
  413. copy_slot_masked               $96 = Mask($97)
  414. load_condition_mask            CondMask = $81
  415. zero_slot_unmasked             $61 = 0
  416. merge_condition_mask           CondMask = $95 & $96
  417. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#427)
  418. copy_slot_unmasked             $62 = x19
  419. branch_if_no_active_lanes      branch_if_no_active_lanes +6 (#425)
  420. store_return_mask              $63 = RetMask
  421. copy_constant                  $64 = 0x00000001 (1.401298e-45)
  422. copy_slot_masked               [returns_int].result = Mask($64)
  423. load_return_mask               RetMask = $63
  424. copy_slot_unmasked             $63 = [returns_int].result
  425. cmpeq_int                      $62 = equal($62, $63)
  426. copy_slot_masked               $61 = Mask($62)
  427. load_condition_mask            CondMask = $95
  428. zero_slot_unmasked             $75 = 0
  429. merge_condition_mask           CondMask = $60 & $61
  430. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#442)
  431. copy_2_slots_unmasked          $76..77 = x20
  432. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#439)
  433. store_return_mask              $78 = RetMask
  434. copy_constant                  $79 = 0x00000002 (2.802597e-45)
  435. copy_slot_unmasked             $80 = $79
  436. copy_2_slots_masked            [returns_int2].result = Mask($79..80)
  437. load_return_mask               RetMask = $78
  438. copy_2_slots_unmasked          $78..79 = [returns_int2].result
  439. cmpeq_2_ints                   $76..77 = equal($76..77, $78..79)
  440. bitwise_and_int                $76 &= $77
  441. copy_slot_masked               $75 = Mask($76)
  442. load_condition_mask            CondMask = $60
  443. zero_slot_unmasked             $66 = 0
  444. merge_condition_mask           CondMask = $74 & $75
  445. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (#458)
  446. copy_3_slots_unmasked          $67..69 = x21
  447. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#454)
  448. store_return_mask              $70 = RetMask
  449. copy_constant                  $71 = 0x00000003 (4.203895e-45)
  450. swizzle_3                      $71..73 = ($71..73).xxx
  451. copy_3_slots_masked            [returns_int3].result = Mask($71..73)
  452. load_return_mask               RetMask = $70
  453. copy_3_slots_unmasked          $70..72 = [returns_int3].result
  454. cmpeq_3_ints                   $67..69 = equal($67..69, $70..72)
  455. bitwise_and_int                $68 &= $69
  456. bitwise_and_int                $67 &= $68
  457. copy_slot_masked               $66 = Mask($67)
  458. load_condition_mask            CondMask = $74
  459. zero_slot_unmasked             $215 = 0
  460. merge_condition_mask           CondMask = $65 & $66
  461. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (#474)
  462. copy_4_slots_unmasked          $216..219 = x22
  463. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#470)
  464. store_return_mask              $220 = RetMask
  465. copy_constant                  $221 = 0x00000004 (5.605194e-45)
  466. swizzle_4                      $221..224 = ($221..224).xxxx
  467. copy_4_slots_masked            [returns_int4].result = Mask($221..224)
  468. load_return_mask               RetMask = $220
  469. copy_4_slots_unmasked          $220..223 = [returns_int4].result
  470. cmpeq_4_ints                   $216..219 = equal($216..219, $220..223)
  471. bitwise_and_2_ints             $216..217 &= $218..219
  472. bitwise_and_int                $216 &= $217
  473. copy_slot_masked               $215 = Mask($216)
  474. load_condition_mask            CondMask = $65
  475. copy_4_constants               $21..24 = colorRed
  476. merge_condition_mask           CondMask = $214 & $215
  477. copy_4_constants               $25..28 = colorGreen
  478. copy_4_slots_masked            $21..24 = Mask($25..28)
  479. load_condition_mask            CondMask = $214
  480. copy_4_slots_masked            [main].result = Mask($21..24)
  481. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  482. load_src                       src.rgba = [main].result
