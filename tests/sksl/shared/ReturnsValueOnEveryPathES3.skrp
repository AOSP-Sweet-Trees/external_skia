    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $26 = CondMask
    4. store_condition_mask           $40 = CondMask
    5. store_condition_mask           $49 = CondMask
    6. store_condition_mask           $34 = CondMask
    7. store_condition_mask           $69 = CondMask
    8. store_condition_mask           $58 = CondMask
    9. store_condition_mask           $22 = CondMask
   10. store_condition_mask           $65 = CondMask
   11. store_condition_mask           $17 = CondMask
   12. store_condition_mask           $0 = CondMask
   13. store_condition_mask           $76 = CondMask
   14. branch_if_no_active_lanes      branch_if_no_active_lanes +20 (label 12 at #34)
   15. store_return_mask              $77 = RetMask
   16. store_loop_mask                $78 = LoopMask
   17. jump                           jump +5 (label 13 at #22)
   18. label                          label 0x0000000E
   19. zero_slot_unmasked             $79 = 0
   20. copy_slot_masked               [inside_while_loop].result = Mask($79)
   21. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   22. label                          label 0x0000000D
   23. copy_constant                  $79 = unknownInput
   24. copy_constant                  $80 = 0x42F60000 (123.0)
   25. cmpeq_float                    $79 = equal($79, $80)
   26. merge_loop_mask                LoopMask &= $79
   27. stack_rewind
   28. branch_if_any_active_lanes     branch_if_any_active_lanes -10 (label 14 at #18)
   29. load_loop_mask                 LoopMask = $78
   30. copy_constant                  $78 = 0xFFFFFFFF
   31. copy_slot_masked               [inside_while_loop].result = Mask($78)
   32. load_return_mask               RetMask = $77
   33. copy_slot_unmasked             $77 = [inside_while_loop].result
   34. label                          label 0x0000000C
   35. zero_slot_unmasked             $1 = 0
   36. merge_condition_mask           CondMask = $76 & $77
   37. branch_if_no_active_lanes      branch_if_no_active_lanes +16 (label 11 at #53)
   38. store_return_mask              $2 = RetMask
   39. store_loop_mask                $3 = LoopMask
   40. label                          label 0x00000010
   41. copy_constant                  $4 = 0xFFFFFFFF
   42. copy_slot_masked               [inside_infinite_do_loop].result = Mask($4)
   43. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   44. copy_constant                  $4 = 0xFFFFFFFF
   45. merge_loop_mask                LoopMask &= $4
   46. stack_rewind
   47. branch_if_any_active_lanes     branch_if_any_active_lanes -7 (label 16 at #40)
   48. load_loop_mask                 LoopMask = $3
   49. load_return_mask               RetMask = $2
   50. copy_slot_unmasked             $2 = [inside_infinite_do_loop].result
   51. label                          label 0x0000000F
   52. copy_slot_masked               $1 = Mask($2)
   53. label                          label 0x0000000B
   54. load_condition_mask            CondMask = $76
   55. zero_slot_unmasked             $18 = 0
   56. merge_condition_mask           CondMask = $0 & $1
   57. branch_if_no_active_lanes      branch_if_no_active_lanes +18 (label 10 at #75)
   58. store_return_mask              $19 = RetMask
   59. store_loop_mask                $20 = LoopMask
   60. jump                           jump +5 (label 18 at #65)
   61. label                          label 0x00000013
   62. copy_constant                  $21 = 0xFFFFFFFF
   63. copy_slot_masked               [inside_infinite_while_loop].result = Mask($21)
   64. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   65. label                          label 0x00000012
   66. copy_constant                  $21 = 0xFFFFFFFF
   67. merge_loop_mask                LoopMask &= $21
   68. stack_rewind
   69. branch_if_any_active_lanes     branch_if_any_active_lanes -8 (label 19 at #61)
   70. load_loop_mask                 LoopMask = $20
   71. load_return_mask               RetMask = $19
   72. copy_slot_unmasked             $19 = [inside_infinite_while_loop].result
   73. label                          label 0x00000011
   74. copy_slot_masked               $18 = Mask($19)
   75. label                          label 0x0000000A
   76. load_condition_mask            CondMask = $0
   77. zero_slot_unmasked             $66 = 0
   78. merge_condition_mask           CondMask = $17 & $18
   79. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (label 9 at #91)
   80. store_loop_mask                $67 = LoopMask
   81. label                          label 0x00000015
   82. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   83. copy_constant                  $68 = 0xFFFFFFFF
   84. merge_loop_mask                LoopMask &= $68
   85. stack_rewind
   86. branch_if_any_active_lanes     branch_if_any_active_lanes -5 (label 21 at #81)
   87. load_loop_mask                 LoopMask = $67
   88. copy_constant                  $67 = 0xFFFFFFFF
   89. label                          label 0x00000014
   90. copy_slot_masked               $66 = Mask($67)
   91. label                          label 0x00000009
   92. load_condition_mask            CondMask = $17
   93. zero_slot_unmasked             $23 = 0
   94. merge_condition_mask           CondMask = $65 & $66
   95. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 8 at #109)
   96. store_loop_mask                $24 = LoopMask
   97. jump                           jump +3 (label 23 at #100)
   98. label                          label 0x00000018
   99. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  100. label                          label 0x00000017
  101. copy_constant                  $25 = 0xFFFFFFFF
  102. merge_loop_mask                LoopMask &= $25
  103. stack_rewind
  104. branch_if_any_active_lanes     branch_if_any_active_lanes -6 (label 24 at #98)
  105. load_loop_mask                 LoopMask = $24
  106. copy_constant                  $24 = 0xFFFFFFFF
  107. label                          label 0x00000016
  108. copy_slot_masked               $23 = Mask($24)
  109. label                          label 0x00000008
  110. load_condition_mask            CondMask = $65
  111. zero_slot_unmasked             $59 = 0
  112. merge_condition_mask           CondMask = $22 & $23
  113. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (label 7 at #143)
  114. store_return_mask              $60 = RetMask
  115. store_loop_mask                $61 = LoopMask
  116. copy_constant                  $62 = unknownInput
  117. cast_to_int_from_float         $62 = FloatToInt($62)
  118. store_loop_mask                $63 = LoopMask
  119. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  120. case_op                        if ($62 == 0x00000001) { LoopMask = true; $63 = false; }
  121. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 26 at #125)
  122. copy_constant                  $64 = 0xFFFFFFFF
  123. copy_slot_masked               [switch_with_all_returns].result = Mask($64)
  124. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  125. label                          label 0x0000001A
  126. case_op                        if ($62 == 0x00000002) { LoopMask = true; $63 = false; }
  127. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 27 at #131)
  128. zero_slot_unmasked             $64 = 0
  129. copy_slot_masked               [switch_with_all_returns].result = Mask($64)
  130. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  131. label                          label 0x0000001B
  132. reenable_loop_mask             LoopMask |= $63
  133. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 28 at #137)
  134. zero_slot_unmasked             $63 = 0
  135. copy_slot_masked               [switch_with_all_returns].result = Mask($63)
  136. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  137. label                          label 0x0000001C
  138. load_loop_mask                 LoopMask = $61
  139. load_return_mask               RetMask = $60
  140. copy_slot_unmasked             $60 = [switch_with_all_returns].result
  141. label                          label 0x00000019
  142. copy_slot_masked               $59 = Mask($60)
  143. label                          label 0x00000007
  144. load_condition_mask            CondMask = $22
  145. zero_slot_unmasked             $70 = 0
  146. merge_condition_mask           CondMask = $58 & $59
  147. branch_if_no_active_lanes      branch_if_no_active_lanes +26 (label 6 at #173)
  148. store_return_mask              $71 = RetMask
  149. store_loop_mask                $72 = LoopMask
  150. copy_constant                  $73 = unknownInput
  151. cast_to_int_from_float         $73 = FloatToInt($73)
  152. store_loop_mask                $74 = LoopMask
  153. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  154. case_op                        if ($73 == 0x00000001) { LoopMask = true; $74 = false; }
  155. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 30 at #159)
  156. copy_constant                  $75 = 0xFFFFFFFF
  157. copy_slot_masked               [switch_fallthrough].result = Mask($75)
  158. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  159. label                          label 0x0000001E
  160. case_op                        if ($73 == 0x00000002) { LoopMask = true; $74 = false; }
  161. label                          label 0x0000001F
  162. reenable_loop_mask             LoopMask |= $74
  163. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 32 at #167)
  164. zero_slot_unmasked             $74 = 0
  165. copy_slot_masked               [switch_fallthrough].result = Mask($74)
  166. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  167. label                          label 0x00000020
  168. load_loop_mask                 LoopMask = $72
  169. load_return_mask               RetMask = $71
  170. copy_slot_unmasked             $71 = [switch_fallthrough].result
  171. label                          label 0x0000001D
  172. copy_slot_masked               $70 = Mask($71)
  173. label                          label 0x00000006
  174. load_condition_mask            CondMask = $58
  175. zero_slot_unmasked             $35 = 0
  176. merge_condition_mask           CondMask = $69 & $70
  177. branch_if_no_active_lanes      branch_if_no_active_lanes +22 (label 5 at #199)
  178. store_return_mask              $36 = RetMask
  179. store_loop_mask                $37 = LoopMask
  180. copy_constant                  $38 = unknownInput
  181. cast_to_int_from_float         $38 = FloatToInt($38)
  182. store_loop_mask                $39 = LoopMask
  183. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  184. case_op                        if ($38 == 0x00000001) { LoopMask = true; $39 = false; }
  185. label                          label 0x00000022
  186. case_op                        if ($38 == 0x00000002) { LoopMask = true; $39 = false; }
  187. label                          label 0x00000023
  188. reenable_loop_mask             LoopMask |= $39
  189. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 36 at #193)
  190. copy_constant                  $39 = 0xFFFFFFFF
  191. copy_slot_masked               [switch_fallthrough_twice].result = Mask($39)
  192. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  193. label                          label 0x00000024
  194. load_loop_mask                 LoopMask = $37
  195. load_return_mask               RetMask = $36
  196. copy_slot_unmasked             $36 = [switch_fallthrough_twice].result
  197. label                          label 0x00000021
  198. copy_slot_masked               $35 = Mask($36)
  199. label                          label 0x00000005
  200. load_condition_mask            CondMask = $69
  201. zero_slot_unmasked             $50 = 0
  202. merge_condition_mask           CondMask = $34 & $35
  203. branch_if_no_active_lanes      branch_if_no_active_lanes +38 (label 4 at #241)
  204. store_return_mask              $51 = RetMask
  205. store_loop_mask                $52 = LoopMask
  206. copy_constant                  $53 = unknownInput
  207. cast_to_int_from_float         $53 = FloatToInt($53)
  208. store_loop_mask                $54 = LoopMask
  209. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  210. case_op                        if ($53 == 0x00000001) { LoopMask = true; $54 = false; }
  211. branch_if_no_active_lanes      branch_if_no_active_lanes +18 (label 38 at #229)
  212. zero_slot_unmasked             x = 0
  213. store_loop_mask                $55 = LoopMask
  214. jump                           jump +7 (label 39 at #221)
  215. label                          label 0x00000028
  216. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  217. copy_slot_unmasked             $56 = x
  218. copy_constant                  $57 = 0x00000001 (1.401298e-45)
  219. add_int                        $56 += $57
  220. copy_slot_masked               x = Mask($56)
  221. label                          label 0x00000027
  222. copy_slot_unmasked             $56 = x
  223. copy_constant                  $57 = 0x0000000A (1.401298e-44)
  224. cmple_int                      $56 = lessThanEqual($56, $57)
  225. merge_loop_mask                LoopMask &= $56
  226. stack_rewind
  227. branch_if_any_active_lanes     branch_if_any_active_lanes -12 (label 40 at #215)
  228. load_loop_mask                 LoopMask = $55
  229. label                          label 0x00000026
  230. reenable_loop_mask             LoopMask |= $54
  231. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 41 at #235)
  232. copy_constant                  $54 = 0xFFFFFFFF
  233. copy_slot_masked               [switch_with_break_in_loop].result = Mask($54)
  234. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  235. label                          label 0x00000029
  236. load_loop_mask                 LoopMask = $52
  237. load_return_mask               RetMask = $51
  238. copy_slot_unmasked             $51 = [switch_with_break_in_loop].result
  239. label                          label 0x00000025
  240. copy_slot_masked               $50 = Mask($51)
  241. label                          label 0x00000004
  242. load_condition_mask            CondMask = $34
  243. zero_slot_unmasked             $41 = 0
  244. merge_condition_mask           CondMask = $49 & $50
  245. branch_if_no_active_lanes      branch_if_no_active_lanes +42 (label 3 at #287)
  246. store_return_mask              $42 = RetMask
  247. store_loop_mask                $43 = LoopMask
  248. copy_constant                  $44 = unknownInput
  249. cast_to_int_from_float         $44 = FloatToInt($44)
  250. store_loop_mask                $45 = LoopMask
  251. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  252. case_op                        if ($44 == 0x00000001) { LoopMask = true; $45 = false; }
  253. branch_if_no_active_lanes      branch_if_no_active_lanes +22 (label 43 at #275)
  254. zero_slot_unmasked             x₁ = 0
  255. store_loop_mask                $46 = LoopMask
  256. jump                           jump +11 (label 44 at #267)
  257. label                          label 0x0000002D
  258. zero_slot_unmasked             $34 = 0
  259. copy_constant                  $35 = 0xFFFFFFFF
  260. copy_slot_masked               $34 = Mask($35)
  261. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  262. reenable_loop_mask             LoopMask |= $34
  263. copy_slot_unmasked             $47 = x₁
  264. copy_constant                  $48 = 0x00000001 (1.401298e-45)
  265. add_int                        $47 += $48
  266. copy_slot_masked               x₁ = Mask($47)
  267. label                          label 0x0000002C
  268. copy_slot_unmasked             $47 = x₁
  269. copy_constant                  $48 = 0x0000000A (1.401298e-44)
  270. cmple_int                      $47 = lessThanEqual($47, $48)
  271. merge_loop_mask                LoopMask &= $47
  272. stack_rewind
  273. branch_if_any_active_lanes     branch_if_any_active_lanes -16 (label 45 at #257)
  274. load_loop_mask                 LoopMask = $46
  275. label                          label 0x0000002B
  276. reenable_loop_mask             LoopMask |= $45
  277. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 46 at #281)
  278. copy_constant                  $45 = 0xFFFFFFFF
  279. copy_slot_masked               [switch_with_continue_in_loop].result = Mask($45)
  280. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  281. label                          label 0x0000002E
  282. load_loop_mask                 LoopMask = $43
  283. load_return_mask               RetMask = $42
  284. copy_slot_unmasked             $42 = [switch_with_continue_in_loop].result
  285. label                          label 0x0000002A
  286. copy_slot_masked               $41 = Mask($42)
  287. label                          label 0x00000003
  288. load_condition_mask            CondMask = $49
  289. zero_slot_unmasked             $27 = 0
  290. merge_condition_mask           CondMask = $40 & $41
  291. branch_if_no_active_lanes      branch_if_no_active_lanes +34 (label 2 at #325)
  292. store_return_mask              $28 = RetMask
  293. store_loop_mask                $29 = LoopMask
  294. copy_constant                  $30 = unknownInput
  295. cast_to_int_from_float         $30 = FloatToInt($30)
  296. store_loop_mask                $31 = LoopMask
  297. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  298. case_op                        if ($30 == 0x00000001) { LoopMask = true; $31 = false; }
  299. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 48 at #313)
  300. copy_constant                  $32 = unknownInput
  301. copy_constant                  $33 = 0x42F60000 (123.0)
  302. cmpeq_float                    $32 = equal($32, $33)
  303. branch_if_no_active_lanes_eq   branch +5 (label 49 at #308) if no lanes of $32 == 0xFFFFFFFF
  304. zero_slot_unmasked             $33 = 0
  305. copy_slot_masked               [switch_with_if_that_returns].result = Mask($33)
  306. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  307. jump                           jump +5 (label 50 at #312)
  308. label                          label 0x00000031
  309. copy_constant                  $33 = 0xFFFFFFFF
  310. copy_slot_masked               [switch_with_if_that_returns].result = Mask($33)
  311. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  312. label                          label 0x00000032
  313. label                          label 0x00000030
  314. reenable_loop_mask             LoopMask |= $31
  315. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 51 at #319)
  316. copy_constant                  $31 = 0xFFFFFFFF
  317. copy_slot_masked               [switch_with_if_that_returns].result = Mask($31)
  318. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  319. label                          label 0x00000033
  320. load_loop_mask                 LoopMask = $29
  321. load_return_mask               RetMask = $28
  322. copy_slot_unmasked             $28 = [switch_with_if_that_returns].result
  323. label                          label 0x0000002F
  324. copy_slot_masked               $27 = Mask($28)
  325. label                          label 0x00000002
  326. load_condition_mask            CondMask = $40
  327. zero_slot_unmasked             $5 = 0
  328. merge_condition_mask           CondMask = $26 & $27
  329. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 1 at #358)
  330. store_return_mask              $6 = RetMask
  331. store_loop_mask                $7 = LoopMask
  332. copy_constant                  $8 = unknownInput
  333. cast_to_int_from_float         $8 = FloatToInt($8)
  334. store_loop_mask                $9 = LoopMask
  335. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  336. case_op                        if ($8 == 0x00000001) { LoopMask = true; $9 = false; }
  337. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (label 53 at #346)
  338. copy_constant                  $10 = unknownInput
  339. copy_constant                  $11 = 0x42F60000 (123.0)
  340. cmpeq_float                    $10 = equal($10, $11)
  341. branch_if_no_active_lanes_eq   branch +4 (label 54 at #345) if no lanes of $10 == 0xFFFFFFFF
  342. zero_slot_unmasked             $11 = 0
  343. copy_slot_masked               [switch_with_one_sided_if_then_fallthrough].result = Mask($11)
  344. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  345. label                          label 0x00000036
  346. label                          label 0x00000035
  347. reenable_loop_mask             LoopMask |= $9
  348. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 56 at #352)
  349. copy_constant                  $9 = 0xFFFFFFFF
  350. copy_slot_masked               [switch_with_one_sided_if_then_fallthrough].result = Mask($9)
  351. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  352. label                          label 0x00000038
  353. load_loop_mask                 LoopMask = $7
  354. load_return_mask               RetMask = $6
  355. copy_slot_unmasked             $6 = [switch_with_one_sided_if_then_fallthrough].result
  356. label                          label 0x00000034
  357. copy_slot_masked               $5 = Mask($6)
  358. label                          label 0x00000001
  359. load_condition_mask            CondMask = $26
  360. swizzle_4                      $5..8 = ($5..8).xxxx
  361. copy_4_constants               $9..12 = colorRed
  362. copy_4_constants               $13..16 = colorGreen
  363. mix_4_ints                     $5..8 = mix($9..12, $13..16, $5..8)
  364. load_src                       src.rgba = $5..8
