    1. store_src_rg                   xy = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             $0 = 0
    4. copy_slot_unmasked             scratchVar = $0
    5. store_condition_mask           $24 = CondMask
    6. store_condition_mask           $18 = CondMask
    7. store_condition_mask           $11 = CondMask
    8. store_condition_mask           $8 = CondMask
    9. branch_if_no_active_lanes      branch_if_no_active_lanes +6 (#15)
   10. store_return_mask              $9 = RetMask
   11. copy_constant                  $10 = 0xFFFFFFFF
   12. copy_slot_masked               [test_flat].result = Mask($10)
   13. load_return_mask               RetMask = $9
   14. copy_slot_unmasked             $9 = [test_flat].result
   15. zero_slot_unmasked             $12 = 0
   16. merge_condition_mask           CondMask = $8 & $9
   17. branch_if_no_active_lanes      branch_if_no_active_lanes +26 (#43)
   18. store_return_mask              $13 = RetMask
   19. store_condition_mask           $14 = CondMask
   20. zero_slot_unmasked             $15 = 0
   21. copy_constant                  $16 = colorGreen(1)
   22. cmplt_float                    $15 = lessThan($15, $16)
   23. merge_condition_mask           CondMask = $14 & $15
   24. copy_constant                  $16 = 0xFFFFFFFF
   25. copy_slot_masked               [test_if].result = Mask($16)
   26. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   27. bitwise_not_int                $15 = ~$15
   28. merge_condition_mask           CondMask = $14 & $15
   29. copy_slot_unmasked             $16 = scratchVar
   30. copy_constant                  $17 = 0x00000001 (1.401298e-45)
   31. add_int                        $16 += $17
   32. copy_slot_masked               scratchVar = Mask($16)
   33. load_condition_mask            CondMask = $14
   34. copy_slot_unmasked             $14 = scratchVar
   35. copy_constant                  $15 = 0x00000001 (1.401298e-45)
   36. add_int                        $14 += $15
   37. copy_slot_masked               scratchVar = Mask($14)
   38. zero_slot_unmasked             $14 = 0
   39. copy_slot_masked               [test_if].result = Mask($14)
   40. load_return_mask               RetMask = $13
   41. copy_slot_unmasked             $13 = [test_if].result
   42. copy_slot_masked               $12 = Mask($13)
   43. load_condition_mask            CondMask = $8
   44. zero_slot_unmasked             $19 = 0
   45. merge_condition_mask           CondMask = $11 & $12
   46. branch_if_no_active_lanes      branch_if_no_active_lanes +19 (#65)
   47. store_return_mask              $20 = RetMask
   48. store_condition_mask           $21 = CondMask
   49. copy_constant                  $22 = colorGreen(1)
   50. zero_slot_unmasked             $23 = 0
   51. cmpeq_float                    $22 = equal($22, $23)
   52. merge_condition_mask           CondMask = $21 & $22
   53. zero_slot_unmasked             $23 = 0
   54. copy_slot_masked               [test_else].result = Mask($23)
   55. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   56. bitwise_not_int                $22 = ~$22
   57. merge_condition_mask           CondMask = $21 & $22
   58. copy_constant                  $23 = 0xFFFFFFFF
   59. copy_slot_masked               [test_else].result = Mask($23)
   60. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   61. load_condition_mask            CondMask = $21
   62. load_return_mask               RetMask = $20
   63. copy_slot_unmasked             $20 = [test_else].result
   64. copy_slot_masked               $19 = Mask($20)
   65. load_condition_mask            CondMask = $11
   66. zero_slot_unmasked             $25 = 0
   67. merge_condition_mask           CondMask = $18 & $19
   68. branch_if_no_active_lanes      branch_if_no_active_lanes +42 (#110)
   69. store_return_mask              $26 = RetMask
   70. zero_slot_unmasked             $27 = 0
   71. copy_slot_unmasked             x = $27
   72. store_loop_mask                $27 = LoopMask
   73. jump                           jump +21 (#94)
   74. zero_slot_unmasked             [for-loop continue mask 0] = 0
   75. store_condition_mask           $28 = CondMask
   76. copy_constant                  $29 = colorGreen(1)
   77. zero_slot_unmasked             $30 = 0
   78. cmpeq_float                    $29 = equal($29, $30)
   79. merge_condition_mask           CondMask = $28 & $29
   80. zero_slot_unmasked             $30 = 0
   81. copy_slot_masked               [test_loop_if].result = Mask($30)
   82. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   83. bitwise_not_int                $29 = ~$29
   84. merge_condition_mask           CondMask = $28 & $29
   85. copy_constant                  $30 = 0xFFFFFFFF
   86. copy_slot_masked               [test_loop_if].result = Mask($30)
   87. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   88. load_condition_mask            CondMask = $28
   89. reenable_loop_mask             LoopMask |= [for-loop continue mask 0]
   90. copy_slot_unmasked             $28 = x
   91. copy_constant                  $29 = 0x00000001 (1.401298e-45)
   92. add_int                        $28 += $29
   93. copy_slot_masked               x = Mask($28)
   94. copy_slot_unmasked             $28 = x
   95. copy_constant                  $29 = 0x00000001 (1.401298e-45)
   96. cmple_int                      $28 = lessThanEqual($28, $29)
   97. merge_loop_mask                LoopMask &= $28
   98. stack_rewind
   99. branch_if_any_active_lanes     branch_if_any_active_lanes -25 (#74)
  100. load_loop_mask                 LoopMask = $27
  101. copy_slot_unmasked             $27 = scratchVar
  102. copy_constant                  $28 = 0x00000001 (1.401298e-45)
  103. add_int                        $27 += $28
  104. copy_slot_masked               scratchVar = Mask($27)
  105. copy_constant                  $27 = 0xFFFFFFFF
  106. copy_slot_masked               [test_loop_if].result = Mask($27)
  107. load_return_mask               RetMask = $26
  108. copy_slot_unmasked             $26 = [test_loop_if].result
  109. copy_slot_masked               $25 = Mask($26)
  110. load_condition_mask            CondMask = $18
  111. copy_4_constants               $0..3 = colorRed
  112. merge_condition_mask           CondMask = $24 & $25
  113. copy_4_constants               $4..7 = colorGreen
  114. copy_4_slots_masked            $0..3 = Mask($4..7)
  115. load_condition_mask            CondMask = $24
  116. copy_4_slots_masked            [main].result = Mask($0..3)
  117. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  118. load_src                       src.rgba = [main].result
