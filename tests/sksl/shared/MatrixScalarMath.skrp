    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  minus = 0x00000002 (2.802597e-45)
    4. copy_constant                  star = 0x00000003 (4.203895e-45)
    5. copy_constant                  slash = 0x00000004 (5.605194e-45)
    6. copy_constant                  $0 = colorGreen(1)
    7. copy_slot_unmasked             f1 = $0
    8. copy_constant                  $0 = 0x40000000 (2.0)
    9. copy_constant                  $1 = colorGreen(1)
   10. mul_float                      $0 *= $1
   11. copy_slot_unmasked             f2 = $0
   12. copy_constant                  $0 = 0x40400000 (3.0)
   13. copy_constant                  $1 = colorGreen(1)
   14. mul_float                      $0 *= $1
   15. copy_slot_unmasked             f3 = $0
   16. copy_constant                  $0 = 0x40800000 (4.0)
   17. copy_constant                  $1 = colorGreen(1)
   18. mul_float                      $0 *= $1
   19. copy_slot_unmasked             f4 = $0
   20. copy_slot_unmasked             $0 = f1
   21. copy_constant                  $1 = 0x3F800000 (1.0)
   22. add_float                      $0 += $1
   23. copy_slot_unmasked             $1 = f2
   24. copy_constant                  $2 = 0x3F800000 (1.0)
   25. add_float                      $1 += $2
   26. copy_slot_unmasked             $2 = f3
   27. copy_constant                  $3 = 0x3F800000 (1.0)
   28. add_float                      $2 += $3
   29. copy_slot_unmasked             $3 = f4
   30. copy_constant                  $4 = 0x3F800000 (1.0)
   31. add_float                      $3 += $4
   32. copy_4_slots_unmasked          _0_expected = $0..3
   33. copy_constant                  $0 = colorRed(0)
   34. copy_slot_unmasked             _1_one = $0
   35. copy_slot_unmasked             $0 = f1
   36. copy_slot_unmasked             $1 = _1_one
   37. mul_float                      $0 *= $1
   38. copy_slot_unmasked             $1 = f2
   39. copy_slot_unmasked             $2 = _1_one
   40. mul_float                      $1 *= $2
   41. copy_slot_unmasked             $2 = f3
   42. copy_slot_unmasked             $3 = _1_one
   43. mul_float                      $2 *= $3
   44. copy_slot_unmasked             $3 = f4
   45. copy_slot_unmasked             $4 = _1_one
   46. mul_float                      $3 *= $4
   47. copy_4_slots_unmasked          _2_m2 = $0..3
   48. copy_constant                  $4 = 0x3F800000 (1.0)
   49. swizzle_4                      $4..7 = ($4..7).xxxx
   50. add_4_floats                   $0..3 += $4..7
   51. copy_4_slots_unmasked          _2_m2 = $0..3
   52. store_condition_mask           $43 = CondMask
   53. store_condition_mask           $30 = CondMask
   54. store_condition_mask           $17 = CondMask
   55. store_condition_mask           $12 = CondMask
   56. copy_slot_unmasked             $13 = _2_m2(0)
   57. copy_slot_unmasked             $14 = _0_expected(0)
   58. cmpeq_float                    $13 = equal($13, $14)
   59. copy_2_slots_unmasked          $14..15 = _2_m2(0..1)
   60. swizzle_1                      $14 = ($14..15).y
   61. copy_2_slots_unmasked          $15..16 = _0_expected(0..1)
   62. swizzle_1                      $15 = ($15..16).y
   63. cmpeq_float                    $14 = equal($14, $15)
   64. bitwise_and_int                $13 &= $14
   65. copy_slot_unmasked             $14 = _2_m2(2)
   66. copy_slot_unmasked             $15 = _0_expected(2)
   67. cmpeq_float                    $14 = equal($14, $15)
   68. bitwise_and_int                $13 &= $14
   69. copy_2_slots_unmasked          $14..15 = _2_m2(2..3)
   70. swizzle_1                      $14 = ($14..15).y
   71. copy_2_slots_unmasked          $15..16 = _0_expected(2..3)
   72. swizzle_1                      $15 = ($15..16).y
   73. cmpeq_float                    $14 = equal($14, $15)
   74. bitwise_and_int                $13 &= $14
   75. zero_slot_unmasked             $18 = 0
   76. merge_condition_mask           CondMask = $12 & $13
   77. branch_if_no_active_lanes      branch_if_no_active_lanes +93 (label 4 at #170)
   78. copy_slot_unmasked             op = minus
   79. copy_4_slots_unmasked          m11, m12, m21, m22 = f1, f2, f3, f4
   80. copy_slot_unmasked             $19 = f1
   81. copy_constant                  $20 = 0x3F800000 (1.0)
   82. sub_float                      $19 -= $20
   83. copy_slot_unmasked             $20 = f2
   84. copy_constant                  $21 = 0x3F800000 (1.0)
   85. sub_float                      $20 -= $21
   86. copy_slot_unmasked             $21 = f3
   87. copy_constant                  $22 = 0x3F800000 (1.0)
   88. sub_float                      $21 -= $22
   89. copy_slot_unmasked             $22 = f4
   90. copy_constant                  $23 = 0x3F800000 (1.0)
   91. sub_float                      $22 -= $23
   92. copy_4_slots_unmasked          expected = $19..22
   93. copy_constant                  $19 = colorRed(0)
   94. copy_slot_unmasked             one = $19
   95. copy_slot_unmasked             $19 = m11
   96. copy_slot_unmasked             $20 = one
   97. mul_float                      $19 *= $20
   98. copy_slot_unmasked             $20 = m12
   99. copy_slot_unmasked             $21 = one
  100. mul_float                      $20 *= $21
  101. copy_slot_unmasked             $21 = m21
  102. copy_slot_unmasked             $22 = one
  103. mul_float                      $21 *= $22
  104. copy_slot_unmasked             $22 = m22
  105. copy_slot_unmasked             $23 = one
  106. mul_float                      $22 *= $23
  107. copy_4_slots_unmasked          m2 = $19..22
  108. store_loop_mask                $19 = LoopMask
  109. copy_slot_unmasked             $20 = op
  110. store_loop_mask                $21 = LoopMask
  111. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  112. case_op                        if ($20 == 0x00000001) { LoopMask = true; $21 = false; }
  113. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 6 at #120)
  114. copy_4_slots_unmasked          $22..25 = m2
  115. copy_constant                  $26 = 0x3F800000 (1.0)
  116. swizzle_4                      $26..29 = ($26..29).xxxx
  117. add_4_floats                   $22..25 += $26..29
  118. copy_4_slots_masked            m2 = Mask($22..25)
  119. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  120. label                          label 0x00000006
  121. case_op                        if ($20 == 0x00000002) { LoopMask = true; $21 = false; }
  122. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 7 at #129)
  123. copy_4_slots_unmasked          $22..25 = m2
  124. copy_constant                  $26 = 0x3F800000 (1.0)
  125. swizzle_4                      $26..29 = ($26..29).xxxx
  126. sub_4_floats                   $22..25 -= $26..29
  127. copy_4_slots_masked            m2 = Mask($22..25)
  128. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  129. label                          label 0x00000007
  130. case_op                        if ($20 == 0x00000003) { LoopMask = true; $21 = false; }
  131. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 8 at #138)
  132. copy_4_slots_unmasked          $22..25 = m2
  133. copy_constant                  $26 = 0x40000000 (2.0)
  134. swizzle_4                      $26..29 = ($26..29).xxxx
  135. mul_4_floats                   $22..25 *= $26..29
  136. copy_4_slots_masked            m2 = Mask($22..25)
  137. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  138. label                          label 0x00000008
  139. case_op                        if ($20 == 0x00000004) { LoopMask = true; $21 = false; }
  140. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 9 at #147)
  141. copy_4_slots_unmasked          $22..25 = m2
  142. copy_constant                  $26 = 0x3F000000 (0.5)
  143. swizzle_4                      $26..29 = ($26..29).xxxx
  144. mul_4_floats                   $22..25 *= $26..29
  145. copy_4_slots_masked            m2 = Mask($22..25)
  146. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  147. label                          label 0x00000009
  148. load_loop_mask                 LoopMask = $19
  149. copy_slot_unmasked             $19 = m2(0)
  150. copy_slot_unmasked             $20 = expected(0)
  151. cmpeq_float                    $19 = equal($19, $20)
  152. copy_2_slots_unmasked          $20..21 = m2(0..1)
  153. swizzle_1                      $20 = ($20..21).y
  154. copy_2_slots_unmasked          $21..22 = expected(0..1)
  155. swizzle_1                      $21 = ($21..22).y
  156. cmpeq_float                    $20 = equal($20, $21)
  157. bitwise_and_int                $19 &= $20
  158. copy_slot_unmasked             $20 = m2(2)
  159. copy_slot_unmasked             $21 = expected(2)
  160. cmpeq_float                    $20 = equal($20, $21)
  161. bitwise_and_int                $19 &= $20
  162. copy_2_slots_unmasked          $20..21 = m2(2..3)
  163. swizzle_1                      $20 = ($20..21).y
  164. copy_2_slots_unmasked          $21..22 = expected(2..3)
  165. swizzle_1                      $21 = ($21..22).y
  166. cmpeq_float                    $20 = equal($20, $21)
  167. bitwise_and_int                $19 &= $20
  168. label                          label 0x00000005
  169. copy_slot_masked               $18 = Mask($19)
  170. label                          label 0x00000004
  171. load_condition_mask            CondMask = $12
  172. zero_slot_unmasked             $31 = 0
  173. merge_condition_mask           CondMask = $17 & $18
  174. branch_if_no_active_lanes      branch_if_no_active_lanes +93 (label 3 at #267)
  175. copy_slot_unmasked             op = star
  176. copy_4_slots_unmasked          m11, m12, m21, m22 = f1, f2, f3, f4
  177. copy_slot_unmasked             $32 = f1
  178. copy_constant                  $33 = 0x40000000 (2.0)
  179. mul_float                      $32 *= $33
  180. copy_slot_unmasked             $33 = f2
  181. copy_constant                  $34 = 0x40000000 (2.0)
  182. mul_float                      $33 *= $34
  183. copy_slot_unmasked             $34 = f3
  184. copy_constant                  $35 = 0x40000000 (2.0)
  185. mul_float                      $34 *= $35
  186. copy_slot_unmasked             $35 = f4
  187. copy_constant                  $36 = 0x40000000 (2.0)
  188. mul_float                      $35 *= $36
  189. copy_4_slots_unmasked          expected = $32..35
  190. copy_constant                  $32 = colorRed(0)
  191. copy_slot_unmasked             one = $32
  192. copy_slot_unmasked             $32 = m11
  193. copy_slot_unmasked             $33 = one
  194. mul_float                      $32 *= $33
  195. copy_slot_unmasked             $33 = m12
  196. copy_slot_unmasked             $34 = one
  197. mul_float                      $33 *= $34
  198. copy_slot_unmasked             $34 = m21
  199. copy_slot_unmasked             $35 = one
  200. mul_float                      $34 *= $35
  201. copy_slot_unmasked             $35 = m22
  202. copy_slot_unmasked             $36 = one
  203. mul_float                      $35 *= $36
  204. copy_4_slots_unmasked          m2 = $32..35
  205. store_loop_mask                $32 = LoopMask
  206. copy_slot_unmasked             $33 = op
  207. store_loop_mask                $34 = LoopMask
  208. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  209. case_op                        if ($33 == 0x00000001) { LoopMask = true; $34 = false; }
  210. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 11 at #217)
  211. copy_4_slots_unmasked          $35..38 = m2
  212. copy_constant                  $39 = 0x3F800000 (1.0)
  213. swizzle_4                      $39..42 = ($39..42).xxxx
  214. add_4_floats                   $35..38 += $39..42
  215. copy_4_slots_masked            m2 = Mask($35..38)
  216. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  217. label                          label 0x0000000B
  218. case_op                        if ($33 == 0x00000002) { LoopMask = true; $34 = false; }
  219. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 12 at #226)
  220. copy_4_slots_unmasked          $35..38 = m2
  221. copy_constant                  $39 = 0x3F800000 (1.0)
  222. swizzle_4                      $39..42 = ($39..42).xxxx
  223. sub_4_floats                   $35..38 -= $39..42
  224. copy_4_slots_masked            m2 = Mask($35..38)
  225. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  226. label                          label 0x0000000C
  227. case_op                        if ($33 == 0x00000003) { LoopMask = true; $34 = false; }
  228. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 13 at #235)
  229. copy_4_slots_unmasked          $35..38 = m2
  230. copy_constant                  $39 = 0x40000000 (2.0)
  231. swizzle_4                      $39..42 = ($39..42).xxxx
  232. mul_4_floats                   $35..38 *= $39..42
  233. copy_4_slots_masked            m2 = Mask($35..38)
  234. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  235. label                          label 0x0000000D
  236. case_op                        if ($33 == 0x00000004) { LoopMask = true; $34 = false; }
  237. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 14 at #244)
  238. copy_4_slots_unmasked          $35..38 = m2
  239. copy_constant                  $39 = 0x3F000000 (0.5)
  240. swizzle_4                      $39..42 = ($39..42).xxxx
  241. mul_4_floats                   $35..38 *= $39..42
  242. copy_4_slots_masked            m2 = Mask($35..38)
  243. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  244. label                          label 0x0000000E
  245. load_loop_mask                 LoopMask = $32
  246. copy_slot_unmasked             $32 = m2(0)
  247. copy_slot_unmasked             $33 = expected(0)
  248. cmpeq_float                    $32 = equal($32, $33)
  249. copy_2_slots_unmasked          $33..34 = m2(0..1)
  250. swizzle_1                      $33 = ($33..34).y
  251. copy_2_slots_unmasked          $34..35 = expected(0..1)
  252. swizzle_1                      $34 = ($34..35).y
  253. cmpeq_float                    $33 = equal($33, $34)
  254. bitwise_and_int                $32 &= $33
  255. copy_slot_unmasked             $33 = m2(2)
  256. copy_slot_unmasked             $34 = expected(2)
  257. cmpeq_float                    $33 = equal($33, $34)
  258. bitwise_and_int                $32 &= $33
  259. copy_2_slots_unmasked          $33..34 = m2(2..3)
  260. swizzle_1                      $33 = ($33..34).y
  261. copy_2_slots_unmasked          $34..35 = expected(2..3)
  262. swizzle_1                      $34 = ($34..35).y
  263. cmpeq_float                    $33 = equal($33, $34)
  264. bitwise_and_int                $32 &= $33
  265. label                          label 0x0000000A
  266. copy_slot_masked               $31 = Mask($32)
  267. label                          label 0x00000003
  268. load_condition_mask            CondMask = $17
  269. zero_slot_unmasked             $44 = 0
  270. merge_condition_mask           CondMask = $30 & $31
  271. branch_if_no_active_lanes      branch_if_no_active_lanes +93 (label 2 at #364)
  272. copy_slot_unmasked             op = slash
  273. copy_4_slots_unmasked          m11, m12, m21, m22 = f1, f2, f3, f4
  274. copy_slot_unmasked             $45 = f1
  275. copy_constant                  $46 = 0x3F000000 (0.5)
  276. mul_float                      $45 *= $46
  277. copy_slot_unmasked             $46 = f2
  278. copy_constant                  $47 = 0x3F000000 (0.5)
  279. mul_float                      $46 *= $47
  280. copy_slot_unmasked             $47 = f3
  281. copy_constant                  $48 = 0x3F000000 (0.5)
  282. mul_float                      $47 *= $48
  283. copy_slot_unmasked             $48 = f4
  284. copy_constant                  $49 = 0x3F000000 (0.5)
  285. mul_float                      $48 *= $49
  286. copy_4_slots_unmasked          expected = $45..48
  287. copy_constant                  $45 = colorRed(0)
  288. copy_slot_unmasked             one = $45
  289. copy_slot_unmasked             $45 = m11
  290. copy_slot_unmasked             $46 = one
  291. mul_float                      $45 *= $46
  292. copy_slot_unmasked             $46 = m12
  293. copy_slot_unmasked             $47 = one
  294. mul_float                      $46 *= $47
  295. copy_slot_unmasked             $47 = m21
  296. copy_slot_unmasked             $48 = one
  297. mul_float                      $47 *= $48
  298. copy_slot_unmasked             $48 = m22
  299. copy_slot_unmasked             $49 = one
  300. mul_float                      $48 *= $49
  301. copy_4_slots_unmasked          m2 = $45..48
  302. store_loop_mask                $45 = LoopMask
  303. copy_slot_unmasked             $46 = op
  304. store_loop_mask                $47 = LoopMask
  305. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  306. case_op                        if ($46 == 0x00000001) { LoopMask = true; $47 = false; }
  307. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 16 at #314)
  308. copy_4_slots_unmasked          $48..51 = m2
  309. copy_constant                  $52 = 0x3F800000 (1.0)
  310. swizzle_4                      $52..55 = ($52..55).xxxx
  311. add_4_floats                   $48..51 += $52..55
  312. copy_4_slots_masked            m2 = Mask($48..51)
  313. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  314. label                          label 0x00000010
  315. case_op                        if ($46 == 0x00000002) { LoopMask = true; $47 = false; }
  316. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 17 at #323)
  317. copy_4_slots_unmasked          $48..51 = m2
  318. copy_constant                  $52 = 0x3F800000 (1.0)
  319. swizzle_4                      $52..55 = ($52..55).xxxx
  320. sub_4_floats                   $48..51 -= $52..55
  321. copy_4_slots_masked            m2 = Mask($48..51)
  322. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  323. label                          label 0x00000011
  324. case_op                        if ($46 == 0x00000003) { LoopMask = true; $47 = false; }
  325. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 18 at #332)
  326. copy_4_slots_unmasked          $48..51 = m2
  327. copy_constant                  $52 = 0x40000000 (2.0)
  328. swizzle_4                      $52..55 = ($52..55).xxxx
  329. mul_4_floats                   $48..51 *= $52..55
  330. copy_4_slots_masked            m2 = Mask($48..51)
  331. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  332. label                          label 0x00000012
  333. case_op                        if ($46 == 0x00000004) { LoopMask = true; $47 = false; }
  334. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 19 at #341)
  335. copy_4_slots_unmasked          $48..51 = m2
  336. copy_constant                  $52 = 0x3F000000 (0.5)
  337. swizzle_4                      $52..55 = ($52..55).xxxx
  338. mul_4_floats                   $48..51 *= $52..55
  339. copy_4_slots_masked            m2 = Mask($48..51)
  340. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  341. label                          label 0x00000013
  342. load_loop_mask                 LoopMask = $45
  343. copy_slot_unmasked             $45 = m2(0)
  344. copy_slot_unmasked             $46 = expected(0)
  345. cmpeq_float                    $45 = equal($45, $46)
  346. copy_2_slots_unmasked          $46..47 = m2(0..1)
  347. swizzle_1                      $46 = ($46..47).y
  348. copy_2_slots_unmasked          $47..48 = expected(0..1)
  349. swizzle_1                      $47 = ($47..48).y
  350. cmpeq_float                    $46 = equal($46, $47)
  351. bitwise_and_int                $45 &= $46
  352. copy_slot_unmasked             $46 = m2(2)
  353. copy_slot_unmasked             $47 = expected(2)
  354. cmpeq_float                    $46 = equal($46, $47)
  355. bitwise_and_int                $45 &= $46
  356. copy_2_slots_unmasked          $46..47 = m2(2..3)
  357. swizzle_1                      $46 = ($46..47).y
  358. copy_2_slots_unmasked          $47..48 = expected(2..3)
  359. swizzle_1                      $47 = ($47..48).y
  360. cmpeq_float                    $46 = equal($46, $47)
  361. bitwise_and_int                $45 &= $46
  362. label                          label 0x0000000F
  363. copy_slot_masked               $44 = Mask($45)
  364. label                          label 0x00000002
  365. load_condition_mask            CondMask = $30
  366. zero_slot_unmasked             $0 = 0
  367. merge_condition_mask           CondMask = $43 & $44
  368. branch_if_no_active_lanes      branch_if_no_active_lanes +45 (label 1 at #413)
  369. copy_constant                  $1 = colorRed(0)
  370. copy_constant                  $2 = 0x41200000 (10.0)
  371. mul_float                      $1 *= $2
  372. copy_slot_unmasked             ten = $1
  373. copy_slot_unmasked             $2 = $1
  374. copy_slot_unmasked             $3 = ten
  375. copy_slot_unmasked             $4 = $3
  376. copy_4_slots_unmasked          mat = $1..4
  377. copy_constant                  $5 = 0x3F800000 (1.0)
  378. copy_constant                  $6 = testInputs(0)
  379. div_float                      $5 /= $6
  380. swizzle_4                      $5..8 = ($5..8).xxxx
  381. mul_4_floats                   $1..4 *= $5..8
  382. copy_4_slots_unmasked          div = $1..4
  383. copy_4_slots_unmasked          $1..4 = mat
  384. copy_constant                  $5 = 0x3F800000 (1.0)
  385. copy_constant                  $6 = testInputs(0)
  386. div_float                      $5 /= $6
  387. swizzle_4                      $5..8 = ($5..8).xxxx
  388. mul_4_floats                   $1..4 *= $5..8
  389. copy_4_slots_masked            mat = Mask($1..4)
  390. copy_4_slots_unmasked          $1..4 = div
  391. copy_constant                  $5 = 0x41000000 (8.0)
  392. swizzle_4                      $5..8 = ($5..8).xxxx
  393. add_4_floats                   $1..4 += $5..8
  394. abs_4_floats                   $1..4 = abs($1..4)
  395. copy_constant                  $5 = 0x3C23D70A (0.01)
  396. swizzle_4                      $5..8 = ($5..8).xxxx
  397. cmplt_4_floats                 $1..4 = lessThan($1..4, $5..8)
  398. bitwise_and_2_ints             $1..2 &= $3..4
  399. bitwise_and_int                $1 &= $2
  400. copy_4_slots_unmasked          $2..5 = mat
  401. copy_constant                  $6 = 0x41000000 (8.0)
  402. swizzle_4                      $6..9 = ($6..9).xxxx
  403. add_4_floats                   $2..5 += $6..9
  404. abs_4_floats                   $2..5 = abs($2..5)
  405. copy_constant                  $6 = 0x3C23D70A (0.01)
  406. swizzle_4                      $6..9 = ($6..9).xxxx
  407. cmplt_4_floats                 $2..5 = lessThan($2..5, $6..9)
  408. bitwise_and_2_ints             $2..3 &= $4..5
  409. bitwise_and_int                $2 &= $3
  410. bitwise_and_int                $1 &= $2
  411. label                          label 0x00000014
  412. copy_slot_masked               $0 = Mask($1)
  413. label                          label 0x00000001
  414. load_condition_mask            CondMask = $43
  415. swizzle_4                      $0..3 = ($0..3).xxxx
  416. copy_4_constants               $4..7 = colorRed
  417. copy_4_constants               $8..11 = colorGreen
  418. mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
  419. load_src                       src.rgba = $0..3
