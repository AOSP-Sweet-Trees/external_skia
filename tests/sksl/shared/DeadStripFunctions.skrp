    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_4_slots_unmasked          a = 0
    4. zero_4_slots_unmasked          b = 0
    5. branch_if_no_active_lanes      branch_if_no_active_lanes +15 (#20)
    6. store_return_mask              $0 = RetMask
    7. copy_constant                  $1 = 0x40400000 (3.0)
    8. swizzle_4                      $1..4 = ($1..4).xxxx
    9. copy_4_slots_unmasked          a = $1..4
   10. copy_constant                  $1 = 0xC0A00000 (-5.0)
   11. swizzle_4                      $1..4 = ($1..4).xxxx
   12. copy_4_slots_unmasked          b = $1..4
   13. copy_4_slots_unmasked          $1..4 = a
   14. copy_4_slots_unmasked          $5..8 = b
   15. add_4_floats                   $1..4 += $5..8
   16. copy_4_slots_masked            [live_fn].result = Mask($1..4)
   17. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   18. load_return_mask               RetMask = $0
   19. copy_4_slots_unmasked          $0..3 = [live_fn].result
   20. copy_4_slots_masked            a = Mask($0..3)
   21. branch_if_no_active_lanes      branch_if_no_active_lanes +16 (#37)
   22. store_return_mask              $0 = RetMask
   23. copy_constant                  $1 = 0x3F800000 (1.0)
   24. swizzle_4                      $1..4 = ($1..4).xxxx
   25. copy_4_slots_unmasked          color = $1..4
   26. copy_3_slots_unmasked          $1..3 = color(0..2)
   27. copy_slot_unmasked             $4 = color(3)
   28. copy_constant                  $5 = 0x38D1B717 (0.0001)
   29. max_float                      $4 = max($4, $5)
   30. swizzle_3                      $4..6 = ($4..6).xxx
   31. div_3_floats                   $1..3 /= $4..6
   32. copy_slot_unmasked             $4 = color(3)
   33. copy_4_slots_masked            [unpremul].result = Mask($1..4)
   34. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   35. load_return_mask               RetMask = $0
   36. copy_4_slots_unmasked          $0..3 = [unpremul].result
   37. copy_4_slots_masked            b = Mask($0..3)
   38. store_condition_mask           $9 = CondMask
   39. copy_4_slots_unmasked          $10..13 = a
   40. zero_slot_unmasked             $14 = 0
   41. swizzle_4                      $14..17 = ($14..17).xxxx
   42. cmpne_4_floats                 $10..13 = notEqual($10..13, $14..17)
   43. bitwise_or_2_ints              $10..11 |= $12..13
   44. bitwise_or_int                 $10 |= $11
   45. copy_4_slots_unmasked          $11..14 = b
   46. zero_slot_unmasked             $15 = 0
   47. swizzle_4                      $15..18 = ($15..18).xxxx
   48. cmpne_4_floats                 $11..14 = notEqual($11..14, $15..18)
   49. bitwise_or_2_ints              $11..12 |= $13..14
   50. bitwise_or_int                 $11 |= $12
   51. bitwise_and_int                $10 &= $11
   52. copy_4_constants               $0..3 = colorRed
   53. merge_condition_mask           CondMask = $9 & $10
   54. copy_4_constants               $4..7 = colorGreen
   55. copy_4_slots_masked            $0..3 = Mask($4..7)
   56. load_condition_mask            CondMask = $9
   57. copy_4_slots_masked            [main].result = Mask($0..3)
   58. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   59. load_src                       src.rgba = [main].result
