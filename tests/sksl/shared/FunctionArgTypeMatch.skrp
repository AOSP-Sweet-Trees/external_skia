    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $152 = CondMask
    4. store_condition_mask           $28 = CondMask
    5. store_condition_mask           $117 = CondMask
    6. store_condition_mask           $8 = CondMask
    7. store_condition_mask           $48 = CondMask
    8. store_condition_mask           $34 = CondMask
    9. store_condition_mask           $12 = CondMask
   10. store_condition_mask           $40 = CondMask
   11. store_condition_mask           $73 = CondMask
   12. store_condition_mask           $55 = CondMask
   13. store_condition_mask           $17 = CondMask
   14. store_condition_mask           $141 = CondMask
   15. store_condition_mask           $67 = CondMask
   16. store_condition_mask           $136 = CondMask
   17. store_condition_mask           $24 = CondMask
   18. store_condition_mask           $159 = CondMask
   19. store_condition_mask           $122 = CondMask
   20. store_condition_mask           $99 = CondMask
   21. store_condition_mask           $92 = CondMask
   22. store_condition_mask           $106 = CondMask
   23. store_condition_mask           $112 = CondMask
   24. store_condition_mask           $148 = CondMask
   25. store_condition_mask           $44 = CondMask
   26. store_condition_mask           $134 = CondMask
   27. copy_constant                  $135 = 0xFFFFFFFF
   28. zero_slot_unmasked             $45 = 0
   29. merge_condition_mask           CondMask = $134 & $135
   30. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#37)
   31. store_return_mask              $46 = RetMask
   32. copy_constant                  $47 = 0xFFFFFFFF
   33. copy_slot_masked               [takes_void].result = Mask($47)
   34. load_return_mask               RetMask = $46
   35. copy_slot_unmasked             $46 = [takes_void].result
   36. copy_slot_masked               $45 = Mask($46)
   37. load_condition_mask            CondMask = $134
   38. zero_slot_unmasked             $149 = 0
   39. merge_condition_mask           CondMask = $44 & $45
   40. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#49)
   41. store_return_mask              $150 = RetMask
   42. copy_constant                  $151 = 0x3F800000 (1.0)
   43. copy_slot_unmasked             x = $151
   44. copy_constant                  $151 = 0xFFFFFFFF
   45. copy_slot_masked               [takes_float].result = Mask($151)
   46. load_return_mask               RetMask = $150
   47. copy_slot_unmasked             $150 = [takes_float].result
   48. copy_slot_masked               $149 = Mask($150)
   49. load_condition_mask            CondMask = $44
   50. zero_slot_unmasked             $113 = 0
   51. merge_condition_mask           CondMask = $148 & $149
   52. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#62)
   53. store_return_mask              $114 = RetMask
   54. copy_constant                  $115 = 0x40000000 (2.0)
   55. copy_slot_unmasked             $116 = $115
   56. copy_2_slots_unmasked          x = $115..116
   57. copy_constant                  $115 = 0xFFFFFFFF
   58. copy_slot_masked               [takes_float2].result = Mask($115)
   59. load_return_mask               RetMask = $114
   60. copy_slot_unmasked             $114 = [takes_float2].result
   61. copy_slot_masked               $113 = Mask($114)
   62. load_condition_mask            CondMask = $148
   63. zero_slot_unmasked             $107 = 0
   64. merge_condition_mask           CondMask = $112 & $113
   65. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#75)
   66. store_return_mask              $108 = RetMask
   67. copy_constant                  $109 = 0x40400000 (3.0)
   68. swizzle_3                      $109..111 = ($109..111).xxx
   69. copy_3_slots_unmasked          x = $109..111
   70. copy_constant                  $109 = 0xFFFFFFFF
   71. copy_slot_masked               [takes_float3].result = Mask($109)
   72. load_return_mask               RetMask = $108
   73. copy_slot_unmasked             $108 = [takes_float3].result
   74. copy_slot_masked               $107 = Mask($108)
   75. load_condition_mask            CondMask = $112
   76. zero_slot_unmasked             $93 = 0
   77. merge_condition_mask           CondMask = $106 & $107
   78. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#88)
   79. store_return_mask              $94 = RetMask
   80. copy_constant                  $95 = 0x40800000 (4.0)
   81. swizzle_4                      $95..98 = ($95..98).xxxx
   82. copy_4_slots_unmasked          x = $95..98
   83. copy_constant                  $95 = 0xFFFFFFFF
   84. copy_slot_masked               [takes_float4].result = Mask($95)
   85. load_return_mask               RetMask = $94
   86. copy_slot_unmasked             $94 = [takes_float4].result
   87. copy_slot_masked               $93 = Mask($94)
   88. load_condition_mask            CondMask = $106
   89. zero_slot_unmasked             $100 = 0
   90. merge_condition_mask           CondMask = $92 & $93
   91. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#102)
   92. store_return_mask              $101 = RetMask
   93. zero_slot_unmasked             $102 = 0
   94. copy_constant                  $103 = 0x40000000 (2.0)
   95. swizzle_4                      $102..105 = ($102..105).yxxy
   96. copy_4_slots_unmasked          x = $102..105
   97. copy_constant                  $102 = 0xFFFFFFFF
   98. copy_slot_masked               [takes_float2x2].result = Mask($102)
   99. load_return_mask               RetMask = $101
  100. copy_slot_unmasked             $101 = [takes_float2x2].result
  101. copy_slot_masked               $100 = Mask($101)
  102. load_condition_mask            CondMask = $92
  103. zero_slot_unmasked             $123 = 0
  104. merge_condition_mask           CondMask = $99 & $100
  105. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (#118)
  106. store_return_mask              $124 = RetMask
  107. zero_slot_unmasked             $125 = 0
  108. copy_constant                  $126 = 0x40400000 (3.0)
  109. shuffle                        $125..133 = ($125..133)[1 0 0 0 1 0 0 0 1]
  110. copy_4_slots_unmasked          x(0..3) = $125..128
  111. copy_4_slots_unmasked          x(4..7) = $129..132
  112. copy_slot_unmasked             x(8) = $133
  113. copy_constant                  $125 = 0xFFFFFFFF
  114. copy_slot_masked               [takes_float3x3].result = Mask($125)
  115. load_return_mask               RetMask = $124
  116. copy_slot_unmasked             $124 = [takes_float3x3].result
  117. copy_slot_masked               $123 = Mask($124)
  118. load_condition_mask            CondMask = $99
  119. zero_slot_unmasked             $160 = 0
  120. merge_condition_mask           CondMask = $122 & $123
  121. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (#135)
  122. store_return_mask              $161 = RetMask
  123. zero_slot_unmasked             $162 = 0
  124. copy_constant                  $163 = 0x40800000 (4.0)
  125. shuffle                        $162..177 = ($162..177)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  126. copy_4_slots_unmasked          x(0..3) = $162..165
  127. copy_4_slots_unmasked          x(4..7) = $166..169
  128. copy_4_slots_unmasked          x(8..11) = $170..173
  129. copy_4_slots_unmasked          x(12..15) = $174..177
  130. copy_constant                  $162 = 0xFFFFFFFF
  131. copy_slot_masked               [takes_float4x4].result = Mask($162)
  132. load_return_mask               RetMask = $161
  133. copy_slot_unmasked             $161 = [takes_float4x4].result
  134. copy_slot_masked               $160 = Mask($161)
  135. load_condition_mask            CondMask = $122
  136. zero_slot_unmasked             $25 = 0
  137. merge_condition_mask           CondMask = $159 & $160
  138. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#147)
  139. store_return_mask              $26 = RetMask
  140. copy_constant                  $27 = 0x3F800000 (1.0)
  141. copy_slot_unmasked             x = $27
  142. copy_constant                  $27 = 0xFFFFFFFF
  143. copy_slot_masked               [takes_half].result = Mask($27)
  144. load_return_mask               RetMask = $26
  145. copy_slot_unmasked             $26 = [takes_half].result
  146. copy_slot_masked               $25 = Mask($26)
  147. load_condition_mask            CondMask = $159
  148. zero_slot_unmasked             $137 = 0
  149. merge_condition_mask           CondMask = $24 & $25
  150. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#160)
  151. store_return_mask              $138 = RetMask
  152. copy_constant                  $139 = 0x40000000 (2.0)
  153. copy_slot_unmasked             $140 = $139
  154. copy_2_slots_unmasked          x = $139..140
  155. copy_constant                  $139 = 0xFFFFFFFF
  156. copy_slot_masked               [takes_half2].result = Mask($139)
  157. load_return_mask               RetMask = $138
  158. copy_slot_unmasked             $138 = [takes_half2].result
  159. copy_slot_masked               $137 = Mask($138)
  160. load_condition_mask            CondMask = $24
  161. zero_slot_unmasked             $68 = 0
  162. merge_condition_mask           CondMask = $136 & $137
  163. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#173)
  164. store_return_mask              $69 = RetMask
  165. copy_constant                  $70 = 0x40400000 (3.0)
  166. swizzle_3                      $70..72 = ($70..72).xxx
  167. copy_3_slots_unmasked          x = $70..72
  168. copy_constant                  $70 = 0xFFFFFFFF
  169. copy_slot_masked               [takes_half3].result = Mask($70)
  170. load_return_mask               RetMask = $69
  171. copy_slot_unmasked             $69 = [takes_half3].result
  172. copy_slot_masked               $68 = Mask($69)
  173. load_condition_mask            CondMask = $136
  174. zero_slot_unmasked             $142 = 0
  175. merge_condition_mask           CondMask = $67 & $68
  176. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#186)
  177. store_return_mask              $143 = RetMask
  178. copy_constant                  $144 = 0x40800000 (4.0)
  179. swizzle_4                      $144..147 = ($144..147).xxxx
  180. copy_4_slots_unmasked          x = $144..147
  181. copy_constant                  $144 = 0xFFFFFFFF
  182. copy_slot_masked               [takes_half4].result = Mask($144)
  183. load_return_mask               RetMask = $143
  184. copy_slot_unmasked             $143 = [takes_half4].result
  185. copy_slot_masked               $142 = Mask($143)
  186. load_condition_mask            CondMask = $67
  187. zero_slot_unmasked             $18 = 0
  188. merge_condition_mask           CondMask = $141 & $142
  189. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#200)
  190. store_return_mask              $19 = RetMask
  191. zero_slot_unmasked             $20 = 0
  192. copy_constant                  $21 = 0x40000000 (2.0)
  193. swizzle_4                      $20..23 = ($20..23).yxxy
  194. copy_4_slots_unmasked          x = $20..23
  195. copy_constant                  $20 = 0xFFFFFFFF
  196. copy_slot_masked               [takes_half2x2].result = Mask($20)
  197. load_return_mask               RetMask = $19
  198. copy_slot_unmasked             $19 = [takes_half2x2].result
  199. copy_slot_masked               $18 = Mask($19)
  200. load_condition_mask            CondMask = $141
  201. zero_slot_unmasked             $56 = 0
  202. merge_condition_mask           CondMask = $17 & $18
  203. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (#216)
  204. store_return_mask              $57 = RetMask
  205. zero_slot_unmasked             $58 = 0
  206. copy_constant                  $59 = 0x40400000 (3.0)
  207. shuffle                        $58..66 = ($58..66)[1 0 0 0 1 0 0 0 1]
  208. copy_4_slots_unmasked          x(0..3) = $58..61
  209. copy_4_slots_unmasked          x(4..7) = $62..65
  210. copy_slot_unmasked             x(8) = $66
  211. copy_constant                  $58 = 0xFFFFFFFF
  212. copy_slot_masked               [takes_half3x3].result = Mask($58)
  213. load_return_mask               RetMask = $57
  214. copy_slot_unmasked             $57 = [takes_half3x3].result
  215. copy_slot_masked               $56 = Mask($57)
  216. load_condition_mask            CondMask = $17
  217. zero_slot_unmasked             $74 = 0
  218. merge_condition_mask           CondMask = $55 & $56
  219. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (#233)
  220. store_return_mask              $75 = RetMask
  221. zero_slot_unmasked             $76 = 0
  222. copy_constant                  $77 = 0x40800000 (4.0)
  223. shuffle                        $76..91 = ($76..91)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  224. copy_4_slots_unmasked          x(0..3) = $76..79
  225. copy_4_slots_unmasked          x(4..7) = $80..83
  226. copy_4_slots_unmasked          x(8..11) = $84..87
  227. copy_4_slots_unmasked          x(12..15) = $88..91
  228. copy_constant                  $76 = 0xFFFFFFFF
  229. copy_slot_masked               [takes_half4x4].result = Mask($76)
  230. load_return_mask               RetMask = $75
  231. copy_slot_unmasked             $75 = [takes_half4x4].result
  232. copy_slot_masked               $74 = Mask($75)
  233. load_condition_mask            CondMask = $55
  234. zero_slot_unmasked             $41 = 0
  235. merge_condition_mask           CondMask = $73 & $74
  236. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#245)
  237. store_return_mask              $42 = RetMask
  238. copy_constant                  $43 = 0xFFFFFFFF
  239. copy_slot_unmasked             x = $43
  240. copy_constant                  $43 = 0xFFFFFFFF
  241. copy_slot_masked               [takes_bool].result = Mask($43)
  242. load_return_mask               RetMask = $42
  243. copy_slot_unmasked             $42 = [takes_bool].result
  244. copy_slot_masked               $41 = Mask($42)
  245. load_condition_mask            CondMask = $73
  246. zero_slot_unmasked             $13 = 0
  247. merge_condition_mask           CondMask = $40 & $41
  248. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#258)
  249. store_return_mask              $14 = RetMask
  250. copy_constant                  $15 = 0xFFFFFFFF
  251. copy_slot_unmasked             $16 = $15
  252. copy_2_slots_unmasked          x = $15..16
  253. copy_constant                  $15 = 0xFFFFFFFF
  254. copy_slot_masked               [takes_bool2].result = Mask($15)
  255. load_return_mask               RetMask = $14
  256. copy_slot_unmasked             $14 = [takes_bool2].result
  257. copy_slot_masked               $13 = Mask($14)
  258. load_condition_mask            CondMask = $40
  259. zero_slot_unmasked             $35 = 0
  260. merge_condition_mask           CondMask = $12 & $13
  261. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#271)
  262. store_return_mask              $36 = RetMask
  263. copy_constant                  $37 = 0xFFFFFFFF
  264. swizzle_3                      $37..39 = ($37..39).xxx
  265. copy_3_slots_unmasked          x = $37..39
  266. copy_constant                  $37 = 0xFFFFFFFF
  267. copy_slot_masked               [takes_bool3].result = Mask($37)
  268. load_return_mask               RetMask = $36
  269. copy_slot_unmasked             $36 = [takes_bool3].result
  270. copy_slot_masked               $35 = Mask($36)
  271. load_condition_mask            CondMask = $12
  272. zero_slot_unmasked             $49 = 0
  273. merge_condition_mask           CondMask = $34 & $35
  274. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#284)
  275. store_return_mask              $50 = RetMask
  276. copy_constant                  $51 = 0xFFFFFFFF
  277. swizzle_4                      $51..54 = ($51..54).xxxx
  278. copy_4_slots_unmasked          x = $51..54
  279. copy_constant                  $51 = 0xFFFFFFFF
  280. copy_slot_masked               [takes_bool4].result = Mask($51)
  281. load_return_mask               RetMask = $50
  282. copy_slot_unmasked             $50 = [takes_bool4].result
  283. copy_slot_masked               $49 = Mask($50)
  284. load_condition_mask            CondMask = $34
  285. zero_slot_unmasked             $9 = 0
  286. merge_condition_mask           CondMask = $48 & $49
  287. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#296)
  288. store_return_mask              $10 = RetMask
  289. copy_constant                  $11 = 0x00000001 (1.401298e-45)
  290. copy_slot_unmasked             x = $11
  291. copy_constant                  $11 = 0xFFFFFFFF
  292. copy_slot_masked               [takes_int].result = Mask($11)
  293. load_return_mask               RetMask = $10
  294. copy_slot_unmasked             $10 = [takes_int].result
  295. copy_slot_masked               $9 = Mask($10)
  296. load_condition_mask            CondMask = $48
  297. zero_slot_unmasked             $118 = 0
  298. merge_condition_mask           CondMask = $8 & $9
  299. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#309)
  300. store_return_mask              $119 = RetMask
  301. copy_constant                  $120 = 0x00000002 (2.802597e-45)
  302. copy_slot_unmasked             $121 = $120
  303. copy_2_slots_unmasked          x = $120..121
  304. copy_constant                  $120 = 0xFFFFFFFF
  305. copy_slot_masked               [takes_int2].result = Mask($120)
  306. load_return_mask               RetMask = $119
  307. copy_slot_unmasked             $119 = [takes_int2].result
  308. copy_slot_masked               $118 = Mask($119)
  309. load_condition_mask            CondMask = $8
  310. zero_slot_unmasked             $29 = 0
  311. merge_condition_mask           CondMask = $117 & $118
  312. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#322)
  313. store_return_mask              $30 = RetMask
  314. copy_constant                  $31 = 0x00000003 (4.203895e-45)
  315. swizzle_3                      $31..33 = ($31..33).xxx
  316. copy_3_slots_unmasked          x = $31..33
  317. copy_constant                  $31 = 0xFFFFFFFF
  318. copy_slot_masked               [takes_int3].result = Mask($31)
  319. load_return_mask               RetMask = $30
  320. copy_slot_unmasked             $30 = [takes_int3].result
  321. copy_slot_masked               $29 = Mask($30)
  322. load_condition_mask            CondMask = $117
  323. zero_slot_unmasked             $153 = 0
  324. merge_condition_mask           CondMask = $28 & $29
  325. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#335)
  326. store_return_mask              $154 = RetMask
  327. copy_constant                  $155 = 0x00000004 (5.605194e-45)
  328. swizzle_4                      $155..158 = ($155..158).xxxx
  329. copy_4_slots_unmasked          x = $155..158
  330. copy_constant                  $155 = 0xFFFFFFFF
  331. copy_slot_masked               [takes_int4].result = Mask($155)
  332. load_return_mask               RetMask = $154
  333. copy_slot_unmasked             $154 = [takes_int4].result
  334. copy_slot_masked               $153 = Mask($154)
  335. load_condition_mask            CondMask = $28
  336. copy_4_constants               $0..3 = colorRed
  337. merge_condition_mask           CondMask = $152 & $153
  338. copy_4_constants               $4..7 = colorGreen
  339. copy_4_slots_masked            $0..3 = Mask($4..7)
  340. load_condition_mask            CondMask = $152
  341. copy_4_slots_masked            [main].result = Mask($0..3)
  342. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  343. load_src                       src.rgba = [main].result
